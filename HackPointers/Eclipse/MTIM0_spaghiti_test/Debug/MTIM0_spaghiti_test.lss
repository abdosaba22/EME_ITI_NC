
MTIM0_spaghiti_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fa0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001fa0  00002034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800168  00800168  0000213c  2**0
                  ALLOC
  3 .stab         00001410  00000000  00000000  0000213c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000869  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00003db5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b6  00000000  00000000  00003f15  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f0d  00000000  00000000  000040cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010d2  00000000  00000000  00005fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001030  00000000  00000000  000070aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  000080dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002e6  00000000  00000000  0000825c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008f6  00000000  00000000  00008542  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008e38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 d0 0e 	jmp	0x1da0	; 0x1da0 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a3 37       	cpi	r26, 0x73	; 115
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 ea       	ldi	r30, 0xA0	; 160
      78:	ff e1       	ldi	r31, 0x1F	; 31
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 23 0f 	call	0x1e46	; 0x1e46 <main>
      8a:	0c 94 ce 0f 	jmp	0x1f9c	; 0x1f9c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 b3 0f 	jmp	0x1f66	; 0x1f66 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 b3 0f 	jmp	0x1f66	; 0x1f66 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 9f 0f 	jmp	0x1f3e	; 0x1f3e <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 bb 0f 	jmp	0x1f76	; 0x1f76 <__epilogue_restores__+0x10>

0000078a <__gesf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gesf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gesf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gesf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__epilogue_restores__+0x18>

000007ea <__fixsfsi>:
     7ea:	ac e0       	ldi	r26, 0x0C	; 12
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 a7 0f 	jmp	0x1f4e	; 0x1f4e <__prologue_saves__+0x20>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	ce 01       	movw	r24, r28
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	be 01       	movw	r22, r28
     804:	6b 5f       	subi	r22, 0xFB	; 251
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     80c:	8d 81       	ldd	r24, Y+5	; 0x05
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	61 f1       	breq	.+88     	; 0x86a <__stack+0xb>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	50 f1       	brcs	.+84     	; 0x86a <__stack+0xb>
     816:	84 30       	cpi	r24, 0x04	; 4
     818:	21 f4       	brne	.+8      	; 0x822 <__fixsfsi+0x38>
     81a:	8e 81       	ldd	r24, Y+6	; 0x06
     81c:	88 23       	and	r24, r24
     81e:	51 f1       	breq	.+84     	; 0x874 <__stack+0x15>
     820:	2e c0       	rjmp	.+92     	; 0x87e <__stack+0x1f>
     822:	2f 81       	ldd	r18, Y+7	; 0x07
     824:	38 85       	ldd	r19, Y+8	; 0x08
     826:	37 fd       	sbrc	r19, 7
     828:	20 c0       	rjmp	.+64     	; 0x86a <__stack+0xb>
     82a:	6e 81       	ldd	r22, Y+6	; 0x06
     82c:	2f 31       	cpi	r18, 0x1F	; 31
     82e:	31 05       	cpc	r19, r1
     830:	1c f0       	brlt	.+6      	; 0x838 <__fixsfsi+0x4e>
     832:	66 23       	and	r22, r22
     834:	f9 f0       	breq	.+62     	; 0x874 <__stack+0x15>
     836:	23 c0       	rjmp	.+70     	; 0x87e <__stack+0x1f>
     838:	8e e1       	ldi	r24, 0x1E	; 30
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	82 1b       	sub	r24, r18
     83e:	93 0b       	sbc	r25, r19
     840:	29 85       	ldd	r18, Y+9	; 0x09
     842:	3a 85       	ldd	r19, Y+10	; 0x0a
     844:	4b 85       	ldd	r20, Y+11	; 0x0b
     846:	5c 85       	ldd	r21, Y+12	; 0x0c
     848:	04 c0       	rjmp	.+8      	; 0x852 <__fixsfsi+0x68>
     84a:	56 95       	lsr	r21
     84c:	47 95       	ror	r20
     84e:	37 95       	ror	r19
     850:	27 95       	ror	r18
     852:	8a 95       	dec	r24
     854:	d2 f7       	brpl	.-12     	; 0x84a <__fixsfsi+0x60>
     856:	66 23       	and	r22, r22
     858:	b1 f0       	breq	.+44     	; 0x886 <__stack+0x27>
     85a:	50 95       	com	r21
     85c:	40 95       	com	r20
     85e:	30 95       	com	r19
     860:	21 95       	neg	r18
     862:	3f 4f       	sbci	r19, 0xFF	; 255
     864:	4f 4f       	sbci	r20, 0xFF	; 255
     866:	5f 4f       	sbci	r21, 0xFF	; 255
     868:	0e c0       	rjmp	.+28     	; 0x886 <__stack+0x27>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	09 c0       	rjmp	.+18     	; 0x886 <__stack+0x27>
     874:	2f ef       	ldi	r18, 0xFF	; 255
     876:	3f ef       	ldi	r19, 0xFF	; 255
     878:	4f ef       	ldi	r20, 0xFF	; 255
     87a:	5f e7       	ldi	r21, 0x7F	; 127
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e8       	ldi	r21, 0x80	; 128
     886:	b9 01       	movw	r22, r18
     888:	ca 01       	movw	r24, r20
     88a:	2c 96       	adiw	r28, 0x0c	; 12
     88c:	e2 e0       	ldi	r30, 0x02	; 2
     88e:	0c 94 c3 0f 	jmp	0x1f86	; 0x1f86 <__epilogue_restores__+0x20>

00000892 <__floatunsisf>:
     892:	a8 e0       	ldi	r26, 0x08	; 8
     894:	b0 e0       	ldi	r27, 0x00	; 0
     896:	ef e4       	ldi	r30, 0x4F	; 79
     898:	f4 e0       	ldi	r31, 0x04	; 4
     89a:	0c 94 9f 0f 	jmp	0x1f3e	; 0x1f3e <__prologue_saves__+0x10>
     89e:	7b 01       	movw	r14, r22
     8a0:	8c 01       	movw	r16, r24
     8a2:	61 15       	cp	r22, r1
     8a4:	71 05       	cpc	r23, r1
     8a6:	81 05       	cpc	r24, r1
     8a8:	91 05       	cpc	r25, r1
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <__floatunsisf+0x20>
     8ac:	82 e0       	ldi	r24, 0x02	; 2
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	60 c0       	rjmp	.+192    	; 0x972 <__floatunsisf+0xe0>
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	89 83       	std	Y+1, r24	; 0x01
     8b6:	8e e1       	ldi	r24, 0x1E	; 30
     8b8:	c8 2e       	mov	r12, r24
     8ba:	d1 2c       	mov	r13, r1
     8bc:	dc 82       	std	Y+4, r13	; 0x04
     8be:	cb 82       	std	Y+3, r12	; 0x03
     8c0:	ed 82       	std	Y+5, r14	; 0x05
     8c2:	fe 82       	std	Y+6, r15	; 0x06
     8c4:	0f 83       	std	Y+7, r16	; 0x07
     8c6:	18 87       	std	Y+8, r17	; 0x08
     8c8:	c8 01       	movw	r24, r16
     8ca:	b7 01       	movw	r22, r14
     8cc:	0e 94 c2 04 	call	0x984	; 0x984 <__clzsi2>
     8d0:	fc 01       	movw	r30, r24
     8d2:	31 97       	sbiw	r30, 0x01	; 1
     8d4:	f7 ff       	sbrs	r31, 7
     8d6:	3b c0       	rjmp	.+118    	; 0x94e <__floatunsisf+0xbc>
     8d8:	22 27       	eor	r18, r18
     8da:	33 27       	eor	r19, r19
     8dc:	2e 1b       	sub	r18, r30
     8de:	3f 0b       	sbc	r19, r31
     8e0:	57 01       	movw	r10, r14
     8e2:	68 01       	movw	r12, r16
     8e4:	02 2e       	mov	r0, r18
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__floatunsisf+0x5e>
     8e8:	d6 94       	lsr	r13
     8ea:	c7 94       	ror	r12
     8ec:	b7 94       	ror	r11
     8ee:	a7 94       	ror	r10
     8f0:	0a 94       	dec	r0
     8f2:	d2 f7       	brpl	.-12     	; 0x8e8 <__floatunsisf+0x56>
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	a0 e0       	ldi	r26, 0x00	; 0
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	04 c0       	rjmp	.+8      	; 0x90e <__floatunsisf+0x7c>
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	aa 1f       	adc	r26, r26
     90c:	bb 1f       	adc	r27, r27
     90e:	2a 95       	dec	r18
     910:	d2 f7       	brpl	.-12     	; 0x906 <__floatunsisf+0x74>
     912:	01 97       	sbiw	r24, 0x01	; 1
     914:	a1 09       	sbc	r26, r1
     916:	b1 09       	sbc	r27, r1
     918:	8e 21       	and	r24, r14
     91a:	9f 21       	and	r25, r15
     91c:	a0 23       	and	r26, r16
     91e:	b1 23       	and	r27, r17
     920:	00 97       	sbiw	r24, 0x00	; 0
     922:	a1 05       	cpc	r26, r1
     924:	b1 05       	cpc	r27, r1
     926:	21 f0       	breq	.+8      	; 0x930 <__floatunsisf+0x9e>
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	4a 29       	or	r20, r10
     932:	5b 29       	or	r21, r11
     934:	6c 29       	or	r22, r12
     936:	7d 29       	or	r23, r13
     938:	4d 83       	std	Y+5, r20	; 0x05
     93a:	5e 83       	std	Y+6, r21	; 0x06
     93c:	6f 83       	std	Y+7, r22	; 0x07
     93e:	78 87       	std	Y+8, r23	; 0x08
     940:	8e e1       	ldi	r24, 0x1E	; 30
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	8e 1b       	sub	r24, r30
     946:	9f 0b       	sbc	r25, r31
     948:	9c 83       	std	Y+4, r25	; 0x04
     94a:	8b 83       	std	Y+3, r24	; 0x03
     94c:	12 c0       	rjmp	.+36     	; 0x972 <__floatunsisf+0xe0>
     94e:	30 97       	sbiw	r30, 0x00	; 0
     950:	81 f0       	breq	.+32     	; 0x972 <__floatunsisf+0xe0>
     952:	0e 2e       	mov	r0, r30
     954:	04 c0       	rjmp	.+8      	; 0x95e <__floatunsisf+0xcc>
     956:	ee 0c       	add	r14, r14
     958:	ff 1c       	adc	r15, r15
     95a:	00 1f       	adc	r16, r16
     95c:	11 1f       	adc	r17, r17
     95e:	0a 94       	dec	r0
     960:	d2 f7       	brpl	.-12     	; 0x956 <__floatunsisf+0xc4>
     962:	ed 82       	std	Y+5, r14	; 0x05
     964:	fe 82       	std	Y+6, r15	; 0x06
     966:	0f 83       	std	Y+7, r16	; 0x07
     968:	18 87       	std	Y+8, r17	; 0x08
     96a:	ce 1a       	sub	r12, r30
     96c:	df 0a       	sbc	r13, r31
     96e:	dc 82       	std	Y+4, r13	; 0x04
     970:	cb 82       	std	Y+3, r12	; 0x03
     972:	1a 82       	std	Y+2, r1	; 0x02
     974:	ce 01       	movw	r24, r28
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     97c:	28 96       	adiw	r28, 0x08	; 8
     97e:	ea e0       	ldi	r30, 0x0A	; 10
     980:	0c 94 bb 0f 	jmp	0x1f76	; 0x1f76 <__epilogue_restores__+0x10>

00000984 <__clzsi2>:
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	e8 16       	cp	r14, r24
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	f8 06       	cpc	r15, r24
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	08 07       	cpc	r16, r24
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	18 07       	cpc	r17, r24
     9a0:	88 f4       	brcc	.+34     	; 0x9c4 <__clzsi2+0x40>
     9a2:	8f ef       	ldi	r24, 0xFF	; 255
     9a4:	e8 16       	cp	r14, r24
     9a6:	f1 04       	cpc	r15, r1
     9a8:	01 05       	cpc	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	31 f0       	breq	.+12     	; 0x9ba <__clzsi2+0x36>
     9ae:	28 f0       	brcs	.+10     	; 0x9ba <__clzsi2+0x36>
     9b0:	88 e0       	ldi	r24, 0x08	; 8
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	a0 e0       	ldi	r26, 0x00	; 0
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__clzsi2+0x64>
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	a0 e0       	ldi	r26, 0x00	; 0
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	12 c0       	rjmp	.+36     	; 0x9e8 <__clzsi2+0x64>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	e8 16       	cp	r14, r24
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	f8 06       	cpc	r15, r24
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 07       	cpc	r16, r24
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	18 07       	cpc	r17, r24
     9d4:	28 f0       	brcs	.+10     	; 0x9e0 <__clzsi2+0x5c>
     9d6:	88 e1       	ldi	r24, 0x18	; 24
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__clzsi2+0x64>
     9e0:	80 e1       	ldi	r24, 0x10	; 16
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	20 e2       	ldi	r18, 0x20	; 32
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	28 1b       	sub	r18, r24
     9f2:	39 0b       	sbc	r19, r25
     9f4:	4a 0b       	sbc	r20, r26
     9f6:	5b 0b       	sbc	r21, r27
     9f8:	04 c0       	rjmp	.+8      	; 0xa02 <__clzsi2+0x7e>
     9fa:	16 95       	lsr	r17
     9fc:	07 95       	ror	r16
     9fe:	f7 94       	ror	r15
     a00:	e7 94       	ror	r14
     a02:	8a 95       	dec	r24
     a04:	d2 f7       	brpl	.-12     	; 0x9fa <__clzsi2+0x76>
     a06:	f7 01       	movw	r30, r14
     a08:	e8 59       	subi	r30, 0x98	; 152
     a0a:	ff 4f       	sbci	r31, 0xFF	; 255
     a0c:	80 81       	ld	r24, Z
     a0e:	28 1b       	sub	r18, r24
     a10:	31 09       	sbc	r19, r1
     a12:	41 09       	sbc	r20, r1
     a14:	51 09       	sbc	r21, r1
     a16:	c9 01       	movw	r24, r18
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	08 95       	ret

00000a22 <__pack_f>:
     a22:	df 92       	push	r13
     a24:	ef 92       	push	r14
     a26:	ff 92       	push	r15
     a28:	0f 93       	push	r16
     a2a:	1f 93       	push	r17
     a2c:	fc 01       	movw	r30, r24
     a2e:	e4 80       	ldd	r14, Z+4	; 0x04
     a30:	f5 80       	ldd	r15, Z+5	; 0x05
     a32:	06 81       	ldd	r16, Z+6	; 0x06
     a34:	17 81       	ldd	r17, Z+7	; 0x07
     a36:	d1 80       	ldd	r13, Z+1	; 0x01
     a38:	80 81       	ld	r24, Z
     a3a:	82 30       	cpi	r24, 0x02	; 2
     a3c:	48 f4       	brcc	.+18     	; 0xa50 <__pack_f+0x2e>
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 e1       	ldi	r26, 0x10	; 16
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e8 2a       	or	r14, r24
     a48:	f9 2a       	or	r15, r25
     a4a:	0a 2b       	or	r16, r26
     a4c:	1b 2b       	or	r17, r27
     a4e:	a5 c0       	rjmp	.+330    	; 0xb9a <__pack_f+0x178>
     a50:	84 30       	cpi	r24, 0x04	; 4
     a52:	09 f4       	brne	.+2      	; 0xa56 <__pack_f+0x34>
     a54:	9f c0       	rjmp	.+318    	; 0xb94 <__pack_f+0x172>
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	21 f4       	brne	.+8      	; 0xa62 <__pack_f+0x40>
     a5a:	ee 24       	eor	r14, r14
     a5c:	ff 24       	eor	r15, r15
     a5e:	87 01       	movw	r16, r14
     a60:	05 c0       	rjmp	.+10     	; 0xa6c <__pack_f+0x4a>
     a62:	e1 14       	cp	r14, r1
     a64:	f1 04       	cpc	r15, r1
     a66:	01 05       	cpc	r16, r1
     a68:	11 05       	cpc	r17, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <__pack_f+0x50>
     a6c:	e0 e0       	ldi	r30, 0x00	; 0
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	96 c0       	rjmp	.+300    	; 0xb9e <__pack_f+0x17c>
     a72:	62 81       	ldd	r22, Z+2	; 0x02
     a74:	73 81       	ldd	r23, Z+3	; 0x03
     a76:	9f ef       	ldi	r25, 0xFF	; 255
     a78:	62 38       	cpi	r22, 0x82	; 130
     a7a:	79 07       	cpc	r23, r25
     a7c:	0c f0       	brlt	.+2      	; 0xa80 <__pack_f+0x5e>
     a7e:	5b c0       	rjmp	.+182    	; 0xb36 <__pack_f+0x114>
     a80:	22 e8       	ldi	r18, 0x82	; 130
     a82:	3f ef       	ldi	r19, 0xFF	; 255
     a84:	26 1b       	sub	r18, r22
     a86:	37 0b       	sbc	r19, r23
     a88:	2a 31       	cpi	r18, 0x1A	; 26
     a8a:	31 05       	cpc	r19, r1
     a8c:	2c f0       	brlt	.+10     	; 0xa98 <__pack_f+0x76>
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	2a c0       	rjmp	.+84     	; 0xaec <__pack_f+0xca>
     a98:	b8 01       	movw	r22, r16
     a9a:	a7 01       	movw	r20, r14
     a9c:	02 2e       	mov	r0, r18
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__pack_f+0x86>
     aa0:	76 95       	lsr	r23
     aa2:	67 95       	ror	r22
     aa4:	57 95       	ror	r21
     aa6:	47 95       	ror	r20
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__pack_f+0x7e>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <__pack_f+0x9c>
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	2a 95       	dec	r18
     ac0:	d2 f7       	brpl	.-12     	; 0xab6 <__pack_f+0x94>
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	a1 09       	sbc	r26, r1
     ac6:	b1 09       	sbc	r27, r1
     ac8:	8e 21       	and	r24, r14
     aca:	9f 21       	and	r25, r15
     acc:	a0 23       	and	r26, r16
     ace:	b1 23       	and	r27, r17
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	a1 05       	cpc	r26, r1
     ad4:	b1 05       	cpc	r27, r1
     ad6:	21 f0       	breq	.+8      	; 0xae0 <__pack_f+0xbe>
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	9a 01       	movw	r18, r20
     ae2:	ab 01       	movw	r20, r22
     ae4:	28 2b       	or	r18, r24
     ae6:	39 2b       	or	r19, r25
     ae8:	4a 2b       	or	r20, r26
     aea:	5b 2b       	or	r21, r27
     aec:	da 01       	movw	r26, r20
     aee:	c9 01       	movw	r24, r18
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	90 70       	andi	r25, 0x00	; 0
     af4:	a0 70       	andi	r26, 0x00	; 0
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	80 34       	cpi	r24, 0x40	; 64
     afa:	91 05       	cpc	r25, r1
     afc:	a1 05       	cpc	r26, r1
     afe:	b1 05       	cpc	r27, r1
     b00:	39 f4       	brne	.+14     	; 0xb10 <__pack_f+0xee>
     b02:	27 ff       	sbrs	r18, 7
     b04:	09 c0       	rjmp	.+18     	; 0xb18 <__pack_f+0xf6>
     b06:	20 5c       	subi	r18, 0xC0	; 192
     b08:	3f 4f       	sbci	r19, 0xFF	; 255
     b0a:	4f 4f       	sbci	r20, 0xFF	; 255
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__pack_f+0xf6>
     b10:	21 5c       	subi	r18, 0xC1	; 193
     b12:	3f 4f       	sbci	r19, 0xFF	; 255
     b14:	4f 4f       	sbci	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	e0 e0       	ldi	r30, 0x00	; 0
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	20 30       	cpi	r18, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	3a 07       	cpc	r19, r26
     b22:	a0 e0       	ldi	r26, 0x00	; 0
     b24:	4a 07       	cpc	r20, r26
     b26:	a0 e4       	ldi	r26, 0x40	; 64
     b28:	5a 07       	cpc	r21, r26
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__pack_f+0x10e>
     b2c:	e1 e0       	ldi	r30, 0x01	; 1
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	79 01       	movw	r14, r18
     b32:	8a 01       	movw	r16, r20
     b34:	27 c0       	rjmp	.+78     	; 0xb84 <__pack_f+0x162>
     b36:	60 38       	cpi	r22, 0x80	; 128
     b38:	71 05       	cpc	r23, r1
     b3a:	64 f5       	brge	.+88     	; 0xb94 <__pack_f+0x172>
     b3c:	fb 01       	movw	r30, r22
     b3e:	e1 58       	subi	r30, 0x81	; 129
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	d8 01       	movw	r26, r16
     b44:	c7 01       	movw	r24, r14
     b46:	8f 77       	andi	r24, 0x7F	; 127
     b48:	90 70       	andi	r25, 0x00	; 0
     b4a:	a0 70       	andi	r26, 0x00	; 0
     b4c:	b0 70       	andi	r27, 0x00	; 0
     b4e:	80 34       	cpi	r24, 0x40	; 64
     b50:	91 05       	cpc	r25, r1
     b52:	a1 05       	cpc	r26, r1
     b54:	b1 05       	cpc	r27, r1
     b56:	39 f4       	brne	.+14     	; 0xb66 <__pack_f+0x144>
     b58:	e7 fe       	sbrs	r14, 7
     b5a:	0d c0       	rjmp	.+26     	; 0xb76 <__pack_f+0x154>
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x14c>
     b66:	8f e3       	ldi	r24, 0x3F	; 63
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	e8 0e       	add	r14, r24
     b70:	f9 1e       	adc	r15, r25
     b72:	0a 1f       	adc	r16, r26
     b74:	1b 1f       	adc	r17, r27
     b76:	17 ff       	sbrs	r17, 7
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <__pack_f+0x162>
     b7a:	16 95       	lsr	r17
     b7c:	07 95       	ror	r16
     b7e:	f7 94       	ror	r15
     b80:	e7 94       	ror	r14
     b82:	31 96       	adiw	r30, 0x01	; 1
     b84:	87 e0       	ldi	r24, 0x07	; 7
     b86:	16 95       	lsr	r17
     b88:	07 95       	ror	r16
     b8a:	f7 94       	ror	r15
     b8c:	e7 94       	ror	r14
     b8e:	8a 95       	dec	r24
     b90:	d1 f7       	brne	.-12     	; 0xb86 <__pack_f+0x164>
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <__pack_f+0x17c>
     b94:	ee 24       	eor	r14, r14
     b96:	ff 24       	eor	r15, r15
     b98:	87 01       	movw	r16, r14
     b9a:	ef ef       	ldi	r30, 0xFF	; 255
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	6e 2f       	mov	r22, r30
     ba0:	67 95       	ror	r22
     ba2:	66 27       	eor	r22, r22
     ba4:	67 95       	ror	r22
     ba6:	90 2f       	mov	r25, r16
     ba8:	9f 77       	andi	r25, 0x7F	; 127
     baa:	d7 94       	ror	r13
     bac:	dd 24       	eor	r13, r13
     bae:	d7 94       	ror	r13
     bb0:	8e 2f       	mov	r24, r30
     bb2:	86 95       	lsr	r24
     bb4:	49 2f       	mov	r20, r25
     bb6:	46 2b       	or	r20, r22
     bb8:	58 2f       	mov	r21, r24
     bba:	5d 29       	or	r21, r13
     bbc:	b7 01       	movw	r22, r14
     bbe:	ca 01       	movw	r24, r20
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	08 95       	ret

00000bcc <__unpack_f>:
     bcc:	fc 01       	movw	r30, r24
     bce:	db 01       	movw	r26, r22
     bd0:	40 81       	ld	r20, Z
     bd2:	51 81       	ldd	r21, Z+1	; 0x01
     bd4:	22 81       	ldd	r18, Z+2	; 0x02
     bd6:	62 2f       	mov	r22, r18
     bd8:	6f 77       	andi	r22, 0x7F	; 127
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	22 1f       	adc	r18, r18
     bde:	22 27       	eor	r18, r18
     be0:	22 1f       	adc	r18, r18
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	89 2f       	mov	r24, r25
     be6:	88 0f       	add	r24, r24
     be8:	82 2b       	or	r24, r18
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	99 1f       	adc	r25, r25
     bf0:	99 27       	eor	r25, r25
     bf2:	99 1f       	adc	r25, r25
     bf4:	11 96       	adiw	r26, 0x01	; 1
     bf6:	9c 93       	st	X, r25
     bf8:	11 97       	sbiw	r26, 0x01	; 1
     bfa:	21 15       	cp	r18, r1
     bfc:	31 05       	cpc	r19, r1
     bfe:	a9 f5       	brne	.+106    	; 0xc6a <__unpack_f+0x9e>
     c00:	41 15       	cp	r20, r1
     c02:	51 05       	cpc	r21, r1
     c04:	61 05       	cpc	r22, r1
     c06:	71 05       	cpc	r23, r1
     c08:	11 f4       	brne	.+4      	; 0xc0e <__unpack_f+0x42>
     c0a:	82 e0       	ldi	r24, 0x02	; 2
     c0c:	37 c0       	rjmp	.+110    	; 0xc7c <__unpack_f+0xb0>
     c0e:	82 e8       	ldi	r24, 0x82	; 130
     c10:	9f ef       	ldi	r25, 0xFF	; 255
     c12:	13 96       	adiw	r26, 0x03	; 3
     c14:	9c 93       	st	X, r25
     c16:	8e 93       	st	-X, r24
     c18:	12 97       	sbiw	r26, 0x02	; 2
     c1a:	9a 01       	movw	r18, r20
     c1c:	ab 01       	movw	r20, r22
     c1e:	67 e0       	ldi	r22, 0x07	; 7
     c20:	22 0f       	add	r18, r18
     c22:	33 1f       	adc	r19, r19
     c24:	44 1f       	adc	r20, r20
     c26:	55 1f       	adc	r21, r21
     c28:	6a 95       	dec	r22
     c2a:	d1 f7       	brne	.-12     	; 0xc20 <__unpack_f+0x54>
     c2c:	83 e0       	ldi	r24, 0x03	; 3
     c2e:	8c 93       	st	X, r24
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__unpack_f+0x80>
     c32:	22 0f       	add	r18, r18
     c34:	33 1f       	adc	r19, r19
     c36:	44 1f       	adc	r20, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	12 96       	adiw	r26, 0x02	; 2
     c3c:	8d 91       	ld	r24, X+
     c3e:	9c 91       	ld	r25, X
     c40:	13 97       	sbiw	r26, 0x03	; 3
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	13 96       	adiw	r26, 0x03	; 3
     c46:	9c 93       	st	X, r25
     c48:	8e 93       	st	-X, r24
     c4a:	12 97       	sbiw	r26, 0x02	; 2
     c4c:	20 30       	cpi	r18, 0x00	; 0
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	38 07       	cpc	r19, r24
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	48 07       	cpc	r20, r24
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	58 07       	cpc	r21, r24
     c5a:	58 f3       	brcs	.-42     	; 0xc32 <__unpack_f+0x66>
     c5c:	14 96       	adiw	r26, 0x04	; 4
     c5e:	2d 93       	st	X+, r18
     c60:	3d 93       	st	X+, r19
     c62:	4d 93       	st	X+, r20
     c64:	5c 93       	st	X, r21
     c66:	17 97       	sbiw	r26, 0x07	; 7
     c68:	08 95       	ret
     c6a:	2f 3f       	cpi	r18, 0xFF	; 255
     c6c:	31 05       	cpc	r19, r1
     c6e:	79 f4       	brne	.+30     	; 0xc8e <__unpack_f+0xc2>
     c70:	41 15       	cp	r20, r1
     c72:	51 05       	cpc	r21, r1
     c74:	61 05       	cpc	r22, r1
     c76:	71 05       	cpc	r23, r1
     c78:	19 f4       	brne	.+6      	; 0xc80 <__unpack_f+0xb4>
     c7a:	84 e0       	ldi	r24, 0x04	; 4
     c7c:	8c 93       	st	X, r24
     c7e:	08 95       	ret
     c80:	64 ff       	sbrs	r22, 4
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <__unpack_f+0xbe>
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	8c 93       	st	X, r24
     c88:	12 c0       	rjmp	.+36     	; 0xcae <__unpack_f+0xe2>
     c8a:	1c 92       	st	X, r1
     c8c:	10 c0       	rjmp	.+32     	; 0xcae <__unpack_f+0xe2>
     c8e:	2f 57       	subi	r18, 0x7F	; 127
     c90:	30 40       	sbci	r19, 0x00	; 0
     c92:	13 96       	adiw	r26, 0x03	; 3
     c94:	3c 93       	st	X, r19
     c96:	2e 93       	st	-X, r18
     c98:	12 97       	sbiw	r26, 0x02	; 2
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	8c 93       	st	X, r24
     c9e:	87 e0       	ldi	r24, 0x07	; 7
     ca0:	44 0f       	add	r20, r20
     ca2:	55 1f       	adc	r21, r21
     ca4:	66 1f       	adc	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	8a 95       	dec	r24
     caa:	d1 f7       	brne	.-12     	; 0xca0 <__unpack_f+0xd4>
     cac:	70 64       	ori	r23, 0x40	; 64
     cae:	14 96       	adiw	r26, 0x04	; 4
     cb0:	4d 93       	st	X+, r20
     cb2:	5d 93       	st	X+, r21
     cb4:	6d 93       	st	X+, r22
     cb6:	7c 93       	st	X, r23
     cb8:	17 97       	sbiw	r26, 0x07	; 7
     cba:	08 95       	ret

00000cbc <__fpcmp_parts_f>:
     cbc:	1f 93       	push	r17
     cbe:	dc 01       	movw	r26, r24
     cc0:	fb 01       	movw	r30, r22
     cc2:	9c 91       	ld	r25, X
     cc4:	92 30       	cpi	r25, 0x02	; 2
     cc6:	08 f4       	brcc	.+2      	; 0xcca <__fpcmp_parts_f+0xe>
     cc8:	47 c0       	rjmp	.+142    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cca:	80 81       	ld	r24, Z
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	08 f4       	brcc	.+2      	; 0xcd2 <__fpcmp_parts_f+0x16>
     cd0:	43 c0       	rjmp	.+134    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cd2:	94 30       	cpi	r25, 0x04	; 4
     cd4:	51 f4       	brne	.+20     	; 0xcea <__fpcmp_parts_f+0x2e>
     cd6:	11 96       	adiw	r26, 0x01	; 1
     cd8:	1c 91       	ld	r17, X
     cda:	84 30       	cpi	r24, 0x04	; 4
     cdc:	99 f5       	brne	.+102    	; 0xd44 <__fpcmp_parts_f+0x88>
     cde:	81 81       	ldd	r24, Z+1	; 0x01
     ce0:	68 2f       	mov	r22, r24
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	61 1b       	sub	r22, r17
     ce6:	71 09       	sbc	r23, r1
     ce8:	3f c0       	rjmp	.+126    	; 0xd68 <__fpcmp_parts_f+0xac>
     cea:	84 30       	cpi	r24, 0x04	; 4
     cec:	21 f0       	breq	.+8      	; 0xcf6 <__fpcmp_parts_f+0x3a>
     cee:	92 30       	cpi	r25, 0x02	; 2
     cf0:	31 f4       	brne	.+12     	; 0xcfe <__fpcmp_parts_f+0x42>
     cf2:	82 30       	cpi	r24, 0x02	; 2
     cf4:	b9 f1       	breq	.+110    	; 0xd64 <__fpcmp_parts_f+0xa8>
     cf6:	81 81       	ldd	r24, Z+1	; 0x01
     cf8:	88 23       	and	r24, r24
     cfa:	89 f1       	breq	.+98     	; 0xd5e <__fpcmp_parts_f+0xa2>
     cfc:	2d c0       	rjmp	.+90     	; 0xd58 <__fpcmp_parts_f+0x9c>
     cfe:	11 96       	adiw	r26, 0x01	; 1
     d00:	1c 91       	ld	r17, X
     d02:	11 97       	sbiw	r26, 0x01	; 1
     d04:	82 30       	cpi	r24, 0x02	; 2
     d06:	f1 f0       	breq	.+60     	; 0xd44 <__fpcmp_parts_f+0x88>
     d08:	81 81       	ldd	r24, Z+1	; 0x01
     d0a:	18 17       	cp	r17, r24
     d0c:	d9 f4       	brne	.+54     	; 0xd44 <__fpcmp_parts_f+0x88>
     d0e:	12 96       	adiw	r26, 0x02	; 2
     d10:	2d 91       	ld	r18, X+
     d12:	3c 91       	ld	r19, X
     d14:	13 97       	sbiw	r26, 0x03	; 3
     d16:	82 81       	ldd	r24, Z+2	; 0x02
     d18:	93 81       	ldd	r25, Z+3	; 0x03
     d1a:	82 17       	cp	r24, r18
     d1c:	93 07       	cpc	r25, r19
     d1e:	94 f0       	brlt	.+36     	; 0xd44 <__fpcmp_parts_f+0x88>
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	bc f0       	brlt	.+46     	; 0xd54 <__fpcmp_parts_f+0x98>
     d26:	14 96       	adiw	r26, 0x04	; 4
     d28:	8d 91       	ld	r24, X+
     d2a:	9d 91       	ld	r25, X+
     d2c:	0d 90       	ld	r0, X+
     d2e:	bc 91       	ld	r27, X
     d30:	a0 2d       	mov	r26, r0
     d32:	24 81       	ldd	r18, Z+4	; 0x04
     d34:	35 81       	ldd	r19, Z+5	; 0x05
     d36:	46 81       	ldd	r20, Z+6	; 0x06
     d38:	57 81       	ldd	r21, Z+7	; 0x07
     d3a:	28 17       	cp	r18, r24
     d3c:	39 07       	cpc	r19, r25
     d3e:	4a 07       	cpc	r20, r26
     d40:	5b 07       	cpc	r21, r27
     d42:	18 f4       	brcc	.+6      	; 0xd4a <__fpcmp_parts_f+0x8e>
     d44:	11 23       	and	r17, r17
     d46:	41 f0       	breq	.+16     	; 0xd58 <__fpcmp_parts_f+0x9c>
     d48:	0a c0       	rjmp	.+20     	; 0xd5e <__fpcmp_parts_f+0xa2>
     d4a:	82 17       	cp	r24, r18
     d4c:	93 07       	cpc	r25, r19
     d4e:	a4 07       	cpc	r26, r20
     d50:	b5 07       	cpc	r27, r21
     d52:	40 f4       	brcc	.+16     	; 0xd64 <__fpcmp_parts_f+0xa8>
     d54:	11 23       	and	r17, r17
     d56:	19 f0       	breq	.+6      	; 0xd5e <__fpcmp_parts_f+0xa2>
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <__fpcmp_parts_f+0xac>
     d5e:	6f ef       	ldi	r22, 0xFF	; 255
     d60:	7f ef       	ldi	r23, 0xFF	; 255
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__fpcmp_parts_f+0xac>
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	cb 01       	movw	r24, r22
     d6a:	1f 91       	pop	r17
     d6c:	08 95       	ret

00000d6e <MDIO_stderrSetPortDirection>:
/* SWC Includes */
#include "MDIO_private.h"
#include "MDIO_interface.h"

STD_error_t MDIO_stderrSetPortDirection(u8 ARG_u8Port, u8 ARG_u8Direction)
{
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	00 d0       	rcall	.+0      	; 0xd74 <MDIO_stderrSetPortDirection+0x6>
     d74:	00 d0       	rcall	.+0      	; 0xd76 <MDIO_stderrSetPortDirection+0x8>
     d76:	0f 92       	push	r0
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
     d7c:	8a 83       	std	Y+2, r24	; 0x02
     d7e:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError = E_OK;
     d80:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	3d 83       	std	Y+5, r19	; 0x05
     d8a:	2c 83       	std	Y+4, r18	; 0x04
     d8c:	8c 81       	ldd	r24, Y+4	; 0x04
     d8e:	9d 81       	ldd	r25, Y+5	; 0x05
     d90:	82 30       	cpi	r24, 0x02	; 2
     d92:	91 05       	cpc	r25, r1
     d94:	d9 f0       	breq	.+54     	; 0xdcc <MDIO_stderrSetPortDirection+0x5e>
     d96:	2c 81       	ldd	r18, Y+4	; 0x04
     d98:	3d 81       	ldd	r19, Y+5	; 0x05
     d9a:	23 30       	cpi	r18, 0x03	; 3
     d9c:	31 05       	cpc	r19, r1
     d9e:	34 f4       	brge	.+12     	; 0xdac <MDIO_stderrSetPortDirection+0x3e>
     da0:	8c 81       	ldd	r24, Y+4	; 0x04
     da2:	9d 81       	ldd	r25, Y+5	; 0x05
     da4:	81 30       	cpi	r24, 0x01	; 1
     da6:	91 05       	cpc	r25, r1
     da8:	61 f0       	breq	.+24     	; 0xdc2 <MDIO_stderrSetPortDirection+0x54>
     daa:	1f c0       	rjmp	.+62     	; 0xdea <MDIO_stderrSetPortDirection+0x7c>
     dac:	2c 81       	ldd	r18, Y+4	; 0x04
     dae:	3d 81       	ldd	r19, Y+5	; 0x05
     db0:	23 30       	cpi	r18, 0x03	; 3
     db2:	31 05       	cpc	r19, r1
     db4:	81 f0       	breq	.+32     	; 0xdd6 <MDIO_stderrSetPortDirection+0x68>
     db6:	8c 81       	ldd	r24, Y+4	; 0x04
     db8:	9d 81       	ldd	r25, Y+5	; 0x05
     dba:	84 30       	cpi	r24, 0x04	; 4
     dbc:	91 05       	cpc	r25, r1
     dbe:	81 f0       	breq	.+32     	; 0xde0 <MDIO_stderrSetPortDirection+0x72>
     dc0:	14 c0       	rjmp	.+40     	; 0xdea <MDIO_stderrSetPortDirection+0x7c>
	{
		case MDIO_PORTA: GPIOA -> DDR = ARG_u8Direction; break;
     dc2:	e9 e3       	ldi	r30, 0x39	; 57
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	8b 81       	ldd	r24, Y+3	; 0x03
     dc8:	81 83       	std	Z+1, r24	; 0x01
     dca:	11 c0       	rjmp	.+34     	; 0xdee <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTB: GPIOB -> DDR = ARG_u8Direction; break;
     dcc:	e6 e3       	ldi	r30, 0x36	; 54
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	8b 81       	ldd	r24, Y+3	; 0x03
     dd2:	81 83       	std	Z+1, r24	; 0x01
     dd4:	0c c0       	rjmp	.+24     	; 0xdee <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTC: GPIOC -> DDR = ARG_u8Direction; break;
     dd6:	e3 e3       	ldi	r30, 0x33	; 51
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	8b 81       	ldd	r24, Y+3	; 0x03
     ddc:	81 83       	std	Z+1, r24	; 0x01
     dde:	07 c0       	rjmp	.+14     	; 0xdee <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTD: GPIOD -> DDR = ARG_u8Direction; break;
     de0:	e0 e3       	ldi	r30, 0x30	; 48
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	8b 81       	ldd	r24, Y+3	; 0x03
     de6:	81 83       	std	Z+1, r24	; 0x01
     de8:	02 c0       	rjmp	.+4      	; 0xdee <MDIO_stderrSetPortDirection+0x80>
		default: L_stderrError = E_NOK; break; /* Report an Error */
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
     dee:	89 81       	ldd	r24, Y+1	; 0x01
}
     df0:	0f 90       	pop	r0
     df2:	0f 90       	pop	r0
     df4:	0f 90       	pop	r0
     df6:	0f 90       	pop	r0
     df8:	0f 90       	pop	r0
     dfa:	cf 91       	pop	r28
     dfc:	df 91       	pop	r29
     dfe:	08 95       	ret

00000e00 <MDIO_stderrSetPortValue>:

STD_error_t MDIO_stderrSetPortValue(u8 ARG_u8Port, u8 ARG_u8Value)
{
     e00:	df 93       	push	r29
     e02:	cf 93       	push	r28
     e04:	00 d0       	rcall	.+0      	; 0xe06 <MDIO_stderrSetPortValue+0x6>
     e06:	00 d0       	rcall	.+0      	; 0xe08 <MDIO_stderrSetPortValue+0x8>
     e08:	0f 92       	push	r0
     e0a:	cd b7       	in	r28, 0x3d	; 61
     e0c:	de b7       	in	r29, 0x3e	; 62
     e0e:	8a 83       	std	Y+2, r24	; 0x02
     e10:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError = E_OK;
     e12:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
     e14:	8a 81       	ldd	r24, Y+2	; 0x02
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	3d 83       	std	Y+5, r19	; 0x05
     e1c:	2c 83       	std	Y+4, r18	; 0x04
     e1e:	8c 81       	ldd	r24, Y+4	; 0x04
     e20:	9d 81       	ldd	r25, Y+5	; 0x05
     e22:	82 30       	cpi	r24, 0x02	; 2
     e24:	91 05       	cpc	r25, r1
     e26:	d9 f0       	breq	.+54     	; 0xe5e <MDIO_stderrSetPortValue+0x5e>
     e28:	2c 81       	ldd	r18, Y+4	; 0x04
     e2a:	3d 81       	ldd	r19, Y+5	; 0x05
     e2c:	23 30       	cpi	r18, 0x03	; 3
     e2e:	31 05       	cpc	r19, r1
     e30:	34 f4       	brge	.+12     	; 0xe3e <MDIO_stderrSetPortValue+0x3e>
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	9d 81       	ldd	r25, Y+5	; 0x05
     e36:	81 30       	cpi	r24, 0x01	; 1
     e38:	91 05       	cpc	r25, r1
     e3a:	61 f0       	breq	.+24     	; 0xe54 <MDIO_stderrSetPortValue+0x54>
     e3c:	1f c0       	rjmp	.+62     	; 0xe7c <MDIO_stderrSetPortValue+0x7c>
     e3e:	2c 81       	ldd	r18, Y+4	; 0x04
     e40:	3d 81       	ldd	r19, Y+5	; 0x05
     e42:	23 30       	cpi	r18, 0x03	; 3
     e44:	31 05       	cpc	r19, r1
     e46:	81 f0       	breq	.+32     	; 0xe68 <MDIO_stderrSetPortValue+0x68>
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	9d 81       	ldd	r25, Y+5	; 0x05
     e4c:	84 30       	cpi	r24, 0x04	; 4
     e4e:	91 05       	cpc	r25, r1
     e50:	81 f0       	breq	.+32     	; 0xe72 <MDIO_stderrSetPortValue+0x72>
     e52:	14 c0       	rjmp	.+40     	; 0xe7c <MDIO_stderrSetPortValue+0x7c>
	{
		case MDIO_PORTA: GPIOA -> PORT = ARG_u8Value; break;
     e54:	e9 e3       	ldi	r30, 0x39	; 57
     e56:	f0 e0       	ldi	r31, 0x00	; 0
     e58:	8b 81       	ldd	r24, Y+3	; 0x03
     e5a:	82 83       	std	Z+2, r24	; 0x02
     e5c:	11 c0       	rjmp	.+34     	; 0xe80 <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTB: GPIOB -> PORT = ARG_u8Value; break;
     e5e:	e6 e3       	ldi	r30, 0x36	; 54
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	8b 81       	ldd	r24, Y+3	; 0x03
     e64:	82 83       	std	Z+2, r24	; 0x02
     e66:	0c c0       	rjmp	.+24     	; 0xe80 <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTC: GPIOC -> PORT = ARG_u8Value; break;
     e68:	e3 e3       	ldi	r30, 0x33	; 51
     e6a:	f0 e0       	ldi	r31, 0x00	; 0
     e6c:	8b 81       	ldd	r24, Y+3	; 0x03
     e6e:	82 83       	std	Z+2, r24	; 0x02
     e70:	07 c0       	rjmp	.+14     	; 0xe80 <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTD: GPIOD -> PORT = ARG_u8Value; break;
     e72:	e0 e3       	ldi	r30, 0x30	; 48
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	8b 81       	ldd	r24, Y+3	; 0x03
     e78:	82 83       	std	Z+2, r24	; 0x02
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <MDIO_stderrSetPortValue+0x80>
		default: L_stderrError = E_NOK; break; /* Report an Error */
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
     e80:	89 81       	ldd	r24, Y+1	; 0x01
}
     e82:	0f 90       	pop	r0
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	0f 90       	pop	r0
     e8a:	0f 90       	pop	r0
     e8c:	cf 91       	pop	r28
     e8e:	df 91       	pop	r29
     e90:	08 95       	ret

00000e92 <MDIO_stderrGetPortValue>:

STD_error_t	MDIO_stderrGetPortValue(u8* ARG_u8pValue, u8 ARG_u8Port)
{
     e92:	df 93       	push	r29
     e94:	cf 93       	push	r28
     e96:	00 d0       	rcall	.+0      	; 0xe98 <MDIO_stderrGetPortValue+0x6>
     e98:	00 d0       	rcall	.+0      	; 0xe9a <MDIO_stderrGetPortValue+0x8>
     e9a:	00 d0       	rcall	.+0      	; 0xe9c <MDIO_stderrGetPortValue+0xa>
     e9c:	cd b7       	in	r28, 0x3d	; 61
     e9e:	de b7       	in	r29, 0x3e	; 62
     ea0:	9b 83       	std	Y+3, r25	; 0x03
     ea2:	8a 83       	std	Y+2, r24	; 0x02
     ea4:	6c 83       	std	Y+4, r22	; 0x04
	STD_error_t L_stderrError = E_OK;
     ea6:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
     ea8:	8c 81       	ldd	r24, Y+4	; 0x04
     eaa:	28 2f       	mov	r18, r24
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	3e 83       	std	Y+6, r19	; 0x06
     eb0:	2d 83       	std	Y+5, r18	; 0x05
     eb2:	8d 81       	ldd	r24, Y+5	; 0x05
     eb4:	9e 81       	ldd	r25, Y+6	; 0x06
     eb6:	82 30       	cpi	r24, 0x02	; 2
     eb8:	91 05       	cpc	r25, r1
     eba:	e9 f0       	breq	.+58     	; 0xef6 <MDIO_stderrGetPortValue+0x64>
     ebc:	2d 81       	ldd	r18, Y+5	; 0x05
     ebe:	3e 81       	ldd	r19, Y+6	; 0x06
     ec0:	23 30       	cpi	r18, 0x03	; 3
     ec2:	31 05       	cpc	r19, r1
     ec4:	34 f4       	brge	.+12     	; 0xed2 <MDIO_stderrGetPortValue+0x40>
     ec6:	8d 81       	ldd	r24, Y+5	; 0x05
     ec8:	9e 81       	ldd	r25, Y+6	; 0x06
     eca:	81 30       	cpi	r24, 0x01	; 1
     ecc:	91 05       	cpc	r25, r1
     ece:	61 f0       	breq	.+24     	; 0xee8 <MDIO_stderrGetPortValue+0x56>
     ed0:	27 c0       	rjmp	.+78     	; 0xf20 <MDIO_stderrGetPortValue+0x8e>
     ed2:	2d 81       	ldd	r18, Y+5	; 0x05
     ed4:	3e 81       	ldd	r19, Y+6	; 0x06
     ed6:	23 30       	cpi	r18, 0x03	; 3
     ed8:	31 05       	cpc	r19, r1
     eda:	a1 f0       	breq	.+40     	; 0xf04 <MDIO_stderrGetPortValue+0x72>
     edc:	8d 81       	ldd	r24, Y+5	; 0x05
     ede:	9e 81       	ldd	r25, Y+6	; 0x06
     ee0:	84 30       	cpi	r24, 0x04	; 4
     ee2:	91 05       	cpc	r25, r1
     ee4:	b1 f0       	breq	.+44     	; 0xf12 <MDIO_stderrGetPortValue+0x80>
     ee6:	1c c0       	rjmp	.+56     	; 0xf20 <MDIO_stderrGetPortValue+0x8e>
	{
		case MDIO_PORTA: *ARG_u8pValue = GPIOA -> PIN; break;
     ee8:	e9 e3       	ldi	r30, 0x39	; 57
     eea:	f0 e0       	ldi	r31, 0x00	; 0
     eec:	80 81       	ld	r24, Z
     eee:	ea 81       	ldd	r30, Y+2	; 0x02
     ef0:	fb 81       	ldd	r31, Y+3	; 0x03
     ef2:	80 83       	st	Z, r24
     ef4:	17 c0       	rjmp	.+46     	; 0xf24 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTB: *ARG_u8pValue = GPIOB -> PIN; break;
     ef6:	e6 e3       	ldi	r30, 0x36	; 54
     ef8:	f0 e0       	ldi	r31, 0x00	; 0
     efa:	80 81       	ld	r24, Z
     efc:	ea 81       	ldd	r30, Y+2	; 0x02
     efe:	fb 81       	ldd	r31, Y+3	; 0x03
     f00:	80 83       	st	Z, r24
     f02:	10 c0       	rjmp	.+32     	; 0xf24 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTC: *ARG_u8pValue = GPIOC -> PIN; break;
     f04:	e3 e3       	ldi	r30, 0x33	; 51
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	80 81       	ld	r24, Z
     f0a:	ea 81       	ldd	r30, Y+2	; 0x02
     f0c:	fb 81       	ldd	r31, Y+3	; 0x03
     f0e:	80 83       	st	Z, r24
     f10:	09 c0       	rjmp	.+18     	; 0xf24 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTD: *ARG_u8pValue = GPIOD -> PIN; break;
     f12:	e0 e3       	ldi	r30, 0x30	; 48
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	80 81       	ld	r24, Z
     f18:	ea 81       	ldd	r30, Y+2	; 0x02
     f1a:	fb 81       	ldd	r31, Y+3	; 0x03
     f1c:	80 83       	st	Z, r24
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <MDIO_stderrGetPortValue+0x92>
        default: L_stderrError = E_NOK; break; /* Report an Error */
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
     f24:	89 81       	ldd	r24, Y+1	; 0x01
}
     f26:	26 96       	adiw	r28, 0x06	; 6
     f28:	0f b6       	in	r0, 0x3f	; 63
     f2a:	f8 94       	cli
     f2c:	de bf       	out	0x3e, r29	; 62
     f2e:	0f be       	out	0x3f, r0	; 63
     f30:	cd bf       	out	0x3d, r28	; 61
     f32:	cf 91       	pop	r28
     f34:	df 91       	pop	r29
     f36:	08 95       	ret

00000f38 <MDIO_stderrSetPinDirection>:

STD_error_t MDIO_stderrSetPinDirection(u8 ARG_u8Port, u8 ARG_u8Pin, u8 ARG_u8Direction)
{
     f38:	df 93       	push	r29
     f3a:	cf 93       	push	r28
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62
     f40:	2a 97       	sbiw	r28, 0x0a	; 10
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	f8 94       	cli
     f46:	de bf       	out	0x3e, r29	; 62
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	cd bf       	out	0x3d, r28	; 61
     f4c:	8a 83       	std	Y+2, r24	; 0x02
     f4e:	6b 83       	std	Y+3, r22	; 0x03
     f50:	4c 83       	std	Y+4, r20	; 0x04
	STD_error_t L_stderrError = E_OK;
     f52:	19 82       	std	Y+1, r1	; 0x01
	if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	88 30       	cpi	r24, 0x08	; 8
     f58:	08 f0       	brcs	.+2      	; 0xf5c <MDIO_stderrSetPinDirection+0x24>
     f5a:	d9 c1       	rjmp	.+946    	; 0x130e <MDIO_stderrSetPinDirection+0x3d6>
	{
		if(MDIO_OUTPUT == ARG_u8Direction)
     f5c:	8c 81       	ldd	r24, Y+4	; 0x04
     f5e:	81 30       	cpi	r24, 0x01	; 1
     f60:	09 f0       	breq	.+2      	; 0xf64 <MDIO_stderrSetPinDirection+0x2c>
     f62:	7c c0       	rjmp	.+248    	; 0x105c <MDIO_stderrSetPinDirection+0x124>
		{
			switch(ARG_u8Port)
     f64:	8a 81       	ldd	r24, Y+2	; 0x02
     f66:	28 2f       	mov	r18, r24
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	3a 87       	std	Y+10, r19	; 0x0a
     f6c:	29 87       	std	Y+9, r18	; 0x09
     f6e:	89 85       	ldd	r24, Y+9	; 0x09
     f70:	9a 85       	ldd	r25, Y+10	; 0x0a
     f72:	82 30       	cpi	r24, 0x02	; 2
     f74:	91 05       	cpc	r25, r1
     f76:	69 f1       	breq	.+90     	; 0xfd2 <MDIO_stderrSetPinDirection+0x9a>
     f78:	29 85       	ldd	r18, Y+9	; 0x09
     f7a:	3a 85       	ldd	r19, Y+10	; 0x0a
     f7c:	23 30       	cpi	r18, 0x03	; 3
     f7e:	31 05       	cpc	r19, r1
     f80:	34 f4       	brge	.+12     	; 0xf8e <MDIO_stderrSetPinDirection+0x56>
     f82:	89 85       	ldd	r24, Y+9	; 0x09
     f84:	9a 85       	ldd	r25, Y+10	; 0x0a
     f86:	81 30       	cpi	r24, 0x01	; 1
     f88:	91 05       	cpc	r25, r1
     f8a:	69 f0       	breq	.+26     	; 0xfa6 <MDIO_stderrSetPinDirection+0x6e>
     f8c:	64 c0       	rjmp	.+200    	; 0x1056 <MDIO_stderrSetPinDirection+0x11e>
     f8e:	29 85       	ldd	r18, Y+9	; 0x09
     f90:	3a 85       	ldd	r19, Y+10	; 0x0a
     f92:	23 30       	cpi	r18, 0x03	; 3
     f94:	31 05       	cpc	r19, r1
     f96:	99 f1       	breq	.+102    	; 0xffe <MDIO_stderrSetPinDirection+0xc6>
     f98:	89 85       	ldd	r24, Y+9	; 0x09
     f9a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f9c:	84 30       	cpi	r24, 0x04	; 4
     f9e:	91 05       	cpc	r25, r1
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <MDIO_stderrSetPinDirection+0x6c>
     fa2:	43 c0       	rjmp	.+134    	; 0x102a <MDIO_stderrSetPinDirection+0xf2>
     fa4:	58 c0       	rjmp	.+176    	; 0x1056 <MDIO_stderrSetPinDirection+0x11e>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> DDR, ARG_u8Pin); break;
     fa6:	a9 e3       	ldi	r26, 0x39	; 57
     fa8:	b0 e0       	ldi	r27, 0x00	; 0
     faa:	e9 e3       	ldi	r30, 0x39	; 57
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	81 81       	ldd	r24, Z+1	; 0x01
     fb0:	48 2f       	mov	r20, r24
     fb2:	8b 81       	ldd	r24, Y+3	; 0x03
     fb4:	28 2f       	mov	r18, r24
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	02 2e       	mov	r0, r18
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <MDIO_stderrSetPinDirection+0x8c>
     fc0:	88 0f       	add	r24, r24
     fc2:	99 1f       	adc	r25, r25
     fc4:	0a 94       	dec	r0
     fc6:	e2 f7       	brpl	.-8      	; 0xfc0 <MDIO_stderrSetPinDirection+0x88>
     fc8:	84 2b       	or	r24, r20
     fca:	11 96       	adiw	r26, 0x01	; 1
     fcc:	8c 93       	st	X, r24
     fce:	11 97       	sbiw	r26, 0x01	; 1
     fd0:	a0 c1       	rjmp	.+832    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: SET_BIT(GPIOB -> DDR, ARG_u8Pin); break;
     fd2:	a6 e3       	ldi	r26, 0x36	; 54
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	e6 e3       	ldi	r30, 0x36	; 54
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	81 81       	ldd	r24, Z+1	; 0x01
     fdc:	48 2f       	mov	r20, r24
     fde:	8b 81       	ldd	r24, Y+3	; 0x03
     fe0:	28 2f       	mov	r18, r24
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	02 2e       	mov	r0, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <MDIO_stderrSetPinDirection+0xb8>
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	0a 94       	dec	r0
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <MDIO_stderrSetPinDirection+0xb4>
     ff4:	84 2b       	or	r24, r20
     ff6:	11 96       	adiw	r26, 0x01	; 1
     ff8:	8c 93       	st	X, r24
     ffa:	11 97       	sbiw	r26, 0x01	; 1
     ffc:	8a c1       	rjmp	.+788    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: SET_BIT(GPIOC -> DDR, ARG_u8Pin); break;
     ffe:	a3 e3       	ldi	r26, 0x33	; 51
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	e3 e3       	ldi	r30, 0x33	; 51
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	81 81       	ldd	r24, Z+1	; 0x01
    1008:	48 2f       	mov	r20, r24
    100a:	8b 81       	ldd	r24, Y+3	; 0x03
    100c:	28 2f       	mov	r18, r24
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	02 2e       	mov	r0, r18
    1016:	02 c0       	rjmp	.+4      	; 0x101c <MDIO_stderrSetPinDirection+0xe4>
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	0a 94       	dec	r0
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <MDIO_stderrSetPinDirection+0xe0>
    1020:	84 2b       	or	r24, r20
    1022:	11 96       	adiw	r26, 0x01	; 1
    1024:	8c 93       	st	X, r24
    1026:	11 97       	sbiw	r26, 0x01	; 1
    1028:	74 c1       	rjmp	.+744    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: SET_BIT(GPIOD -> DDR, ARG_u8Pin); break;
    102a:	a0 e3       	ldi	r26, 0x30	; 48
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	e0 e3       	ldi	r30, 0x30	; 48
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	81 81       	ldd	r24, Z+1	; 0x01
    1034:	48 2f       	mov	r20, r24
    1036:	8b 81       	ldd	r24, Y+3	; 0x03
    1038:	28 2f       	mov	r18, r24
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	02 2e       	mov	r0, r18
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <MDIO_stderrSetPinDirection+0x110>
    1044:	88 0f       	add	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	0a 94       	dec	r0
    104a:	e2 f7       	brpl	.-8      	; 0x1044 <MDIO_stderrSetPinDirection+0x10c>
    104c:	84 2b       	or	r24, r20
    104e:	11 96       	adiw	r26, 0x01	; 1
    1050:	8c 93       	st	X, r24
    1052:	11 97       	sbiw	r26, 0x01	; 1
    1054:	5e c1       	rjmp	.+700    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	89 83       	std	Y+1, r24	; 0x01
    105a:	5b c1       	rjmp	.+694    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else if(MDIO_INPUT == ARG_u8Direction)
    105c:	8c 81       	ldd	r24, Y+4	; 0x04
    105e:	82 30       	cpi	r24, 0x02	; 2
    1060:	09 f0       	breq	.+2      	; 0x1064 <MDIO_stderrSetPinDirection+0x12c>
    1062:	80 c0       	rjmp	.+256    	; 0x1164 <MDIO_stderrSetPinDirection+0x22c>
		{
			switch(ARG_u8Port)
    1064:	8a 81       	ldd	r24, Y+2	; 0x02
    1066:	28 2f       	mov	r18, r24
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	38 87       	std	Y+8, r19	; 0x08
    106c:	2f 83       	std	Y+7, r18	; 0x07
    106e:	8f 81       	ldd	r24, Y+7	; 0x07
    1070:	98 85       	ldd	r25, Y+8	; 0x08
    1072:	82 30       	cpi	r24, 0x02	; 2
    1074:	91 05       	cpc	r25, r1
    1076:	71 f1       	breq	.+92     	; 0x10d4 <MDIO_stderrSetPinDirection+0x19c>
    1078:	2f 81       	ldd	r18, Y+7	; 0x07
    107a:	38 85       	ldd	r19, Y+8	; 0x08
    107c:	23 30       	cpi	r18, 0x03	; 3
    107e:	31 05       	cpc	r19, r1
    1080:	34 f4       	brge	.+12     	; 0x108e <MDIO_stderrSetPinDirection+0x156>
    1082:	8f 81       	ldd	r24, Y+7	; 0x07
    1084:	98 85       	ldd	r25, Y+8	; 0x08
    1086:	81 30       	cpi	r24, 0x01	; 1
    1088:	91 05       	cpc	r25, r1
    108a:	69 f0       	breq	.+26     	; 0x10a6 <MDIO_stderrSetPinDirection+0x16e>
    108c:	68 c0       	rjmp	.+208    	; 0x115e <MDIO_stderrSetPinDirection+0x226>
    108e:	2f 81       	ldd	r18, Y+7	; 0x07
    1090:	38 85       	ldd	r19, Y+8	; 0x08
    1092:	23 30       	cpi	r18, 0x03	; 3
    1094:	31 05       	cpc	r19, r1
    1096:	a9 f1       	breq	.+106    	; 0x1102 <MDIO_stderrSetPinDirection+0x1ca>
    1098:	8f 81       	ldd	r24, Y+7	; 0x07
    109a:	98 85       	ldd	r25, Y+8	; 0x08
    109c:	84 30       	cpi	r24, 0x04	; 4
    109e:	91 05       	cpc	r25, r1
    10a0:	09 f4       	brne	.+2      	; 0x10a4 <MDIO_stderrSetPinDirection+0x16c>
    10a2:	46 c0       	rjmp	.+140    	; 0x1130 <MDIO_stderrSetPinDirection+0x1f8>
    10a4:	5c c0       	rjmp	.+184    	; 0x115e <MDIO_stderrSetPinDirection+0x226>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); break;
    10a6:	a9 e3       	ldi	r26, 0x39	; 57
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	e9 e3       	ldi	r30, 0x39	; 57
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	81 81       	ldd	r24, Z+1	; 0x01
    10b0:	48 2f       	mov	r20, r24
    10b2:	8b 81       	ldd	r24, Y+3	; 0x03
    10b4:	28 2f       	mov	r18, r24
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	02 2e       	mov	r0, r18
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <MDIO_stderrSetPinDirection+0x18c>
    10c0:	88 0f       	add	r24, r24
    10c2:	99 1f       	adc	r25, r25
    10c4:	0a 94       	dec	r0
    10c6:	e2 f7       	brpl	.-8      	; 0x10c0 <MDIO_stderrSetPinDirection+0x188>
    10c8:	80 95       	com	r24
    10ca:	84 23       	and	r24, r20
    10cc:	11 96       	adiw	r26, 0x01	; 1
    10ce:	8c 93       	st	X, r24
    10d0:	11 97       	sbiw	r26, 0x01	; 1
    10d2:	1f c1       	rjmp	.+574    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); break;
    10d4:	a6 e3       	ldi	r26, 0x36	; 54
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	e6 e3       	ldi	r30, 0x36	; 54
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	81 81       	ldd	r24, Z+1	; 0x01
    10de:	48 2f       	mov	r20, r24
    10e0:	8b 81       	ldd	r24, Y+3	; 0x03
    10e2:	28 2f       	mov	r18, r24
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	02 2e       	mov	r0, r18
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <MDIO_stderrSetPinDirection+0x1ba>
    10ee:	88 0f       	add	r24, r24
    10f0:	99 1f       	adc	r25, r25
    10f2:	0a 94       	dec	r0
    10f4:	e2 f7       	brpl	.-8      	; 0x10ee <MDIO_stderrSetPinDirection+0x1b6>
    10f6:	80 95       	com	r24
    10f8:	84 23       	and	r24, r20
    10fa:	11 96       	adiw	r26, 0x01	; 1
    10fc:	8c 93       	st	X, r24
    10fe:	11 97       	sbiw	r26, 0x01	; 1
    1100:	08 c1       	rjmp	.+528    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); break;
    1102:	a3 e3       	ldi	r26, 0x33	; 51
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	e3 e3       	ldi	r30, 0x33	; 51
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	81 81       	ldd	r24, Z+1	; 0x01
    110c:	48 2f       	mov	r20, r24
    110e:	8b 81       	ldd	r24, Y+3	; 0x03
    1110:	28 2f       	mov	r18, r24
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	81 e0       	ldi	r24, 0x01	; 1
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	02 2e       	mov	r0, r18
    111a:	02 c0       	rjmp	.+4      	; 0x1120 <MDIO_stderrSetPinDirection+0x1e8>
    111c:	88 0f       	add	r24, r24
    111e:	99 1f       	adc	r25, r25
    1120:	0a 94       	dec	r0
    1122:	e2 f7       	brpl	.-8      	; 0x111c <MDIO_stderrSetPinDirection+0x1e4>
    1124:	80 95       	com	r24
    1126:	84 23       	and	r24, r20
    1128:	11 96       	adiw	r26, 0x01	; 1
    112a:	8c 93       	st	X, r24
    112c:	11 97       	sbiw	r26, 0x01	; 1
    112e:	f1 c0       	rjmp	.+482    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); break;
    1130:	a0 e3       	ldi	r26, 0x30	; 48
    1132:	b0 e0       	ldi	r27, 0x00	; 0
    1134:	e0 e3       	ldi	r30, 0x30	; 48
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	81 81       	ldd	r24, Z+1	; 0x01
    113a:	48 2f       	mov	r20, r24
    113c:	8b 81       	ldd	r24, Y+3	; 0x03
    113e:	28 2f       	mov	r18, r24
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	02 2e       	mov	r0, r18
    1148:	02 c0       	rjmp	.+4      	; 0x114e <MDIO_stderrSetPinDirection+0x216>
    114a:	88 0f       	add	r24, r24
    114c:	99 1f       	adc	r25, r25
    114e:	0a 94       	dec	r0
    1150:	e2 f7       	brpl	.-8      	; 0x114a <MDIO_stderrSetPinDirection+0x212>
    1152:	80 95       	com	r24
    1154:	84 23       	and	r24, r20
    1156:	11 96       	adiw	r26, 0x01	; 1
    1158:	8c 93       	st	X, r24
    115a:	11 97       	sbiw	r26, 0x01	; 1
    115c:	da c0       	rjmp	.+436    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	89 83       	std	Y+1, r24	; 0x01
    1162:	d7 c0       	rjmp	.+430    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else if(MDIO_INPUT_PULLUP == ARG_u8Direction)
    1164:	8c 81       	ldd	r24, Y+4	; 0x04
    1166:	83 30       	cpi	r24, 0x03	; 3
    1168:	09 f0       	breq	.+2      	; 0x116c <MDIO_stderrSetPinDirection+0x234>
    116a:	ce c0       	rjmp	.+412    	; 0x1308 <MDIO_stderrSetPinDirection+0x3d0>
		{
			switch(ARG_u8Port)
    116c:	8a 81       	ldd	r24, Y+2	; 0x02
    116e:	28 2f       	mov	r18, r24
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	3e 83       	std	Y+6, r19	; 0x06
    1174:	2d 83       	std	Y+5, r18	; 0x05
    1176:	8d 81       	ldd	r24, Y+5	; 0x05
    1178:	9e 81       	ldd	r25, Y+6	; 0x06
    117a:	82 30       	cpi	r24, 0x02	; 2
    117c:	91 05       	cpc	r25, r1
    117e:	09 f4       	brne	.+2      	; 0x1182 <MDIO_stderrSetPinDirection+0x24a>
    1180:	42 c0       	rjmp	.+132    	; 0x1206 <MDIO_stderrSetPinDirection+0x2ce>
    1182:	2d 81       	ldd	r18, Y+5	; 0x05
    1184:	3e 81       	ldd	r19, Y+6	; 0x06
    1186:	23 30       	cpi	r18, 0x03	; 3
    1188:	31 05       	cpc	r19, r1
    118a:	34 f4       	brge	.+12     	; 0x1198 <MDIO_stderrSetPinDirection+0x260>
    118c:	8d 81       	ldd	r24, Y+5	; 0x05
    118e:	9e 81       	ldd	r25, Y+6	; 0x06
    1190:	81 30       	cpi	r24, 0x01	; 1
    1192:	91 05       	cpc	r25, r1
    1194:	71 f0       	breq	.+28     	; 0x11b2 <MDIO_stderrSetPinDirection+0x27a>
    1196:	b5 c0       	rjmp	.+362    	; 0x1302 <MDIO_stderrSetPinDirection+0x3ca>
    1198:	2d 81       	ldd	r18, Y+5	; 0x05
    119a:	3e 81       	ldd	r19, Y+6	; 0x06
    119c:	23 30       	cpi	r18, 0x03	; 3
    119e:	31 05       	cpc	r19, r1
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <MDIO_stderrSetPinDirection+0x26c>
    11a2:	5b c0       	rjmp	.+182    	; 0x125a <MDIO_stderrSetPinDirection+0x322>
    11a4:	8d 81       	ldd	r24, Y+5	; 0x05
    11a6:	9e 81       	ldd	r25, Y+6	; 0x06
    11a8:	84 30       	cpi	r24, 0x04	; 4
    11aa:	91 05       	cpc	r25, r1
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <MDIO_stderrSetPinDirection+0x278>
    11ae:	7f c0       	rjmp	.+254    	; 0x12ae <MDIO_stderrSetPinDirection+0x376>
    11b0:	a8 c0       	rjmp	.+336    	; 0x1302 <MDIO_stderrSetPinDirection+0x3ca>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    11b2:	a9 e3       	ldi	r26, 0x39	; 57
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	e9 e3       	ldi	r30, 0x39	; 57
    11b8:	f0 e0       	ldi	r31, 0x00	; 0
    11ba:	81 81       	ldd	r24, Z+1	; 0x01
    11bc:	48 2f       	mov	r20, r24
    11be:	8b 81       	ldd	r24, Y+3	; 0x03
    11c0:	28 2f       	mov	r18, r24
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	02 c0       	rjmp	.+4      	; 0x11ce <MDIO_stderrSetPinDirection+0x296>
    11ca:	88 0f       	add	r24, r24
    11cc:	99 1f       	adc	r25, r25
    11ce:	2a 95       	dec	r18
    11d0:	e2 f7       	brpl	.-8      	; 0x11ca <MDIO_stderrSetPinDirection+0x292>
    11d2:	80 95       	com	r24
    11d4:	84 23       	and	r24, r20
    11d6:	11 96       	adiw	r26, 0x01	; 1
    11d8:	8c 93       	st	X, r24
    11da:	a9 e3       	ldi	r26, 0x39	; 57
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	e9 e3       	ldi	r30, 0x39	; 57
    11e0:	f0 e0       	ldi	r31, 0x00	; 0
    11e2:	82 81       	ldd	r24, Z+2	; 0x02
    11e4:	48 2f       	mov	r20, r24
    11e6:	8b 81       	ldd	r24, Y+3	; 0x03
    11e8:	28 2f       	mov	r18, r24
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	02 2e       	mov	r0, r18
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <MDIO_stderrSetPinDirection+0x2c0>
    11f4:	88 0f       	add	r24, r24
    11f6:	99 1f       	adc	r25, r25
    11f8:	0a 94       	dec	r0
    11fa:	e2 f7       	brpl	.-8      	; 0x11f4 <MDIO_stderrSetPinDirection+0x2bc>
    11fc:	84 2b       	or	r24, r20
    11fe:	12 96       	adiw	r26, 0x02	; 2
    1200:	8c 93       	st	X, r24
    1202:	12 97       	sbiw	r26, 0x02	; 2
    1204:	86 c0       	rjmp	.+268    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    1206:	a6 e3       	ldi	r26, 0x36	; 54
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	e6 e3       	ldi	r30, 0x36	; 54
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	81 81       	ldd	r24, Z+1	; 0x01
    1210:	48 2f       	mov	r20, r24
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	02 c0       	rjmp	.+4      	; 0x1222 <MDIO_stderrSetPinDirection+0x2ea>
    121e:	88 0f       	add	r24, r24
    1220:	99 1f       	adc	r25, r25
    1222:	2a 95       	dec	r18
    1224:	e2 f7       	brpl	.-8      	; 0x121e <MDIO_stderrSetPinDirection+0x2e6>
    1226:	80 95       	com	r24
    1228:	84 23       	and	r24, r20
    122a:	11 96       	adiw	r26, 0x01	; 1
    122c:	8c 93       	st	X, r24
    122e:	a6 e3       	ldi	r26, 0x36	; 54
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	e6 e3       	ldi	r30, 0x36	; 54
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	82 81       	ldd	r24, Z+2	; 0x02
    1238:	48 2f       	mov	r20, r24
    123a:	8b 81       	ldd	r24, Y+3	; 0x03
    123c:	28 2f       	mov	r18, r24
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	02 2e       	mov	r0, r18
    1246:	02 c0       	rjmp	.+4      	; 0x124c <MDIO_stderrSetPinDirection+0x314>
    1248:	88 0f       	add	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	0a 94       	dec	r0
    124e:	e2 f7       	brpl	.-8      	; 0x1248 <MDIO_stderrSetPinDirection+0x310>
    1250:	84 2b       	or	r24, r20
    1252:	12 96       	adiw	r26, 0x02	; 2
    1254:	8c 93       	st	X, r24
    1256:	12 97       	sbiw	r26, 0x02	; 2
    1258:	5c c0       	rjmp	.+184    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    125a:	a3 e3       	ldi	r26, 0x33	; 51
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	e3 e3       	ldi	r30, 0x33	; 51
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	81 81       	ldd	r24, Z+1	; 0x01
    1264:	48 2f       	mov	r20, r24
    1266:	8b 81       	ldd	r24, Y+3	; 0x03
    1268:	28 2f       	mov	r18, r24
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	81 e0       	ldi	r24, 0x01	; 1
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <MDIO_stderrSetPinDirection+0x33e>
    1272:	88 0f       	add	r24, r24
    1274:	99 1f       	adc	r25, r25
    1276:	2a 95       	dec	r18
    1278:	e2 f7       	brpl	.-8      	; 0x1272 <MDIO_stderrSetPinDirection+0x33a>
    127a:	80 95       	com	r24
    127c:	84 23       	and	r24, r20
    127e:	11 96       	adiw	r26, 0x01	; 1
    1280:	8c 93       	st	X, r24
    1282:	a3 e3       	ldi	r26, 0x33	; 51
    1284:	b0 e0       	ldi	r27, 0x00	; 0
    1286:	e3 e3       	ldi	r30, 0x33	; 51
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	82 81       	ldd	r24, Z+2	; 0x02
    128c:	48 2f       	mov	r20, r24
    128e:	8b 81       	ldd	r24, Y+3	; 0x03
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	02 2e       	mov	r0, r18
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <MDIO_stderrSetPinDirection+0x368>
    129c:	88 0f       	add	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	0a 94       	dec	r0
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <MDIO_stderrSetPinDirection+0x364>
    12a4:	84 2b       	or	r24, r20
    12a6:	12 96       	adiw	r26, 0x02	; 2
    12a8:	8c 93       	st	X, r24
    12aa:	12 97       	sbiw	r26, 0x02	; 2
    12ac:	32 c0       	rjmp	.+100    	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    12ae:	a0 e3       	ldi	r26, 0x30	; 48
    12b0:	b0 e0       	ldi	r27, 0x00	; 0
    12b2:	e0 e3       	ldi	r30, 0x30	; 48
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	81 81       	ldd	r24, Z+1	; 0x01
    12b8:	48 2f       	mov	r20, r24
    12ba:	8b 81       	ldd	r24, Y+3	; 0x03
    12bc:	28 2f       	mov	r18, r24
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	02 c0       	rjmp	.+4      	; 0x12ca <MDIO_stderrSetPinDirection+0x392>
    12c6:	88 0f       	add	r24, r24
    12c8:	99 1f       	adc	r25, r25
    12ca:	2a 95       	dec	r18
    12cc:	e2 f7       	brpl	.-8      	; 0x12c6 <MDIO_stderrSetPinDirection+0x38e>
    12ce:	80 95       	com	r24
    12d0:	84 23       	and	r24, r20
    12d2:	11 96       	adiw	r26, 0x01	; 1
    12d4:	8c 93       	st	X, r24
    12d6:	a0 e3       	ldi	r26, 0x30	; 48
    12d8:	b0 e0       	ldi	r27, 0x00	; 0
    12da:	e0 e3       	ldi	r30, 0x30	; 48
    12dc:	f0 e0       	ldi	r31, 0x00	; 0
    12de:	82 81       	ldd	r24, Z+2	; 0x02
    12e0:	48 2f       	mov	r20, r24
    12e2:	8b 81       	ldd	r24, Y+3	; 0x03
    12e4:	28 2f       	mov	r18, r24
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	02 2e       	mov	r0, r18
    12ee:	02 c0       	rjmp	.+4      	; 0x12f4 <MDIO_stderrSetPinDirection+0x3bc>
    12f0:	88 0f       	add	r24, r24
    12f2:	99 1f       	adc	r25, r25
    12f4:	0a 94       	dec	r0
    12f6:	e2 f7       	brpl	.-8      	; 0x12f0 <MDIO_stderrSetPinDirection+0x3b8>
    12f8:	84 2b       	or	r24, r20
    12fa:	12 96       	adiw	r26, 0x02	; 2
    12fc:	8c 93       	st	X, r24
    12fe:	12 97       	sbiw	r26, 0x02	; 2
    1300:	08 c0       	rjmp	.+16     	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
    1302:	81 e0       	ldi	r24, 0x01	; 1
    1304:	89 83       	std	Y+1, r24	; 0x01
    1306:	05 c0       	rjmp	.+10     	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else
		{
			/* Report an Error */
			L_stderrError = E_NOK;
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	89 83       	std	Y+1, r24	; 0x01
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <MDIO_stderrSetPinDirection+0x3da>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
    1312:	89 81       	ldd	r24, Y+1	; 0x01
}
    1314:	2a 96       	adiw	r28, 0x0a	; 10
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	f8 94       	cli
    131a:	de bf       	out	0x3e, r29	; 62
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	cd bf       	out	0x3d, r28	; 61
    1320:	cf 91       	pop	r28
    1322:	df 91       	pop	r29
    1324:	08 95       	ret

00001326 <MDIO_stderrSetPinValue>:

STD_error_t MDIO_stderrSetPinValue(u8 ARG_u8Port, u8 ARG_u8Pin, u8 ARG_u8Value)
{
    1326:	df 93       	push	r29
    1328:	cf 93       	push	r28
    132a:	cd b7       	in	r28, 0x3d	; 61
    132c:	de b7       	in	r29, 0x3e	; 62
    132e:	28 97       	sbiw	r28, 0x08	; 8
    1330:	0f b6       	in	r0, 0x3f	; 63
    1332:	f8 94       	cli
    1334:	de bf       	out	0x3e, r29	; 62
    1336:	0f be       	out	0x3f, r0	; 63
    1338:	cd bf       	out	0x3d, r28	; 61
    133a:	8a 83       	std	Y+2, r24	; 0x02
    133c:	6b 83       	std	Y+3, r22	; 0x03
    133e:	4c 83       	std	Y+4, r20	; 0x04
	STD_error_t L_stderrError = E_OK;
    1340:	19 82       	std	Y+1, r1	; 0x01
	if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
    1342:	8b 81       	ldd	r24, Y+3	; 0x03
    1344:	88 30       	cpi	r24, 0x08	; 8
    1346:	08 f0       	brcs	.+2      	; 0x134a <MDIO_stderrSetPinValue+0x24>
    1348:	07 c1       	rjmp	.+526    	; 0x1558 <MDIO_stderrSetPinValue+0x232>
	{
		if(MDIO_HIGH == ARG_u8Value)
    134a:	8c 81       	ldd	r24, Y+4	; 0x04
    134c:	82 30       	cpi	r24, 0x02	; 2
    134e:	09 f0       	breq	.+2      	; 0x1352 <MDIO_stderrSetPinValue+0x2c>
    1350:	7c c0       	rjmp	.+248    	; 0x144a <MDIO_stderrSetPinValue+0x124>
		{
			switch(ARG_u8Port)
    1352:	8a 81       	ldd	r24, Y+2	; 0x02
    1354:	28 2f       	mov	r18, r24
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	38 87       	std	Y+8, r19	; 0x08
    135a:	2f 83       	std	Y+7, r18	; 0x07
    135c:	8f 81       	ldd	r24, Y+7	; 0x07
    135e:	98 85       	ldd	r25, Y+8	; 0x08
    1360:	82 30       	cpi	r24, 0x02	; 2
    1362:	91 05       	cpc	r25, r1
    1364:	69 f1       	breq	.+90     	; 0x13c0 <MDIO_stderrSetPinValue+0x9a>
    1366:	2f 81       	ldd	r18, Y+7	; 0x07
    1368:	38 85       	ldd	r19, Y+8	; 0x08
    136a:	23 30       	cpi	r18, 0x03	; 3
    136c:	31 05       	cpc	r19, r1
    136e:	34 f4       	brge	.+12     	; 0x137c <MDIO_stderrSetPinValue+0x56>
    1370:	8f 81       	ldd	r24, Y+7	; 0x07
    1372:	98 85       	ldd	r25, Y+8	; 0x08
    1374:	81 30       	cpi	r24, 0x01	; 1
    1376:	91 05       	cpc	r25, r1
    1378:	69 f0       	breq	.+26     	; 0x1394 <MDIO_stderrSetPinValue+0x6e>
    137a:	64 c0       	rjmp	.+200    	; 0x1444 <MDIO_stderrSetPinValue+0x11e>
    137c:	2f 81       	ldd	r18, Y+7	; 0x07
    137e:	38 85       	ldd	r19, Y+8	; 0x08
    1380:	23 30       	cpi	r18, 0x03	; 3
    1382:	31 05       	cpc	r19, r1
    1384:	99 f1       	breq	.+102    	; 0x13ec <MDIO_stderrSetPinValue+0xc6>
    1386:	8f 81       	ldd	r24, Y+7	; 0x07
    1388:	98 85       	ldd	r25, Y+8	; 0x08
    138a:	84 30       	cpi	r24, 0x04	; 4
    138c:	91 05       	cpc	r25, r1
    138e:	09 f4       	brne	.+2      	; 0x1392 <MDIO_stderrSetPinValue+0x6c>
    1390:	43 c0       	rjmp	.+134    	; 0x1418 <MDIO_stderrSetPinValue+0xf2>
    1392:	58 c0       	rjmp	.+176    	; 0x1444 <MDIO_stderrSetPinValue+0x11e>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    1394:	a9 e3       	ldi	r26, 0x39	; 57
    1396:	b0 e0       	ldi	r27, 0x00	; 0
    1398:	e9 e3       	ldi	r30, 0x39	; 57
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	82 81       	ldd	r24, Z+2	; 0x02
    139e:	48 2f       	mov	r20, r24
    13a0:	8b 81       	ldd	r24, Y+3	; 0x03
    13a2:	28 2f       	mov	r18, r24
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	81 e0       	ldi	r24, 0x01	; 1
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	02 2e       	mov	r0, r18
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <MDIO_stderrSetPinValue+0x8c>
    13ae:	88 0f       	add	r24, r24
    13b0:	99 1f       	adc	r25, r25
    13b2:	0a 94       	dec	r0
    13b4:	e2 f7       	brpl	.-8      	; 0x13ae <MDIO_stderrSetPinValue+0x88>
    13b6:	84 2b       	or	r24, r20
    13b8:	12 96       	adiw	r26, 0x02	; 2
    13ba:	8c 93       	st	X, r24
    13bc:	12 97       	sbiw	r26, 0x02	; 2
    13be:	ce c0       	rjmp	.+412    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTB: SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    13c0:	a6 e3       	ldi	r26, 0x36	; 54
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	e6 e3       	ldi	r30, 0x36	; 54
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	82 81       	ldd	r24, Z+2	; 0x02
    13ca:	48 2f       	mov	r20, r24
    13cc:	8b 81       	ldd	r24, Y+3	; 0x03
    13ce:	28 2f       	mov	r18, r24
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	81 e0       	ldi	r24, 0x01	; 1
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	02 2e       	mov	r0, r18
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <MDIO_stderrSetPinValue+0xb8>
    13da:	88 0f       	add	r24, r24
    13dc:	99 1f       	adc	r25, r25
    13de:	0a 94       	dec	r0
    13e0:	e2 f7       	brpl	.-8      	; 0x13da <MDIO_stderrSetPinValue+0xb4>
    13e2:	84 2b       	or	r24, r20
    13e4:	12 96       	adiw	r26, 0x02	; 2
    13e6:	8c 93       	st	X, r24
    13e8:	12 97       	sbiw	r26, 0x02	; 2
    13ea:	b8 c0       	rjmp	.+368    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTC: SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    13ec:	a3 e3       	ldi	r26, 0x33	; 51
    13ee:	b0 e0       	ldi	r27, 0x00	; 0
    13f0:	e3 e3       	ldi	r30, 0x33	; 51
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	82 81       	ldd	r24, Z+2	; 0x02
    13f6:	48 2f       	mov	r20, r24
    13f8:	8b 81       	ldd	r24, Y+3	; 0x03
    13fa:	28 2f       	mov	r18, r24
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	02 2e       	mov	r0, r18
    1404:	02 c0       	rjmp	.+4      	; 0x140a <MDIO_stderrSetPinValue+0xe4>
    1406:	88 0f       	add	r24, r24
    1408:	99 1f       	adc	r25, r25
    140a:	0a 94       	dec	r0
    140c:	e2 f7       	brpl	.-8      	; 0x1406 <MDIO_stderrSetPinValue+0xe0>
    140e:	84 2b       	or	r24, r20
    1410:	12 96       	adiw	r26, 0x02	; 2
    1412:	8c 93       	st	X, r24
    1414:	12 97       	sbiw	r26, 0x02	; 2
    1416:	a2 c0       	rjmp	.+324    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTD: SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1418:	a0 e3       	ldi	r26, 0x30	; 48
    141a:	b0 e0       	ldi	r27, 0x00	; 0
    141c:	e0 e3       	ldi	r30, 0x30	; 48
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	82 81       	ldd	r24, Z+2	; 0x02
    1422:	48 2f       	mov	r20, r24
    1424:	8b 81       	ldd	r24, Y+3	; 0x03
    1426:	28 2f       	mov	r18, r24
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	02 2e       	mov	r0, r18
    1430:	02 c0       	rjmp	.+4      	; 0x1436 <MDIO_stderrSetPinValue+0x110>
    1432:	88 0f       	add	r24, r24
    1434:	99 1f       	adc	r25, r25
    1436:	0a 94       	dec	r0
    1438:	e2 f7       	brpl	.-8      	; 0x1432 <MDIO_stderrSetPinValue+0x10c>
    143a:	84 2b       	or	r24, r20
    143c:	12 96       	adiw	r26, 0x02	; 2
    143e:	8c 93       	st	X, r24
    1440:	12 97       	sbiw	r26, 0x02	; 2
    1442:	8c c0       	rjmp	.+280    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				default: L_stderrError = E_NOK; break; /* Report an Error */
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	89 83       	std	Y+1, r24	; 0x01
    1448:	89 c0       	rjmp	.+274    	; 0x155c <MDIO_stderrSetPinValue+0x236>
			}
		}
		else if(MDIO_LOW == ARG_u8Value)
    144a:	8c 81       	ldd	r24, Y+4	; 0x04
    144c:	81 30       	cpi	r24, 0x01	; 1
    144e:	09 f0       	breq	.+2      	; 0x1452 <MDIO_stderrSetPinValue+0x12c>
    1450:	80 c0       	rjmp	.+256    	; 0x1552 <MDIO_stderrSetPinValue+0x22c>
		{
			switch(ARG_u8Port)
    1452:	8a 81       	ldd	r24, Y+2	; 0x02
    1454:	28 2f       	mov	r18, r24
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	3e 83       	std	Y+6, r19	; 0x06
    145a:	2d 83       	std	Y+5, r18	; 0x05
    145c:	8d 81       	ldd	r24, Y+5	; 0x05
    145e:	9e 81       	ldd	r25, Y+6	; 0x06
    1460:	82 30       	cpi	r24, 0x02	; 2
    1462:	91 05       	cpc	r25, r1
    1464:	71 f1       	breq	.+92     	; 0x14c2 <MDIO_stderrSetPinValue+0x19c>
    1466:	2d 81       	ldd	r18, Y+5	; 0x05
    1468:	3e 81       	ldd	r19, Y+6	; 0x06
    146a:	23 30       	cpi	r18, 0x03	; 3
    146c:	31 05       	cpc	r19, r1
    146e:	34 f4       	brge	.+12     	; 0x147c <MDIO_stderrSetPinValue+0x156>
    1470:	8d 81       	ldd	r24, Y+5	; 0x05
    1472:	9e 81       	ldd	r25, Y+6	; 0x06
    1474:	81 30       	cpi	r24, 0x01	; 1
    1476:	91 05       	cpc	r25, r1
    1478:	69 f0       	breq	.+26     	; 0x1494 <MDIO_stderrSetPinValue+0x16e>
    147a:	68 c0       	rjmp	.+208    	; 0x154c <MDIO_stderrSetPinValue+0x226>
    147c:	2d 81       	ldd	r18, Y+5	; 0x05
    147e:	3e 81       	ldd	r19, Y+6	; 0x06
    1480:	23 30       	cpi	r18, 0x03	; 3
    1482:	31 05       	cpc	r19, r1
    1484:	a9 f1       	breq	.+106    	; 0x14f0 <MDIO_stderrSetPinValue+0x1ca>
    1486:	8d 81       	ldd	r24, Y+5	; 0x05
    1488:	9e 81       	ldd	r25, Y+6	; 0x06
    148a:	84 30       	cpi	r24, 0x04	; 4
    148c:	91 05       	cpc	r25, r1
    148e:	09 f4       	brne	.+2      	; 0x1492 <MDIO_stderrSetPinValue+0x16c>
    1490:	46 c0       	rjmp	.+140    	; 0x151e <MDIO_stderrSetPinValue+0x1f8>
    1492:	5c c0       	rjmp	.+184    	; 0x154c <MDIO_stderrSetPinValue+0x226>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    1494:	a9 e3       	ldi	r26, 0x39	; 57
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	e9 e3       	ldi	r30, 0x39	; 57
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	82 81       	ldd	r24, Z+2	; 0x02
    149e:	48 2f       	mov	r20, r24
    14a0:	8b 81       	ldd	r24, Y+3	; 0x03
    14a2:	28 2f       	mov	r18, r24
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	02 2e       	mov	r0, r18
    14ac:	02 c0       	rjmp	.+4      	; 0x14b2 <MDIO_stderrSetPinValue+0x18c>
    14ae:	88 0f       	add	r24, r24
    14b0:	99 1f       	adc	r25, r25
    14b2:	0a 94       	dec	r0
    14b4:	e2 f7       	brpl	.-8      	; 0x14ae <MDIO_stderrSetPinValue+0x188>
    14b6:	80 95       	com	r24
    14b8:	84 23       	and	r24, r20
    14ba:	12 96       	adiw	r26, 0x02	; 2
    14bc:	8c 93       	st	X, r24
    14be:	12 97       	sbiw	r26, 0x02	; 2
    14c0:	4d c0       	rjmp	.+154    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    14c2:	a6 e3       	ldi	r26, 0x36	; 54
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e6 e3       	ldi	r30, 0x36	; 54
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	82 81       	ldd	r24, Z+2	; 0x02
    14cc:	48 2f       	mov	r20, r24
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	28 2f       	mov	r18, r24
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 2e       	mov	r0, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <MDIO_stderrSetPinValue+0x1ba>
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	0a 94       	dec	r0
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <MDIO_stderrSetPinValue+0x1b6>
    14e4:	80 95       	com	r24
    14e6:	84 23       	and	r24, r20
    14e8:	12 96       	adiw	r26, 0x02	; 2
    14ea:	8c 93       	st	X, r24
    14ec:	12 97       	sbiw	r26, 0x02	; 2
    14ee:	36 c0       	rjmp	.+108    	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    14f0:	a3 e3       	ldi	r26, 0x33	; 51
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	e3 e3       	ldi	r30, 0x33	; 51
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	82 81       	ldd	r24, Z+2	; 0x02
    14fa:	48 2f       	mov	r20, r24
    14fc:	8b 81       	ldd	r24, Y+3	; 0x03
    14fe:	28 2f       	mov	r18, r24
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	02 2e       	mov	r0, r18
    1508:	02 c0       	rjmp	.+4      	; 0x150e <MDIO_stderrSetPinValue+0x1e8>
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	0a 94       	dec	r0
    1510:	e2 f7       	brpl	.-8      	; 0x150a <MDIO_stderrSetPinValue+0x1e4>
    1512:	80 95       	com	r24
    1514:	84 23       	and	r24, r20
    1516:	12 96       	adiw	r26, 0x02	; 2
    1518:	8c 93       	st	X, r24
    151a:	12 97       	sbiw	r26, 0x02	; 2
    151c:	1f c0       	rjmp	.+62     	; 0x155c <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    151e:	a0 e3       	ldi	r26, 0x30	; 48
    1520:	b0 e0       	ldi	r27, 0x00	; 0
    1522:	e0 e3       	ldi	r30, 0x30	; 48
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	82 81       	ldd	r24, Z+2	; 0x02
    1528:	48 2f       	mov	r20, r24
    152a:	8b 81       	ldd	r24, Y+3	; 0x03
    152c:	28 2f       	mov	r18, r24
    152e:	30 e0       	ldi	r19, 0x00	; 0
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	02 2e       	mov	r0, r18
    1536:	02 c0       	rjmp	.+4      	; 0x153c <MDIO_stderrSetPinValue+0x216>
    1538:	88 0f       	add	r24, r24
    153a:	99 1f       	adc	r25, r25
    153c:	0a 94       	dec	r0
    153e:	e2 f7       	brpl	.-8      	; 0x1538 <MDIO_stderrSetPinValue+0x212>
    1540:	80 95       	com	r24
    1542:	84 23       	and	r24, r20
    1544:	12 96       	adiw	r26, 0x02	; 2
    1546:	8c 93       	st	X, r24
    1548:	12 97       	sbiw	r26, 0x02	; 2
    154a:	08 c0       	rjmp	.+16     	; 0x155c <MDIO_stderrSetPinValue+0x236>
				default: L_stderrError = E_NOK; break; /* Report an Error */
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	89 83       	std	Y+1, r24	; 0x01
    1550:	05 c0       	rjmp	.+10     	; 0x155c <MDIO_stderrSetPinValue+0x236>
			}
		}
		else
		{
			/* Report an Error */
			L_stderrError = E_NOK;
    1552:	81 e0       	ldi	r24, 0x01	; 1
    1554:	89 83       	std	Y+1, r24	; 0x01
    1556:	02 c0       	rjmp	.+4      	; 0x155c <MDIO_stderrSetPinValue+0x236>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
    155c:	89 81       	ldd	r24, Y+1	; 0x01
}
    155e:	28 96       	adiw	r28, 0x08	; 8
    1560:	0f b6       	in	r0, 0x3f	; 63
    1562:	f8 94       	cli
    1564:	de bf       	out	0x3e, r29	; 62
    1566:	0f be       	out	0x3f, r0	; 63
    1568:	cd bf       	out	0x3d, r28	; 61
    156a:	cf 91       	pop	r28
    156c:	df 91       	pop	r29
    156e:	08 95       	ret

00001570 <MDIO_stderrGetPinValue>:

STD_error_t MDIO_stderrGetPinValue(u8* ARG_u8pValue, u8 ARG_u8Port, u8 ARG_u8Pin)
{
    1570:	df 93       	push	r29
    1572:	cf 93       	push	r28
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
    1578:	27 97       	sbiw	r28, 0x07	; 7
    157a:	0f b6       	in	r0, 0x3f	; 63
    157c:	f8 94       	cli
    157e:	de bf       	out	0x3e, r29	; 62
    1580:	0f be       	out	0x3f, r0	; 63
    1582:	cd bf       	out	0x3d, r28	; 61
    1584:	9b 83       	std	Y+3, r25	; 0x03
    1586:	8a 83       	std	Y+2, r24	; 0x02
    1588:	6c 83       	std	Y+4, r22	; 0x04
    158a:	4d 83       	std	Y+5, r20	; 0x05
	STD_error_t L_stderrError = E_OK;
    158c:	19 82       	std	Y+1, r1	; 0x01
	if(NULL_POINTER==ARG_u8pValue)
    158e:	8a 81       	ldd	r24, Y+2	; 0x02
    1590:	9b 81       	ldd	r25, Y+3	; 0x03
    1592:	00 97       	sbiw	r24, 0x00	; 0
    1594:	19 f4       	brne	.+6      	; 0x159c <MDIO_stderrGetPinValue+0x2c>
	{
		L_stderrError = E_NULL_POINTER;
    1596:	82 e0       	ldi	r24, 0x02	; 2
    1598:	89 83       	std	Y+1, r24	; 0x01
    159a:	7a c0       	rjmp	.+244    	; 0x1690 <MDIO_stderrGetPinValue+0x120>
	}
	else if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
    159c:	8d 81       	ldd	r24, Y+5	; 0x05
    159e:	88 30       	cpi	r24, 0x08	; 8
    15a0:	08 f0       	brcs	.+2      	; 0x15a4 <MDIO_stderrGetPinValue+0x34>
    15a2:	74 c0       	rjmp	.+232    	; 0x168c <MDIO_stderrGetPinValue+0x11c>
	{
		switch(ARG_u8Port)
    15a4:	8c 81       	ldd	r24, Y+4	; 0x04
    15a6:	28 2f       	mov	r18, r24
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	3f 83       	std	Y+7, r19	; 0x07
    15ac:	2e 83       	std	Y+6, r18	; 0x06
    15ae:	4e 81       	ldd	r20, Y+6	; 0x06
    15b0:	5f 81       	ldd	r21, Y+7	; 0x07
    15b2:	42 30       	cpi	r20, 0x02	; 2
    15b4:	51 05       	cpc	r21, r1
    15b6:	59 f1       	breq	.+86     	; 0x160e <MDIO_stderrGetPinValue+0x9e>
    15b8:	8e 81       	ldd	r24, Y+6	; 0x06
    15ba:	9f 81       	ldd	r25, Y+7	; 0x07
    15bc:	83 30       	cpi	r24, 0x03	; 3
    15be:	91 05       	cpc	r25, r1
    15c0:	34 f4       	brge	.+12     	; 0x15ce <MDIO_stderrGetPinValue+0x5e>
    15c2:	2e 81       	ldd	r18, Y+6	; 0x06
    15c4:	3f 81       	ldd	r19, Y+7	; 0x07
    15c6:	21 30       	cpi	r18, 0x01	; 1
    15c8:	31 05       	cpc	r19, r1
    15ca:	69 f0       	breq	.+26     	; 0x15e6 <MDIO_stderrGetPinValue+0x76>
    15cc:	5c c0       	rjmp	.+184    	; 0x1686 <MDIO_stderrGetPinValue+0x116>
    15ce:	4e 81       	ldd	r20, Y+6	; 0x06
    15d0:	5f 81       	ldd	r21, Y+7	; 0x07
    15d2:	43 30       	cpi	r20, 0x03	; 3
    15d4:	51 05       	cpc	r21, r1
    15d6:	79 f1       	breq	.+94     	; 0x1636 <MDIO_stderrGetPinValue+0xc6>
    15d8:	8e 81       	ldd	r24, Y+6	; 0x06
    15da:	9f 81       	ldd	r25, Y+7	; 0x07
    15dc:	84 30       	cpi	r24, 0x04	; 4
    15de:	91 05       	cpc	r25, r1
    15e0:	09 f4       	brne	.+2      	; 0x15e4 <MDIO_stderrGetPinValue+0x74>
    15e2:	3d c0       	rjmp	.+122    	; 0x165e <MDIO_stderrGetPinValue+0xee>
    15e4:	50 c0       	rjmp	.+160    	; 0x1686 <MDIO_stderrGetPinValue+0x116>
		{
			case MDIO_PORTA: *ARG_u8pValue = GET_BIT(GPIOA -> PIN, ARG_u8Pin); break;
    15e6:	e9 e3       	ldi	r30, 0x39	; 57
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	80 81       	ld	r24, Z
    15ec:	28 2f       	mov	r18, r24
    15ee:	30 e0       	ldi	r19, 0x00	; 0
    15f0:	8d 81       	ldd	r24, Y+5	; 0x05
    15f2:	88 2f       	mov	r24, r24
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	a9 01       	movw	r20, r18
    15f8:	02 c0       	rjmp	.+4      	; 0x15fe <MDIO_stderrGetPinValue+0x8e>
    15fa:	55 95       	asr	r21
    15fc:	47 95       	ror	r20
    15fe:	8a 95       	dec	r24
    1600:	e2 f7       	brpl	.-8      	; 0x15fa <MDIO_stderrGetPinValue+0x8a>
    1602:	ca 01       	movw	r24, r20
    1604:	81 70       	andi	r24, 0x01	; 1
    1606:	ea 81       	ldd	r30, Y+2	; 0x02
    1608:	fb 81       	ldd	r31, Y+3	; 0x03
    160a:	80 83       	st	Z, r24
    160c:	41 c0       	rjmp	.+130    	; 0x1690 <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTB: *ARG_u8pValue = GET_BIT(GPIOB -> PIN, ARG_u8Pin); break;
    160e:	e6 e3       	ldi	r30, 0x36	; 54
    1610:	f0 e0       	ldi	r31, 0x00	; 0
    1612:	80 81       	ld	r24, Z
    1614:	28 2f       	mov	r18, r24
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	8d 81       	ldd	r24, Y+5	; 0x05
    161a:	88 2f       	mov	r24, r24
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	a9 01       	movw	r20, r18
    1620:	02 c0       	rjmp	.+4      	; 0x1626 <MDIO_stderrGetPinValue+0xb6>
    1622:	55 95       	asr	r21
    1624:	47 95       	ror	r20
    1626:	8a 95       	dec	r24
    1628:	e2 f7       	brpl	.-8      	; 0x1622 <MDIO_stderrGetPinValue+0xb2>
    162a:	ca 01       	movw	r24, r20
    162c:	81 70       	andi	r24, 0x01	; 1
    162e:	ea 81       	ldd	r30, Y+2	; 0x02
    1630:	fb 81       	ldd	r31, Y+3	; 0x03
    1632:	80 83       	st	Z, r24
    1634:	2d c0       	rjmp	.+90     	; 0x1690 <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTC: *ARG_u8pValue = GET_BIT(GPIOC -> PIN, ARG_u8Pin); break;
    1636:	e3 e3       	ldi	r30, 0x33	; 51
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	80 81       	ld	r24, Z
    163c:	28 2f       	mov	r18, r24
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	8d 81       	ldd	r24, Y+5	; 0x05
    1642:	88 2f       	mov	r24, r24
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	a9 01       	movw	r20, r18
    1648:	02 c0       	rjmp	.+4      	; 0x164e <MDIO_stderrGetPinValue+0xde>
    164a:	55 95       	asr	r21
    164c:	47 95       	ror	r20
    164e:	8a 95       	dec	r24
    1650:	e2 f7       	brpl	.-8      	; 0x164a <MDIO_stderrGetPinValue+0xda>
    1652:	ca 01       	movw	r24, r20
    1654:	81 70       	andi	r24, 0x01	; 1
    1656:	ea 81       	ldd	r30, Y+2	; 0x02
    1658:	fb 81       	ldd	r31, Y+3	; 0x03
    165a:	80 83       	st	Z, r24
    165c:	19 c0       	rjmp	.+50     	; 0x1690 <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTD: *ARG_u8pValue = GET_BIT(GPIOD -> PIN, ARG_u8Pin); break;
    165e:	e0 e3       	ldi	r30, 0x30	; 48
    1660:	f0 e0       	ldi	r31, 0x00	; 0
    1662:	80 81       	ld	r24, Z
    1664:	28 2f       	mov	r18, r24
    1666:	30 e0       	ldi	r19, 0x00	; 0
    1668:	8d 81       	ldd	r24, Y+5	; 0x05
    166a:	88 2f       	mov	r24, r24
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	a9 01       	movw	r20, r18
    1670:	02 c0       	rjmp	.+4      	; 0x1676 <MDIO_stderrGetPinValue+0x106>
    1672:	55 95       	asr	r21
    1674:	47 95       	ror	r20
    1676:	8a 95       	dec	r24
    1678:	e2 f7       	brpl	.-8      	; 0x1672 <MDIO_stderrGetPinValue+0x102>
    167a:	ca 01       	movw	r24, r20
    167c:	81 70       	andi	r24, 0x01	; 1
    167e:	ea 81       	ldd	r30, Y+2	; 0x02
    1680:	fb 81       	ldd	r31, Y+3	; 0x03
    1682:	80 83       	st	Z, r24
    1684:	05 c0       	rjmp	.+10     	; 0x1690 <MDIO_stderrGetPinValue+0x120>
			default: L_stderrError = E_NOK; break; /* Report an Error */
    1686:	81 e0       	ldi	r24, 0x01	; 1
    1688:	89 83       	std	Y+1, r24	; 0x01
    168a:	02 c0       	rjmp	.+4      	; 0x1690 <MDIO_stderrGetPinValue+0x120>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
    1690:	89 81       	ldd	r24, Y+1	; 0x01
}
    1692:	27 96       	adiw	r28, 0x07	; 7
    1694:	0f b6       	in	r0, 0x3f	; 63
    1696:	f8 94       	cli
    1698:	de bf       	out	0x3e, r29	; 62
    169a:	0f be       	out	0x3f, r0	; 63
    169c:	cd bf       	out	0x3d, r28	; 61
    169e:	cf 91       	pop	r28
    16a0:	df 91       	pop	r29
    16a2:	08 95       	ret

000016a4 <MDIO_stderrTogglePinValue>:

STD_error_t MDIO_stderrTogglePinValue(u8 ARG_u8Port ,u8 ARG_u8Pin)
{
    16a4:	df 93       	push	r29
    16a6:	cf 93       	push	r28
    16a8:	00 d0       	rcall	.+0      	; 0x16aa <MDIO_stderrTogglePinValue+0x6>
    16aa:	00 d0       	rcall	.+0      	; 0x16ac <MDIO_stderrTogglePinValue+0x8>
    16ac:	0f 92       	push	r0
    16ae:	cd b7       	in	r28, 0x3d	; 61
    16b0:	de b7       	in	r29, 0x3e	; 62
    16b2:	8a 83       	std	Y+2, r24	; 0x02
    16b4:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError= E_OK;
    16b6:	19 82       	std	Y+1, r1	; 0x01
	if(ARG_u8Pin>= MDIO_PIN0 && ARG_u8Pin<= MDIO_PIN7)
    16b8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ba:	88 30       	cpi	r24, 0x08	; 8
    16bc:	08 f0       	brcs	.+2      	; 0x16c0 <MDIO_stderrTogglePinValue+0x1c>
    16be:	7c c0       	rjmp	.+248    	; 0x17b8 <MDIO_stderrTogglePinValue+0x114>
	{
		switch(ARG_u8Port)
    16c0:	8a 81       	ldd	r24, Y+2	; 0x02
    16c2:	28 2f       	mov	r18, r24
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	3d 83       	std	Y+5, r19	; 0x05
    16c8:	2c 83       	std	Y+4, r18	; 0x04
    16ca:	8c 81       	ldd	r24, Y+4	; 0x04
    16cc:	9d 81       	ldd	r25, Y+5	; 0x05
    16ce:	82 30       	cpi	r24, 0x02	; 2
    16d0:	91 05       	cpc	r25, r1
    16d2:	69 f1       	breq	.+90     	; 0x172e <MDIO_stderrTogglePinValue+0x8a>
    16d4:	2c 81       	ldd	r18, Y+4	; 0x04
    16d6:	3d 81       	ldd	r19, Y+5	; 0x05
    16d8:	23 30       	cpi	r18, 0x03	; 3
    16da:	31 05       	cpc	r19, r1
    16dc:	34 f4       	brge	.+12     	; 0x16ea <MDIO_stderrTogglePinValue+0x46>
    16de:	8c 81       	ldd	r24, Y+4	; 0x04
    16e0:	9d 81       	ldd	r25, Y+5	; 0x05
    16e2:	81 30       	cpi	r24, 0x01	; 1
    16e4:	91 05       	cpc	r25, r1
    16e6:	69 f0       	breq	.+26     	; 0x1702 <MDIO_stderrTogglePinValue+0x5e>
    16e8:	64 c0       	rjmp	.+200    	; 0x17b2 <MDIO_stderrTogglePinValue+0x10e>
    16ea:	2c 81       	ldd	r18, Y+4	; 0x04
    16ec:	3d 81       	ldd	r19, Y+5	; 0x05
    16ee:	23 30       	cpi	r18, 0x03	; 3
    16f0:	31 05       	cpc	r19, r1
    16f2:	99 f1       	breq	.+102    	; 0x175a <MDIO_stderrTogglePinValue+0xb6>
    16f4:	8c 81       	ldd	r24, Y+4	; 0x04
    16f6:	9d 81       	ldd	r25, Y+5	; 0x05
    16f8:	84 30       	cpi	r24, 0x04	; 4
    16fa:	91 05       	cpc	r25, r1
    16fc:	09 f4       	brne	.+2      	; 0x1700 <MDIO_stderrTogglePinValue+0x5c>
    16fe:	43 c0       	rjmp	.+134    	; 0x1786 <MDIO_stderrTogglePinValue+0xe2>
    1700:	58 c0       	rjmp	.+176    	; 0x17b2 <MDIO_stderrTogglePinValue+0x10e>
		{
			case MDIO_PORTA: TOGGLE_BIT(GPIOA->PORT ,ARG_u8Pin) ; break;
    1702:	a9 e3       	ldi	r26, 0x39	; 57
    1704:	b0 e0       	ldi	r27, 0x00	; 0
    1706:	e9 e3       	ldi	r30, 0x39	; 57
    1708:	f0 e0       	ldi	r31, 0x00	; 0
    170a:	82 81       	ldd	r24, Z+2	; 0x02
    170c:	48 2f       	mov	r20, r24
    170e:	8b 81       	ldd	r24, Y+3	; 0x03
    1710:	28 2f       	mov	r18, r24
    1712:	30 e0       	ldi	r19, 0x00	; 0
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	02 2e       	mov	r0, r18
    171a:	02 c0       	rjmp	.+4      	; 0x1720 <MDIO_stderrTogglePinValue+0x7c>
    171c:	88 0f       	add	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	0a 94       	dec	r0
    1722:	e2 f7       	brpl	.-8      	; 0x171c <MDIO_stderrTogglePinValue+0x78>
    1724:	84 27       	eor	r24, r20
    1726:	12 96       	adiw	r26, 0x02	; 2
    1728:	8c 93       	st	X, r24
    172a:	12 97       	sbiw	r26, 0x02	; 2
    172c:	47 c0       	rjmp	.+142    	; 0x17bc <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTB: TOGGLE_BIT(GPIOB->PORT ,ARG_u8Pin) ; break;
    172e:	a6 e3       	ldi	r26, 0x36	; 54
    1730:	b0 e0       	ldi	r27, 0x00	; 0
    1732:	e6 e3       	ldi	r30, 0x36	; 54
    1734:	f0 e0       	ldi	r31, 0x00	; 0
    1736:	82 81       	ldd	r24, Z+2	; 0x02
    1738:	48 2f       	mov	r20, r24
    173a:	8b 81       	ldd	r24, Y+3	; 0x03
    173c:	28 2f       	mov	r18, r24
    173e:	30 e0       	ldi	r19, 0x00	; 0
    1740:	81 e0       	ldi	r24, 0x01	; 1
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	02 2e       	mov	r0, r18
    1746:	02 c0       	rjmp	.+4      	; 0x174c <MDIO_stderrTogglePinValue+0xa8>
    1748:	88 0f       	add	r24, r24
    174a:	99 1f       	adc	r25, r25
    174c:	0a 94       	dec	r0
    174e:	e2 f7       	brpl	.-8      	; 0x1748 <MDIO_stderrTogglePinValue+0xa4>
    1750:	84 27       	eor	r24, r20
    1752:	12 96       	adiw	r26, 0x02	; 2
    1754:	8c 93       	st	X, r24
    1756:	12 97       	sbiw	r26, 0x02	; 2
    1758:	31 c0       	rjmp	.+98     	; 0x17bc <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTC: TOGGLE_BIT(GPIOC->PORT ,ARG_u8Pin) ; break;
    175a:	a3 e3       	ldi	r26, 0x33	; 51
    175c:	b0 e0       	ldi	r27, 0x00	; 0
    175e:	e3 e3       	ldi	r30, 0x33	; 51
    1760:	f0 e0       	ldi	r31, 0x00	; 0
    1762:	82 81       	ldd	r24, Z+2	; 0x02
    1764:	48 2f       	mov	r20, r24
    1766:	8b 81       	ldd	r24, Y+3	; 0x03
    1768:	28 2f       	mov	r18, r24
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	81 e0       	ldi	r24, 0x01	; 1
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	02 2e       	mov	r0, r18
    1772:	02 c0       	rjmp	.+4      	; 0x1778 <MDIO_stderrTogglePinValue+0xd4>
    1774:	88 0f       	add	r24, r24
    1776:	99 1f       	adc	r25, r25
    1778:	0a 94       	dec	r0
    177a:	e2 f7       	brpl	.-8      	; 0x1774 <MDIO_stderrTogglePinValue+0xd0>
    177c:	84 27       	eor	r24, r20
    177e:	12 96       	adiw	r26, 0x02	; 2
    1780:	8c 93       	st	X, r24
    1782:	12 97       	sbiw	r26, 0x02	; 2
    1784:	1b c0       	rjmp	.+54     	; 0x17bc <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTD: TOGGLE_BIT(GPIOD->PORT ,ARG_u8Pin) ; break;
    1786:	a0 e3       	ldi	r26, 0x30	; 48
    1788:	b0 e0       	ldi	r27, 0x00	; 0
    178a:	e0 e3       	ldi	r30, 0x30	; 48
    178c:	f0 e0       	ldi	r31, 0x00	; 0
    178e:	82 81       	ldd	r24, Z+2	; 0x02
    1790:	48 2f       	mov	r20, r24
    1792:	8b 81       	ldd	r24, Y+3	; 0x03
    1794:	28 2f       	mov	r18, r24
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	02 2e       	mov	r0, r18
    179e:	02 c0       	rjmp	.+4      	; 0x17a4 <MDIO_stderrTogglePinValue+0x100>
    17a0:	88 0f       	add	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	0a 94       	dec	r0
    17a6:	e2 f7       	brpl	.-8      	; 0x17a0 <MDIO_stderrTogglePinValue+0xfc>
    17a8:	84 27       	eor	r24, r20
    17aa:	12 96       	adiw	r26, 0x02	; 2
    17ac:	8c 93       	st	X, r24
    17ae:	12 97       	sbiw	r26, 0x02	; 2
    17b0:	05 c0       	rjmp	.+10     	; 0x17bc <MDIO_stderrTogglePinValue+0x118>
			default: L_stderrError = E_NOK; break; /* report an error*/
    17b2:	81 e0       	ldi	r24, 0x01	; 1
    17b4:	89 83       	std	Y+1, r24	; 0x01
    17b6:	02 c0       	rjmp	.+4      	; 0x17bc <MDIO_stderrTogglePinValue+0x118>
		}	
	}
	else{
		/* Report an Error */
		L_stderrError=E_NULL_POINTER;
    17b8:	82 e0       	ldi	r24, 0x02	; 2
    17ba:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
    17bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    17be:	0f 90       	pop	r0
    17c0:	0f 90       	pop	r0
    17c2:	0f 90       	pop	r0
    17c4:	0f 90       	pop	r0
    17c6:	0f 90       	pop	r0
    17c8:	cf 91       	pop	r28
    17ca:	df 91       	pop	r29
    17cc:	08 95       	ret

000017ce <MGIE_voidEnable>:
#include "LBIT_math.h"

/* SWC Includes */
#include "MGIE_private.h"

void MGIE_voidEnable(void){
    17ce:	df 93       	push	r29
    17d0:	cf 93       	push	r28
    17d2:	cd b7       	in	r28, 0x3d	; 61
    17d4:	de b7       	in	r29, 0x3e	; 62
	
	SET_BIT(SREG,I_BIT);
    17d6:	af e5       	ldi	r26, 0x5F	; 95
    17d8:	b0 e0       	ldi	r27, 0x00	; 0
    17da:	ef e5       	ldi	r30, 0x5F	; 95
    17dc:	f0 e0       	ldi	r31, 0x00	; 0
    17de:	80 81       	ld	r24, Z
    17e0:	80 68       	ori	r24, 0x80	; 128
    17e2:	8c 93       	st	X, r24
	
}
    17e4:	cf 91       	pop	r28
    17e6:	df 91       	pop	r29
    17e8:	08 95       	ret

000017ea <MGIE_voidDisable>:
void MGIE_voidDisable(void){
    17ea:	df 93       	push	r29
    17ec:	cf 93       	push	r28
    17ee:	cd b7       	in	r28, 0x3d	; 61
    17f0:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(SREG,I_BIT);
    17f2:	af e5       	ldi	r26, 0x5F	; 95
    17f4:	b0 e0       	ldi	r27, 0x00	; 0
    17f6:	ef e5       	ldi	r30, 0x5F	; 95
    17f8:	f0 e0       	ldi	r31, 0x00	; 0
    17fa:	80 81       	ld	r24, Z
    17fc:	8f 77       	andi	r24, 0x7F	; 127
    17fe:	8c 93       	st	X, r24
}
    1800:	cf 91       	pop	r28
    1802:	df 91       	pop	r29
    1804:	08 95       	ret

00001806 <MTIM_stderrInit>:
void (*MTIM_pvoidfUserFunctionT0OVF)(void)=NULL_POINTER;
void (*MTIM_pvoidfUserFunctionT0OCM)(void)=NULL_POINTER;


STD_error_t MTIM_stderrInit(u8 ARG_u8TimerNo,u8 ARG_u8ClockSource,u8 ARG_u8u8Mode ,u8 ARG_u8HWPinMode)
{
    1806:	df 93       	push	r29
    1808:	cf 93       	push	r28
    180a:	cd b7       	in	r28, 0x3d	; 61
    180c:	de b7       	in	r29, 0x3e	; 62
    180e:	29 97       	sbiw	r28, 0x09	; 9
    1810:	0f b6       	in	r0, 0x3f	; 63
    1812:	f8 94       	cli
    1814:	de bf       	out	0x3e, r29	; 62
    1816:	0f be       	out	0x3f, r0	; 63
    1818:	cd bf       	out	0x3d, r28	; 61
    181a:	8a 83       	std	Y+2, r24	; 0x02
    181c:	6b 83       	std	Y+3, r22	; 0x03
    181e:	4c 83       	std	Y+4, r20	; 0x04
    1820:	2d 83       	std	Y+5, r18	; 0x05
	STD_error_t L_stderrState=E_OK;
    1822:	19 82       	std	Y+1, r1	; 0x01

	if(ARG_u8TimerNo<=2 &&ARG_u8ClockSource<=7 && ARG_u8u8Mode<=3 && ARG_u8HWPinMode<=3)
    1824:	8a 81       	ldd	r24, Y+2	; 0x02
    1826:	83 30       	cpi	r24, 0x03	; 3
    1828:	08 f0       	brcs	.+2      	; 0x182c <MTIM_stderrInit+0x26>
    182a:	98 c0       	rjmp	.+304    	; 0x195c <MTIM_stderrInit+0x156>
    182c:	8b 81       	ldd	r24, Y+3	; 0x03
    182e:	88 30       	cpi	r24, 0x08	; 8
    1830:	08 f0       	brcs	.+2      	; 0x1834 <MTIM_stderrInit+0x2e>
    1832:	94 c0       	rjmp	.+296    	; 0x195c <MTIM_stderrInit+0x156>
    1834:	8c 81       	ldd	r24, Y+4	; 0x04
    1836:	84 30       	cpi	r24, 0x04	; 4
    1838:	08 f0       	brcs	.+2      	; 0x183c <MTIM_stderrInit+0x36>
    183a:	90 c0       	rjmp	.+288    	; 0x195c <MTIM_stderrInit+0x156>
    183c:	8d 81       	ldd	r24, Y+5	; 0x05
    183e:	84 30       	cpi	r24, 0x04	; 4
    1840:	08 f0       	brcs	.+2      	; 0x1844 <MTIM_stderrInit+0x3e>
    1842:	8c c0       	rjmp	.+280    	; 0x195c <MTIM_stderrInit+0x156>
	{
		switch(ARG_u8TimerNo){
    1844:	8a 81       	ldd	r24, Y+2	; 0x02
    1846:	28 2f       	mov	r18, r24
    1848:	30 e0       	ldi	r19, 0x00	; 0
    184a:	39 87       	std	Y+9, r19	; 0x09
    184c:	28 87       	std	Y+8, r18	; 0x08
    184e:	88 85       	ldd	r24, Y+8	; 0x08
    1850:	99 85       	ldd	r25, Y+9	; 0x09
    1852:	81 30       	cpi	r24, 0x01	; 1
    1854:	91 05       	cpc	r25, r1
    1856:	09 f4       	brne	.+2      	; 0x185a <MTIM_stderrInit+0x54>
    1858:	83 c0       	rjmp	.+262    	; 0x1960 <MTIM_stderrInit+0x15a>
    185a:	28 85       	ldd	r18, Y+8	; 0x08
    185c:	39 85       	ldd	r19, Y+9	; 0x09
    185e:	22 30       	cpi	r18, 0x02	; 2
    1860:	31 05       	cpc	r19, r1
    1862:	09 f4       	brne	.+2      	; 0x1866 <MTIM_stderrInit+0x60>
    1864:	7d c0       	rjmp	.+250    	; 0x1960 <MTIM_stderrInit+0x15a>
    1866:	88 85       	ldd	r24, Y+8	; 0x08
    1868:	99 85       	ldd	r25, Y+9	; 0x09
    186a:	00 97       	sbiw	r24, 0x00	; 0
    186c:	09 f0       	breq	.+2      	; 0x1870 <MTIM_stderrInit+0x6a>
    186e:	73 c0       	rjmp	.+230    	; 0x1956 <MTIM_stderrInit+0x150>
			case MTIM_TIMER0:
				switch(ARG_u8u8Mode){
    1870:	8c 81       	ldd	r24, Y+4	; 0x04
    1872:	28 2f       	mov	r18, r24
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	3f 83       	std	Y+7, r19	; 0x07
    1878:	2e 83       	std	Y+6, r18	; 0x06
    187a:	8e 81       	ldd	r24, Y+6	; 0x06
    187c:	9f 81       	ldd	r25, Y+7	; 0x07
    187e:	81 30       	cpi	r24, 0x01	; 1
    1880:	91 05       	cpc	r25, r1
    1882:	21 f1       	breq	.+72     	; 0x18cc <MTIM_stderrInit+0xc6>
    1884:	2e 81       	ldd	r18, Y+6	; 0x06
    1886:	3f 81       	ldd	r19, Y+7	; 0x07
    1888:	22 30       	cpi	r18, 0x02	; 2
    188a:	31 05       	cpc	r19, r1
    188c:	2c f4       	brge	.+10     	; 0x1898 <MTIM_stderrInit+0x92>
    188e:	8e 81       	ldd	r24, Y+6	; 0x06
    1890:	9f 81       	ldd	r25, Y+7	; 0x07
    1892:	00 97       	sbiw	r24, 0x00	; 0
    1894:	61 f0       	breq	.+24     	; 0x18ae <MTIM_stderrInit+0xa8>
    1896:	47 c0       	rjmp	.+142    	; 0x1926 <MTIM_stderrInit+0x120>
    1898:	2e 81       	ldd	r18, Y+6	; 0x06
    189a:	3f 81       	ldd	r19, Y+7	; 0x07
    189c:	22 30       	cpi	r18, 0x02	; 2
    189e:	31 05       	cpc	r19, r1
    18a0:	21 f1       	breq	.+72     	; 0x18ea <MTIM_stderrInit+0xe4>
    18a2:	8e 81       	ldd	r24, Y+6	; 0x06
    18a4:	9f 81       	ldd	r25, Y+7	; 0x07
    18a6:	83 30       	cpi	r24, 0x03	; 3
    18a8:	91 05       	cpc	r25, r1
    18aa:	71 f1       	breq	.+92     	; 0x1908 <MTIM_stderrInit+0x102>
    18ac:	3c c0       	rjmp	.+120    	; 0x1926 <MTIM_stderrInit+0x120>
					case MTIM_MODE_NORMAL:
						CLEAR_BIT(TCCR0,WGM01);
    18ae:	a3 e5       	ldi	r26, 0x53	; 83
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	e3 e5       	ldi	r30, 0x53	; 83
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	80 81       	ld	r24, Z
    18b8:	87 7f       	andi	r24, 0xF7	; 247
    18ba:	8c 93       	st	X, r24
						CLEAR_BIT(TCCR0,WGM00);
    18bc:	a3 e5       	ldi	r26, 0x53	; 83
    18be:	b0 e0       	ldi	r27, 0x00	; 0
    18c0:	e3 e5       	ldi	r30, 0x53	; 83
    18c2:	f0 e0       	ldi	r31, 0x00	; 0
    18c4:	80 81       	ld	r24, Z
    18c6:	8f 7b       	andi	r24, 0xBF	; 191
    18c8:	8c 93       	st	X, r24
    18ca:	2f c0       	rjmp	.+94     	; 0x192a <MTIM_stderrInit+0x124>
					break;
					case MTIM_MODE_CTC:
						SET_BIT(TCCR0,WGM01);
    18cc:	a3 e5       	ldi	r26, 0x53	; 83
    18ce:	b0 e0       	ldi	r27, 0x00	; 0
    18d0:	e3 e5       	ldi	r30, 0x53	; 83
    18d2:	f0 e0       	ldi	r31, 0x00	; 0
    18d4:	80 81       	ld	r24, Z
    18d6:	88 60       	ori	r24, 0x08	; 8
    18d8:	8c 93       	st	X, r24
						CLEAR_BIT(TCCR0,WGM00);
    18da:	a3 e5       	ldi	r26, 0x53	; 83
    18dc:	b0 e0       	ldi	r27, 0x00	; 0
    18de:	e3 e5       	ldi	r30, 0x53	; 83
    18e0:	f0 e0       	ldi	r31, 0x00	; 0
    18e2:	80 81       	ld	r24, Z
    18e4:	8f 7b       	andi	r24, 0xBF	; 191
    18e6:	8c 93       	st	X, r24
    18e8:	20 c0       	rjmp	.+64     	; 0x192a <MTIM_stderrInit+0x124>
					break;
					case MTIM_MODE_FASTPWM:
						SET_BIT(TCCR0,WGM01);
    18ea:	a3 e5       	ldi	r26, 0x53	; 83
    18ec:	b0 e0       	ldi	r27, 0x00	; 0
    18ee:	e3 e5       	ldi	r30, 0x53	; 83
    18f0:	f0 e0       	ldi	r31, 0x00	; 0
    18f2:	80 81       	ld	r24, Z
    18f4:	88 60       	ori	r24, 0x08	; 8
    18f6:	8c 93       	st	X, r24
						SET_BIT(TCCR0,WGM00);
    18f8:	a3 e5       	ldi	r26, 0x53	; 83
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e3 e5       	ldi	r30, 0x53	; 83
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	80 64       	ori	r24, 0x40	; 64
    1904:	8c 93       	st	X, r24
    1906:	11 c0       	rjmp	.+34     	; 0x192a <MTIM_stderrInit+0x124>
					break;
					case MTIM_MODE_PHASECORRECTPWM:
						SET_BIT(TCCR0,WGM00);
    1908:	a3 e5       	ldi	r26, 0x53	; 83
    190a:	b0 e0       	ldi	r27, 0x00	; 0
    190c:	e3 e5       	ldi	r30, 0x53	; 83
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	80 81       	ld	r24, Z
    1912:	80 64       	ori	r24, 0x40	; 64
    1914:	8c 93       	st	X, r24
						CLEAR_BIT(TCCR0,WGM01);
    1916:	a3 e5       	ldi	r26, 0x53	; 83
    1918:	b0 e0       	ldi	r27, 0x00	; 0
    191a:	e3 e5       	ldi	r30, 0x53	; 83
    191c:	f0 e0       	ldi	r31, 0x00	; 0
    191e:	80 81       	ld	r24, Z
    1920:	87 7f       	andi	r24, 0xF7	; 247
    1922:	8c 93       	st	X, r24
    1924:	02 c0       	rjmp	.+4      	; 0x192a <MTIM_stderrInit+0x124>
					break;
					default: L_stderrState=E_NOK; break;
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	89 83       	std	Y+1, r24	; 0x01
				}
				TCCR0 = (TCCR0&0xCF) | (ARG_u8HWPinMode<<4);
    192a:	a3 e5       	ldi	r26, 0x53	; 83
    192c:	b0 e0       	ldi	r27, 0x00	; 0
    192e:	e3 e5       	ldi	r30, 0x53	; 83
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	80 81       	ld	r24, Z
    1934:	28 2f       	mov	r18, r24
    1936:	2f 7c       	andi	r18, 0xCF	; 207
    1938:	8d 81       	ldd	r24, Y+5	; 0x05
    193a:	88 2f       	mov	r24, r24
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	82 95       	swap	r24
    1940:	92 95       	swap	r25
    1942:	90 7f       	andi	r25, 0xF0	; 240
    1944:	98 27       	eor	r25, r24
    1946:	80 7f       	andi	r24, 0xF0	; 240
    1948:	98 27       	eor	r25, r24
    194a:	82 2b       	or	r24, r18
    194c:	8c 93       	st	X, r24
				MTIM_u8Timer0Clock = ARG_u8ClockSource; /* assign it to global var*/
    194e:	8b 81       	ldd	r24, Y+3	; 0x03
    1950:	80 93 6e 01 	sts	0x016E, r24
    1954:	05 c0       	rjmp	.+10     	; 0x1960 <MTIM_stderrInit+0x15a>

			case MTIM_TIMER1:
			break;
			case MTIM_TIMER2:
			break;
			default: L_stderrState=E_NOK; break;
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	89 83       	std	Y+1, r24	; 0x01
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <MTIM_stderrInit+0x15a>
		}
	}
	else{
		L_stderrState=E_NOK;
    195c:	81 e0       	ldi	r24, 0x01	; 1
    195e:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1960:	89 81       	ldd	r24, Y+1	; 0x01
}
    1962:	29 96       	adiw	r28, 0x09	; 9
    1964:	0f b6       	in	r0, 0x3f	; 63
    1966:	f8 94       	cli
    1968:	de bf       	out	0x3e, r29	; 62
    196a:	0f be       	out	0x3f, r0	; 63
    196c:	cd bf       	out	0x3d, r28	; 61
    196e:	cf 91       	pop	r28
    1970:	df 91       	pop	r29
    1972:	08 95       	ret

00001974 <MTIM_voidForceOutputCompare>:

void MTIM_voidForceOutputCompare(void)
{
    1974:	df 93       	push	r29
    1976:	cf 93       	push	r28
    1978:	cd b7       	in	r28, 0x3d	; 61
    197a:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TCCR0,FOC0);
    197c:	a3 e5       	ldi	r26, 0x53	; 83
    197e:	b0 e0       	ldi	r27, 0x00	; 0
    1980:	e3 e5       	ldi	r30, 0x53	; 83
    1982:	f0 e0       	ldi	r31, 0x00	; 0
    1984:	80 81       	ld	r24, Z
    1986:	80 68       	ori	r24, 0x80	; 128
    1988:	8c 93       	st	X, r24
}
    198a:	cf 91       	pop	r28
    198c:	df 91       	pop	r29
    198e:	08 95       	ret

00001990 <MTIM_stderrEnableInterrupt>:

STD_error_t MTIM_stderrEnableInterrupt(u8 ARG_u8InterruptSource)
{
    1990:	df 93       	push	r29
    1992:	cf 93       	push	r28
    1994:	00 d0       	rcall	.+0      	; 0x1996 <MTIM_stderrEnableInterrupt+0x6>
    1996:	cd b7       	in	r28, 0x3d	; 61
    1998:	de b7       	in	r29, 0x3e	; 62
    199a:	8a 83       	std	Y+2, r24	; 0x02
	STD_error_t L_stderrState=E_OK;
    199c:	19 82       	std	Y+1, r1	; 0x01

	if(ARG_u8InterruptSource<=7){
    199e:	8a 81       	ldd	r24, Y+2	; 0x02
    19a0:	88 30       	cpi	r24, 0x08	; 8
    19a2:	a0 f4       	brcc	.+40     	; 0x19cc <MTIM_stderrEnableInterrupt+0x3c>
		SET_BIT(TIMSK, ARG_u8InterruptSource);
    19a4:	a9 e5       	ldi	r26, 0x59	; 89
    19a6:	b0 e0       	ldi	r27, 0x00	; 0
    19a8:	e9 e5       	ldi	r30, 0x59	; 89
    19aa:	f0 e0       	ldi	r31, 0x00	; 0
    19ac:	80 81       	ld	r24, Z
    19ae:	48 2f       	mov	r20, r24
    19b0:	8a 81       	ldd	r24, Y+2	; 0x02
    19b2:	28 2f       	mov	r18, r24
    19b4:	30 e0       	ldi	r19, 0x00	; 0
    19b6:	81 e0       	ldi	r24, 0x01	; 1
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	02 2e       	mov	r0, r18
    19bc:	02 c0       	rjmp	.+4      	; 0x19c2 <MTIM_stderrEnableInterrupt+0x32>
    19be:	88 0f       	add	r24, r24
    19c0:	99 1f       	adc	r25, r25
    19c2:	0a 94       	dec	r0
    19c4:	e2 f7       	brpl	.-8      	; 0x19be <MTIM_stderrEnableInterrupt+0x2e>
    19c6:	84 2b       	or	r24, r20
    19c8:	8c 93       	st	X, r24
    19ca:	02 c0       	rjmp	.+4      	; 0x19d0 <MTIM_stderrEnableInterrupt+0x40>
	}
	else{
		L_stderrState=E_NOK;
    19cc:	81 e0       	ldi	r24, 0x01	; 1
    19ce:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    19d0:	89 81       	ldd	r24, Y+1	; 0x01
}
    19d2:	0f 90       	pop	r0
    19d4:	0f 90       	pop	r0
    19d6:	cf 91       	pop	r28
    19d8:	df 91       	pop	r29
    19da:	08 95       	ret

000019dc <MTIM_stderrDisableInterrupt>:
STD_error_t MTIM_stderrDisableInterrupt(u8 ARG_u8InterruptSource)
{
    19dc:	df 93       	push	r29
    19de:	cf 93       	push	r28
    19e0:	00 d0       	rcall	.+0      	; 0x19e2 <MTIM_stderrDisableInterrupt+0x6>
    19e2:	cd b7       	in	r28, 0x3d	; 61
    19e4:	de b7       	in	r29, 0x3e	; 62
    19e6:	8a 83       	std	Y+2, r24	; 0x02
	STD_error_t L_stderrState=E_OK;
    19e8:	19 82       	std	Y+1, r1	; 0x01

	if(ARG_u8InterruptSource<=7){
    19ea:	8a 81       	ldd	r24, Y+2	; 0x02
    19ec:	88 30       	cpi	r24, 0x08	; 8
    19ee:	a8 f4       	brcc	.+42     	; 0x1a1a <MTIM_stderrDisableInterrupt+0x3e>
		CLEAR_BIT(TIMSK, ARG_u8InterruptSource);
    19f0:	a9 e5       	ldi	r26, 0x59	; 89
    19f2:	b0 e0       	ldi	r27, 0x00	; 0
    19f4:	e9 e5       	ldi	r30, 0x59	; 89
    19f6:	f0 e0       	ldi	r31, 0x00	; 0
    19f8:	80 81       	ld	r24, Z
    19fa:	48 2f       	mov	r20, r24
    19fc:	8a 81       	ldd	r24, Y+2	; 0x02
    19fe:	28 2f       	mov	r18, r24
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	81 e0       	ldi	r24, 0x01	; 1
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	02 2e       	mov	r0, r18
    1a08:	02 c0       	rjmp	.+4      	; 0x1a0e <MTIM_stderrDisableInterrupt+0x32>
    1a0a:	88 0f       	add	r24, r24
    1a0c:	99 1f       	adc	r25, r25
    1a0e:	0a 94       	dec	r0
    1a10:	e2 f7       	brpl	.-8      	; 0x1a0a <MTIM_stderrDisableInterrupt+0x2e>
    1a12:	80 95       	com	r24
    1a14:	84 23       	and	r24, r20
    1a16:	8c 93       	st	X, r24
    1a18:	02 c0       	rjmp	.+4      	; 0x1a1e <MTIM_stderrDisableInterrupt+0x42>
	}
	else{
		L_stderrState=E_NOK;
    1a1a:	81 e0       	ldi	r24, 0x01	; 1
    1a1c:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1a1e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a20:	0f 90       	pop	r0
    1a22:	0f 90       	pop	r0
    1a24:	cf 91       	pop	r28
    1a26:	df 91       	pop	r29
    1a28:	08 95       	ret

00001a2a <MTIM_stderrSetCallBack>:
STD_error_t MTIM_stderrSetCallBack(void(*ARG_pvoidfUserFunction)(void), u8 ARG_u8InterruptSource)
{
    1a2a:	df 93       	push	r29
    1a2c:	cf 93       	push	r28
    1a2e:	00 d0       	rcall	.+0      	; 0x1a30 <MTIM_stderrSetCallBack+0x6>
    1a30:	00 d0       	rcall	.+0      	; 0x1a32 <MTIM_stderrSetCallBack+0x8>
    1a32:	00 d0       	rcall	.+0      	; 0x1a34 <MTIM_stderrSetCallBack+0xa>
    1a34:	cd b7       	in	r28, 0x3d	; 61
    1a36:	de b7       	in	r29, 0x3e	; 62
    1a38:	9b 83       	std	Y+3, r25	; 0x03
    1a3a:	8a 83       	std	Y+2, r24	; 0x02
    1a3c:	6c 83       	std	Y+4, r22	; 0x04
	STD_error_t L_stderrState=E_OK;
    1a3e:	19 82       	std	Y+1, r1	; 0x01

	if(ARG_pvoidfUserFunction!=NULL_POINTER ){
    1a40:	8a 81       	ldd	r24, Y+2	; 0x02
    1a42:	9b 81       	ldd	r25, Y+3	; 0x03
    1a44:	00 97       	sbiw	r24, 0x00	; 0
    1a46:	01 f1       	breq	.+64     	; 0x1a88 <MTIM_stderrSetCallBack+0x5e>

		switch(ARG_u8InterruptSource){
    1a48:	8c 81       	ldd	r24, Y+4	; 0x04
    1a4a:	28 2f       	mov	r18, r24
    1a4c:	30 e0       	ldi	r19, 0x00	; 0
    1a4e:	3e 83       	std	Y+6, r19	; 0x06
    1a50:	2d 83       	std	Y+5, r18	; 0x05
    1a52:	8d 81       	ldd	r24, Y+5	; 0x05
    1a54:	9e 81       	ldd	r25, Y+6	; 0x06
    1a56:	00 97       	sbiw	r24, 0x00	; 0
    1a58:	31 f0       	breq	.+12     	; 0x1a66 <MTIM_stderrSetCallBack+0x3c>
    1a5a:	2d 81       	ldd	r18, Y+5	; 0x05
    1a5c:	3e 81       	ldd	r19, Y+6	; 0x06
    1a5e:	21 30       	cpi	r18, 0x01	; 1
    1a60:	31 05       	cpc	r19, r1
    1a62:	41 f0       	breq	.+16     	; 0x1a74 <MTIM_stderrSetCallBack+0x4a>
    1a64:	0e c0       	rjmp	.+28     	; 0x1a82 <MTIM_stderrSetCallBack+0x58>
			case MTIM_INTERRUPT_T0_OVF:	MTIM_pvoidfUserFunctionT0OVF=ARG_pvoidfUserFunction; break;
    1a66:	8a 81       	ldd	r24, Y+2	; 0x02
    1a68:	9b 81       	ldd	r25, Y+3	; 0x03
    1a6a:	90 93 69 01 	sts	0x0169, r25
    1a6e:	80 93 68 01 	sts	0x0168, r24
    1a72:	0c c0       	rjmp	.+24     	; 0x1a8c <MTIM_stderrSetCallBack+0x62>
			case MTIM_INTERRUPT_T0_OCM:	MTIM_pvoidfUserFunctionT0OCM=ARG_pvoidfUserFunction; break;
    1a74:	8a 81       	ldd	r24, Y+2	; 0x02
    1a76:	9b 81       	ldd	r25, Y+3	; 0x03
    1a78:	90 93 6b 01 	sts	0x016B, r25
    1a7c:	80 93 6a 01 	sts	0x016A, r24
    1a80:	05 c0       	rjmp	.+10     	; 0x1a8c <MTIM_stderrSetCallBack+0x62>
			default: L_stderrState=E_NOK; break;
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	89 83       	std	Y+1, r24	; 0x01
    1a86:	02 c0       	rjmp	.+4      	; 0x1a8c <MTIM_stderrSetCallBack+0x62>
		}
	}
	else{
		L_stderrState=E_NULL_POINTER;
    1a88:	82 e0       	ldi	r24, 0x02	; 2
    1a8a:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1a8c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a8e:	26 96       	adiw	r28, 0x06	; 6
    1a90:	0f b6       	in	r0, 0x3f	; 63
    1a92:	f8 94       	cli
    1a94:	de bf       	out	0x3e, r29	; 62
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	cd bf       	out	0x3d, r28	; 61
    1a9a:	cf 91       	pop	r28
    1a9c:	df 91       	pop	r29
    1a9e:	08 95       	ret

00001aa0 <MTIM_stderrStartTimer>:
STD_error_t MTIM_stderrStartTimer(u8 ARG_u8TimerNo)
{
    1aa0:	df 93       	push	r29
    1aa2:	cf 93       	push	r28
    1aa4:	00 d0       	rcall	.+0      	; 0x1aa6 <MTIM_stderrStartTimer+0x6>
    1aa6:	00 d0       	rcall	.+0      	; 0x1aa8 <MTIM_stderrStartTimer+0x8>
    1aa8:	cd b7       	in	r28, 0x3d	; 61
    1aaa:	de b7       	in	r29, 0x3e	; 62
    1aac:	8a 83       	std	Y+2, r24	; 0x02
	STD_error_t L_stderrState=E_OK;
    1aae:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8TimerNo){
    1ab0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab2:	28 2f       	mov	r18, r24
    1ab4:	30 e0       	ldi	r19, 0x00	; 0
    1ab6:	3c 83       	std	Y+4, r19	; 0x04
    1ab8:	2b 83       	std	Y+3, r18	; 0x03
    1aba:	8b 81       	ldd	r24, Y+3	; 0x03
    1abc:	9c 81       	ldd	r25, Y+4	; 0x04
    1abe:	81 30       	cpi	r24, 0x01	; 1
    1ac0:	91 05       	cpc	r25, r1
    1ac2:	b9 f0       	breq	.+46     	; 0x1af2 <MTIM_stderrStartTimer+0x52>
    1ac4:	2b 81       	ldd	r18, Y+3	; 0x03
    1ac6:	3c 81       	ldd	r19, Y+4	; 0x04
    1ac8:	22 30       	cpi	r18, 0x02	; 2
    1aca:	31 05       	cpc	r19, r1
    1acc:	91 f0       	breq	.+36     	; 0x1af2 <MTIM_stderrStartTimer+0x52>
    1ace:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad2:	00 97       	sbiw	r24, 0x00	; 0
    1ad4:	61 f4       	brne	.+24     	; 0x1aee <MTIM_stderrStartTimer+0x4e>
		case MTIM_TIMER0:	TCCR0 = (TCCR0 & 0xF8) | MTIM_u8Timer0Clock; break;
    1ad6:	a3 e5       	ldi	r26, 0x53	; 83
    1ad8:	b0 e0       	ldi	r27, 0x00	; 0
    1ada:	e3 e5       	ldi	r30, 0x53	; 83
    1adc:	f0 e0       	ldi	r31, 0x00	; 0
    1ade:	80 81       	ld	r24, Z
    1ae0:	98 2f       	mov	r25, r24
    1ae2:	98 7f       	andi	r25, 0xF8	; 248
    1ae4:	80 91 6e 01 	lds	r24, 0x016E
    1ae8:	89 2b       	or	r24, r25
    1aea:	8c 93       	st	X, r24
    1aec:	02 c0       	rjmp	.+4      	; 0x1af2 <MTIM_stderrStartTimer+0x52>
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: L_stderrState=E_NOK; break;
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1af2:	89 81       	ldd	r24, Y+1	; 0x01
}
    1af4:	0f 90       	pop	r0
    1af6:	0f 90       	pop	r0
    1af8:	0f 90       	pop	r0
    1afa:	0f 90       	pop	r0
    1afc:	cf 91       	pop	r28
    1afe:	df 91       	pop	r29
    1b00:	08 95       	ret

00001b02 <MTIM_stderrStopTimer>:
STD_error_t MTIM_stderrStopTimer(u8 ARG_u8TimerNo)
{
    1b02:	df 93       	push	r29
    1b04:	cf 93       	push	r28
    1b06:	00 d0       	rcall	.+0      	; 0x1b08 <MTIM_stderrStopTimer+0x6>
    1b08:	00 d0       	rcall	.+0      	; 0x1b0a <MTIM_stderrStopTimer+0x8>
    1b0a:	cd b7       	in	r28, 0x3d	; 61
    1b0c:	de b7       	in	r29, 0x3e	; 62
    1b0e:	8a 83       	std	Y+2, r24	; 0x02
	STD_error_t L_stderrState=E_OK;
    1b10:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8TimerNo){
    1b12:	8a 81       	ldd	r24, Y+2	; 0x02
    1b14:	28 2f       	mov	r18, r24
    1b16:	30 e0       	ldi	r19, 0x00	; 0
    1b18:	3c 83       	std	Y+4, r19	; 0x04
    1b1a:	2b 83       	std	Y+3, r18	; 0x03
    1b1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b1e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b20:	81 30       	cpi	r24, 0x01	; 1
    1b22:	91 05       	cpc	r25, r1
    1b24:	99 f0       	breq	.+38     	; 0x1b4c <MTIM_stderrStopTimer+0x4a>
    1b26:	2b 81       	ldd	r18, Y+3	; 0x03
    1b28:	3c 81       	ldd	r19, Y+4	; 0x04
    1b2a:	22 30       	cpi	r18, 0x02	; 2
    1b2c:	31 05       	cpc	r19, r1
    1b2e:	71 f0       	breq	.+28     	; 0x1b4c <MTIM_stderrStopTimer+0x4a>
    1b30:	8b 81       	ldd	r24, Y+3	; 0x03
    1b32:	9c 81       	ldd	r25, Y+4	; 0x04
    1b34:	00 97       	sbiw	r24, 0x00	; 0
    1b36:	41 f4       	brne	.+16     	; 0x1b48 <MTIM_stderrStopTimer+0x46>
		case MTIM_TIMER0:	TCCR0 = (TCCR0 & 0xF8) | MTIM_CS_NO_CLOCK; break;
    1b38:	a3 e5       	ldi	r26, 0x53	; 83
    1b3a:	b0 e0       	ldi	r27, 0x00	; 0
    1b3c:	e3 e5       	ldi	r30, 0x53	; 83
    1b3e:	f0 e0       	ldi	r31, 0x00	; 0
    1b40:	80 81       	ld	r24, Z
    1b42:	88 7f       	andi	r24, 0xF8	; 248
    1b44:	8c 93       	st	X, r24
    1b46:	02 c0       	rjmp	.+4      	; 0x1b4c <MTIM_stderrStopTimer+0x4a>
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: L_stderrState=E_NOK; break;
    1b48:	81 e0       	ldi	r24, 0x01	; 1
    1b4a:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1b4c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b4e:	0f 90       	pop	r0
    1b50:	0f 90       	pop	r0
    1b52:	0f 90       	pop	r0
    1b54:	0f 90       	pop	r0
    1b56:	cf 91       	pop	r28
    1b58:	df 91       	pop	r29
    1b5a:	08 95       	ret

00001b5c <MTIM_stderrSetOCR>:
STD_error_t MTIM_stderrSetOCR(u8 ARG_u8TimerNo,u16 ARG_u16OCRValue)
{
    1b5c:	df 93       	push	r29
    1b5e:	cf 93       	push	r28
    1b60:	00 d0       	rcall	.+0      	; 0x1b62 <MTIM_stderrSetOCR+0x6>
    1b62:	00 d0       	rcall	.+0      	; 0x1b64 <MTIM_stderrSetOCR+0x8>
    1b64:	00 d0       	rcall	.+0      	; 0x1b66 <MTIM_stderrSetOCR+0xa>
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	8a 83       	std	Y+2, r24	; 0x02
    1b6c:	7c 83       	std	Y+4, r23	; 0x04
    1b6e:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrState=E_OK;
    1b70:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8TimerNo){
    1b72:	8a 81       	ldd	r24, Y+2	; 0x02
    1b74:	28 2f       	mov	r18, r24
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	3e 83       	std	Y+6, r19	; 0x06
    1b7a:	2d 83       	std	Y+5, r18	; 0x05
    1b7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b80:	81 30       	cpi	r24, 0x01	; 1
    1b82:	91 05       	cpc	r25, r1
    1b84:	81 f0       	breq	.+32     	; 0x1ba6 <MTIM_stderrSetOCR+0x4a>
    1b86:	2d 81       	ldd	r18, Y+5	; 0x05
    1b88:	3e 81       	ldd	r19, Y+6	; 0x06
    1b8a:	22 30       	cpi	r18, 0x02	; 2
    1b8c:	31 05       	cpc	r19, r1
    1b8e:	59 f0       	breq	.+22     	; 0x1ba6 <MTIM_stderrSetOCR+0x4a>
    1b90:	8d 81       	ldd	r24, Y+5	; 0x05
    1b92:	9e 81       	ldd	r25, Y+6	; 0x06
    1b94:	00 97       	sbiw	r24, 0x00	; 0
    1b96:	29 f4       	brne	.+10     	; 0x1ba2 <MTIM_stderrSetOCR+0x46>
		case MTIM_TIMER0:	OCR0 = ARG_u16OCRValue; break;
    1b98:	ec e5       	ldi	r30, 0x5C	; 92
    1b9a:	f0 e0       	ldi	r31, 0x00	; 0
    1b9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b9e:	80 83       	st	Z, r24
    1ba0:	02 c0       	rjmp	.+4      	; 0x1ba6 <MTIM_stderrSetOCR+0x4a>
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: L_stderrState=E_NOK; break;
    1ba2:	81 e0       	ldi	r24, 0x01	; 1
    1ba4:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrState;
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ba8:	26 96       	adiw	r28, 0x06	; 6
    1baa:	0f b6       	in	r0, 0x3f	; 63
    1bac:	f8 94       	cli
    1bae:	de bf       	out	0x3e, r29	; 62
    1bb0:	0f be       	out	0x3f, r0	; 63
    1bb2:	cd bf       	out	0x3d, r28	; 61
    1bb4:	cf 91       	pop	r28
    1bb6:	df 91       	pop	r29
    1bb8:	08 95       	ret

00001bba <MTIM_stderrTimerDelay>:
STD_error_t MTIM_stderrTimerDelay(u8 ARG_u8TimerNo, u32 ARG_u32Delay){
    1bba:	ef 92       	push	r14
    1bbc:	ff 92       	push	r15
    1bbe:	0f 93       	push	r16
    1bc0:	1f 93       	push	r17
    1bc2:	df 93       	push	r29
    1bc4:	cf 93       	push	r28
    1bc6:	cd b7       	in	r28, 0x3d	; 61
    1bc8:	de b7       	in	r29, 0x3e	; 62
    1bca:	64 97       	sbiw	r28, 0x14	; 20
    1bcc:	0f b6       	in	r0, 0x3f	; 63
    1bce:	f8 94       	cli
    1bd0:	de bf       	out	0x3e, r29	; 62
    1bd2:	0f be       	out	0x3f, r0	; 63
    1bd4:	cd bf       	out	0x3d, r28	; 61
    1bd6:	8c 87       	std	Y+12, r24	; 0x0c
    1bd8:	4d 87       	std	Y+13, r20	; 0x0d
    1bda:	5e 87       	std	Y+14, r21	; 0x0e
    1bdc:	6f 87       	std	Y+15, r22	; 0x0f
    1bde:	78 8b       	std	Y+16, r23	; 0x10
	STD_error_t L_stderrState=E_OK;
    1be0:	1b 86       	std	Y+11, r1	; 0x0b
	f32 L_f32TickTime,L_f32OVFTime;
	u16 L_u16Prscaler;
	switch(ARG_u8TimerNo){
    1be2:	8c 85       	ldd	r24, Y+12	; 0x0c
    1be4:	28 2f       	mov	r18, r24
    1be6:	30 e0       	ldi	r19, 0x00	; 0
    1be8:	3c 8b       	std	Y+20, r19	; 0x14
    1bea:	2b 8b       	std	Y+19, r18	; 0x13
    1bec:	8b 89       	ldd	r24, Y+19	; 0x13
    1bee:	9c 89       	ldd	r25, Y+20	; 0x14
    1bf0:	81 30       	cpi	r24, 0x01	; 1
    1bf2:	91 05       	cpc	r25, r1
    1bf4:	09 f4       	brne	.+2      	; 0x1bf8 <MTIM_stderrTimerDelay+0x3e>
    1bf6:	c6 c0       	rjmp	.+396    	; 0x1d84 <MTIM_stderrTimerDelay+0x1ca>
    1bf8:	2b 89       	ldd	r18, Y+19	; 0x13
    1bfa:	3c 89       	ldd	r19, Y+20	; 0x14
    1bfc:	22 30       	cpi	r18, 0x02	; 2
    1bfe:	31 05       	cpc	r19, r1
    1c00:	09 f4       	brne	.+2      	; 0x1c04 <MTIM_stderrTimerDelay+0x4a>
    1c02:	c0 c0       	rjmp	.+384    	; 0x1d84 <MTIM_stderrTimerDelay+0x1ca>
    1c04:	8b 89       	ldd	r24, Y+19	; 0x13
    1c06:	9c 89       	ldd	r25, Y+20	; 0x14
    1c08:	00 97       	sbiw	r24, 0x00	; 0
    1c0a:	09 f0       	breq	.+2      	; 0x1c0e <MTIM_stderrTimerDelay+0x54>
    1c0c:	b9 c0       	rjmp	.+370    	; 0x1d80 <MTIM_stderrTimerDelay+0x1c6>
		case MTIM_TIMER0:
			switch(MTIM_u8Timer0Clock){
    1c0e:	80 91 6e 01 	lds	r24, 0x016E
    1c12:	28 2f       	mov	r18, r24
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	3a 8b       	std	Y+18, r19	; 0x12
    1c18:	29 8b       	std	Y+17, r18	; 0x11
    1c1a:	89 89       	ldd	r24, Y+17	; 0x11
    1c1c:	9a 89       	ldd	r25, Y+18	; 0x12
    1c1e:	83 30       	cpi	r24, 0x03	; 3
    1c20:	91 05       	cpc	r25, r1
    1c22:	29 f1       	breq	.+74     	; 0x1c6e <MTIM_stderrTimerDelay+0xb4>
    1c24:	29 89       	ldd	r18, Y+17	; 0x11
    1c26:	3a 89       	ldd	r19, Y+18	; 0x12
    1c28:	24 30       	cpi	r18, 0x04	; 4
    1c2a:	31 05       	cpc	r19, r1
    1c2c:	5c f4       	brge	.+22     	; 0x1c44 <MTIM_stderrTimerDelay+0x8a>
    1c2e:	89 89       	ldd	r24, Y+17	; 0x11
    1c30:	9a 89       	ldd	r25, Y+18	; 0x12
    1c32:	81 30       	cpi	r24, 0x01	; 1
    1c34:	91 05       	cpc	r25, r1
    1c36:	89 f0       	breq	.+34     	; 0x1c5a <MTIM_stderrTimerDelay+0xa0>
    1c38:	29 89       	ldd	r18, Y+17	; 0x11
    1c3a:	3a 89       	ldd	r19, Y+18	; 0x12
    1c3c:	22 30       	cpi	r18, 0x02	; 2
    1c3e:	31 05       	cpc	r19, r1
    1c40:	89 f0       	breq	.+34     	; 0x1c64 <MTIM_stderrTimerDelay+0xaa>
    1c42:	24 c0       	rjmp	.+72     	; 0x1c8c <MTIM_stderrTimerDelay+0xd2>
    1c44:	89 89       	ldd	r24, Y+17	; 0x11
    1c46:	9a 89       	ldd	r25, Y+18	; 0x12
    1c48:	84 30       	cpi	r24, 0x04	; 4
    1c4a:	91 05       	cpc	r25, r1
    1c4c:	a9 f0       	breq	.+42     	; 0x1c78 <MTIM_stderrTimerDelay+0xbe>
    1c4e:	29 89       	ldd	r18, Y+17	; 0x11
    1c50:	3a 89       	ldd	r19, Y+18	; 0x12
    1c52:	25 30       	cpi	r18, 0x05	; 5
    1c54:	31 05       	cpc	r19, r1
    1c56:	a9 f0       	breq	.+42     	; 0x1c82 <MTIM_stderrTimerDelay+0xc8>
    1c58:	19 c0       	rjmp	.+50     	; 0x1c8c <MTIM_stderrTimerDelay+0xd2>
				case MTIM_CS_PRESCALER_1 	:L_u16Prscaler = 1; break;
    1c5a:	81 e0       	ldi	r24, 0x01	; 1
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	9a 83       	std	Y+2, r25	; 0x02
    1c60:	89 83       	std	Y+1, r24	; 0x01
    1c62:	16 c0       	rjmp	.+44     	; 0x1c90 <MTIM_stderrTimerDelay+0xd6>
				case MTIM_CS_PRESCALER_8 	:L_u16Prscaler = 8; break;
    1c64:	88 e0       	ldi	r24, 0x08	; 8
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	9a 83       	std	Y+2, r25	; 0x02
    1c6a:	89 83       	std	Y+1, r24	; 0x01
    1c6c:	11 c0       	rjmp	.+34     	; 0x1c90 <MTIM_stderrTimerDelay+0xd6>
				case MTIM_CS_PRESCALER_64 	:L_u16Prscaler = 64; break;
    1c6e:	80 e4       	ldi	r24, 0x40	; 64
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	9a 83       	std	Y+2, r25	; 0x02
    1c74:	89 83       	std	Y+1, r24	; 0x01
    1c76:	0c c0       	rjmp	.+24     	; 0x1c90 <MTIM_stderrTimerDelay+0xd6>
				case MTIM_CS_PRESCALER_256 	:L_u16Prscaler = 256; break;
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	91 e0       	ldi	r25, 0x01	; 1
    1c7c:	9a 83       	std	Y+2, r25	; 0x02
    1c7e:	89 83       	std	Y+1, r24	; 0x01
    1c80:	07 c0       	rjmp	.+14     	; 0x1c90 <MTIM_stderrTimerDelay+0xd6>
				case MTIM_CS_PRESCALER_1024 :L_u16Prscaler = 1024; break;
    1c82:	80 e0       	ldi	r24, 0x00	; 0
    1c84:	94 e0       	ldi	r25, 0x04	; 4
    1c86:	9a 83       	std	Y+2, r25	; 0x02
    1c88:	89 83       	std	Y+1, r24	; 0x01
    1c8a:	02 c0       	rjmp	.+4      	; 0x1c90 <MTIM_stderrTimerDelay+0xd6>
				default: L_stderrState=E_NOK; break;
    1c8c:	81 e0       	ldi	r24, 0x01	; 1
    1c8e:	8b 87       	std	Y+11, r24	; 0x0b
			}
			L_f32TickTime = (f32)L_u16Prscaler/ F_CPU;
    1c90:	89 81       	ldd	r24, Y+1	; 0x01
    1c92:	9a 81       	ldd	r25, Y+2	; 0x02
    1c94:	cc 01       	movw	r24, r24
    1c96:	a0 e0       	ldi	r26, 0x00	; 0
    1c98:	b0 e0       	ldi	r27, 0x00	; 0
    1c9a:	bc 01       	movw	r22, r24
    1c9c:	cd 01       	movw	r24, r26
    1c9e:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	bc 01       	movw	r22, r24
    1ca8:	cd 01       	movw	r24, r26
    1caa:	20 e0       	ldi	r18, 0x00	; 0
    1cac:	34 e2       	ldi	r19, 0x24	; 36
    1cae:	44 ef       	ldi	r20, 0xF4	; 244
    1cb0:	5a e4       	ldi	r21, 0x4A	; 74
    1cb2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	cb 01       	movw	r24, r22
    1cba:	8f 83       	std	Y+7, r24	; 0x07
    1cbc:	98 87       	std	Y+8, r25	; 0x08
    1cbe:	a9 87       	std	Y+9, r26	; 0x09
    1cc0:	ba 87       	std	Y+10, r27	; 0x0a
			L_f32OVFTime = L_f32TickTime * 256;
    1cc2:	6f 81       	ldd	r22, Y+7	; 0x07
    1cc4:	78 85       	ldd	r23, Y+8	; 0x08
    1cc6:	89 85       	ldd	r24, Y+9	; 0x09
    1cc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cca:	20 e0       	ldi	r18, 0x00	; 0
    1ccc:	30 e0       	ldi	r19, 0x00	; 0
    1cce:	40 e8       	ldi	r20, 0x80	; 128
    1cd0:	53 e4       	ldi	r21, 0x43	; 67
    1cd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cd6:	dc 01       	movw	r26, r24
    1cd8:	cb 01       	movw	r24, r22
    1cda:	8b 83       	std	Y+3, r24	; 0x03
    1cdc:	9c 83       	std	Y+4, r25	; 0x04
    1cde:	ad 83       	std	Y+5, r26	; 0x05
    1ce0:	be 83       	std	Y+6, r27	; 0x06
			MTIM_u16Timer0OVFCount = (ARG_u32Delay/1000) / L_f32OVFTime;
    1ce2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ce4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ce6:	af 85       	ldd	r26, Y+15	; 0x0f
    1ce8:	b8 89       	ldd	r27, Y+16	; 0x10
    1cea:	28 ee       	ldi	r18, 0xE8	; 232
    1cec:	33 e0       	ldi	r19, 0x03	; 3
    1cee:	40 e0       	ldi	r20, 0x00	; 0
    1cf0:	50 e0       	ldi	r21, 0x00	; 0
    1cf2:	bc 01       	movw	r22, r24
    1cf4:	cd 01       	movw	r24, r26
    1cf6:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__udivmodsi4>
    1cfa:	da 01       	movw	r26, r20
    1cfc:	c9 01       	movw	r24, r18
    1cfe:	bc 01       	movw	r22, r24
    1d00:	cd 01       	movw	r24, r26
    1d02:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	bc 01       	movw	r22, r24
    1d0c:	cd 01       	movw	r24, r26
    1d0e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d10:	3c 81       	ldd	r19, Y+4	; 0x04
    1d12:	4d 81       	ldd	r20, Y+5	; 0x05
    1d14:	5e 81       	ldd	r21, Y+6	; 0x06
    1d16:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d1a:	dc 01       	movw	r26, r24
    1d1c:	cb 01       	movw	r24, r22
    1d1e:	bc 01       	movw	r22, r24
    1d20:	cd 01       	movw	r24, r26
    1d22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d26:	dc 01       	movw	r26, r24
    1d28:	cb 01       	movw	r24, r22
    1d2a:	90 93 70 01 	sts	0x0170, r25
    1d2e:	80 93 6f 01 	sts	0x016F, r24
			MTIM_u8Timer0Preload = 256 - ((ARG_u32Delay / 1000) % (u32)L_f32OVFTime);
    1d32:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d36:	af 85       	ldd	r26, Y+15	; 0x0f
    1d38:	b8 89       	ldd	r27, Y+16	; 0x10
    1d3a:	28 ee       	ldi	r18, 0xE8	; 232
    1d3c:	33 e0       	ldi	r19, 0x03	; 3
    1d3e:	40 e0       	ldi	r20, 0x00	; 0
    1d40:	50 e0       	ldi	r21, 0x00	; 0
    1d42:	bc 01       	movw	r22, r24
    1d44:	cd 01       	movw	r24, r26
    1d46:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__udivmodsi4>
    1d4a:	da 01       	movw	r26, r20
    1d4c:	c9 01       	movw	r24, r18
    1d4e:	7c 01       	movw	r14, r24
    1d50:	8d 01       	movw	r16, r26
    1d52:	6b 81       	ldd	r22, Y+3	; 0x03
    1d54:	7c 81       	ldd	r23, Y+4	; 0x04
    1d56:	8d 81       	ldd	r24, Y+5	; 0x05
    1d58:	9e 81       	ldd	r25, Y+6	; 0x06
    1d5a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d5e:	9b 01       	movw	r18, r22
    1d60:	ac 01       	movw	r20, r24
    1d62:	c8 01       	movw	r24, r16
    1d64:	b7 01       	movw	r22, r14
    1d66:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__udivmodsi4>
    1d6a:	dc 01       	movw	r26, r24
    1d6c:	cb 01       	movw	r24, r22
    1d6e:	81 95       	neg	r24
    1d70:	80 93 71 01 	sts	0x0171, r24
			TCNT0= MTIM_u8Timer0Preload;
    1d74:	e2 e5       	ldi	r30, 0x52	; 82
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	80 91 71 01 	lds	r24, 0x0171
    1d7c:	80 83       	st	Z, r24
    1d7e:	02 c0       	rjmp	.+4      	; 0x1d84 <MTIM_stderrTimerDelay+0x1ca>
		break;
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: L_stderrState=E_NOK; break;
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	8b 87       	std	Y+11, r24	; 0x0b
	}
	return L_stderrState;
    1d84:	8b 85       	ldd	r24, Y+11	; 0x0b

}
    1d86:	64 96       	adiw	r28, 0x14	; 20
    1d88:	0f b6       	in	r0, 0x3f	; 63
    1d8a:	f8 94       	cli
    1d8c:	de bf       	out	0x3e, r29	; 62
    1d8e:	0f be       	out	0x3f, r0	; 63
    1d90:	cd bf       	out	0x3d, r28	; 61
    1d92:	cf 91       	pop	r28
    1d94:	df 91       	pop	r29
    1d96:	1f 91       	pop	r17
    1d98:	0f 91       	pop	r16
    1d9a:	ff 90       	pop	r15
    1d9c:	ef 90       	pop	r14
    1d9e:	08 95       	ret

00001da0 <__vector_11>:

void __vector_11(void) __attribute__((signal));
void __vector_11(void){
    1da0:	1f 92       	push	r1
    1da2:	0f 92       	push	r0
    1da4:	0f b6       	in	r0, 0x3f	; 63
    1da6:	0f 92       	push	r0
    1da8:	11 24       	eor	r1, r1
    1daa:	2f 93       	push	r18
    1dac:	3f 93       	push	r19
    1dae:	4f 93       	push	r20
    1db0:	5f 93       	push	r21
    1db2:	6f 93       	push	r22
    1db4:	7f 93       	push	r23
    1db6:	8f 93       	push	r24
    1db8:	9f 93       	push	r25
    1dba:	af 93       	push	r26
    1dbc:	bf 93       	push	r27
    1dbe:	ef 93       	push	r30
    1dc0:	ff 93       	push	r31
    1dc2:	df 93       	push	r29
    1dc4:	cf 93       	push	r28
    1dc6:	cd b7       	in	r28, 0x3d	; 61
    1dc8:	de b7       	in	r29, 0x3e	; 62

	if(NULL_POINTER != MTIM_pvoidfUserFunctionT0OVF)
    1dca:	80 91 68 01 	lds	r24, 0x0168
    1dce:	90 91 69 01 	lds	r25, 0x0169
    1dd2:	00 97       	sbiw	r24, 0x00	; 0
    1dd4:	29 f1       	breq	.+74     	; 0x1e20 <__vector_11+0x80>
	{
		volatile static u16 L_u16OVFCounter = 0;
		L_u16OVFCounter++;
    1dd6:	80 91 6c 01 	lds	r24, 0x016C
    1dda:	90 91 6d 01 	lds	r25, 0x016D
    1dde:	01 96       	adiw	r24, 0x01	; 1
    1de0:	90 93 6d 01 	sts	0x016D, r25
    1de4:	80 93 6c 01 	sts	0x016C, r24
		if(L_u16OVFCounter==(MTIM_u16Timer0OVFCount+1))
    1de8:	80 91 6f 01 	lds	r24, 0x016F
    1dec:	90 91 70 01 	lds	r25, 0x0170
    1df0:	9c 01       	movw	r18, r24
    1df2:	2f 5f       	subi	r18, 0xFF	; 255
    1df4:	3f 4f       	sbci	r19, 0xFF	; 255
    1df6:	80 91 6c 01 	lds	r24, 0x016C
    1dfa:	90 91 6d 01 	lds	r25, 0x016D
    1dfe:	28 17       	cp	r18, r24
    1e00:	39 07       	cpc	r19, r25
    1e02:	71 f4       	brne	.+28     	; 0x1e20 <__vector_11+0x80>
		{
			L_u16OVFCounter =0;
    1e04:	10 92 6d 01 	sts	0x016D, r1
    1e08:	10 92 6c 01 	sts	0x016C, r1
			TCNT0=MTIM_u8Timer0Preload;
    1e0c:	e2 e5       	ldi	r30, 0x52	; 82
    1e0e:	f0 e0       	ldi	r31, 0x00	; 0
    1e10:	80 91 71 01 	lds	r24, 0x0171
    1e14:	80 83       	st	Z, r24
			(*MTIM_pvoidfUserFunctionT0OVF)();
    1e16:	e0 91 68 01 	lds	r30, 0x0168
    1e1a:	f0 91 69 01 	lds	r31, 0x0169
    1e1e:	09 95       	icall
	else
	{
		/* do nothing */
	}

}
    1e20:	cf 91       	pop	r28
    1e22:	df 91       	pop	r29
    1e24:	ff 91       	pop	r31
    1e26:	ef 91       	pop	r30
    1e28:	bf 91       	pop	r27
    1e2a:	af 91       	pop	r26
    1e2c:	9f 91       	pop	r25
    1e2e:	8f 91       	pop	r24
    1e30:	7f 91       	pop	r23
    1e32:	6f 91       	pop	r22
    1e34:	5f 91       	pop	r21
    1e36:	4f 91       	pop	r20
    1e38:	3f 91       	pop	r19
    1e3a:	2f 91       	pop	r18
    1e3c:	0f 90       	pop	r0
    1e3e:	0f be       	out	0x3f, r0	; 63
    1e40:	0f 90       	pop	r0
    1e42:	1f 90       	pop	r1
    1e44:	18 95       	reti

00001e46 <main>:
#include "MDIO_interface.h"
#include "MTIM_Interface.h"

void Toggle_Led(void);
int main (void)
{
    1e46:	df 93       	push	r29
    1e48:	cf 93       	push	r28
    1e4a:	cd b7       	in	r28, 0x3d	; 61
    1e4c:	de b7       	in	r29, 0x3e	; 62

	MDIO_stderrSetPinDirection(MDIO_PORTA,0,MDIO_OUTPUT);
    1e4e:	81 e0       	ldi	r24, 0x01	; 1
    1e50:	60 e0       	ldi	r22, 0x00	; 0
    1e52:	41 e0       	ldi	r20, 0x01	; 1
    1e54:	0e 94 9c 07 	call	0xf38	; 0xf38 <MDIO_stderrSetPinDirection>
	MDIO_stderrSetPinDirection(MDIO_PORTA,1,MDIO_OUTPUT);
    1e58:	81 e0       	ldi	r24, 0x01	; 1
    1e5a:	61 e0       	ldi	r22, 0x01	; 1
    1e5c:	41 e0       	ldi	r20, 0x01	; 1
    1e5e:	0e 94 9c 07 	call	0xf38	; 0xf38 <MDIO_stderrSetPinDirection>
	MTIM_stderrInit(MTIM_TIMER0, MTIM_CS_PRESCALER_1024,MTIM_MODE_NORMAL,MTIM_HWPIN_DISCONNECTED);
    1e62:	80 e0       	ldi	r24, 0x00	; 0
    1e64:	65 e0       	ldi	r22, 0x05	; 5
    1e66:	40 e0       	ldi	r20, 0x00	; 0
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	0e 94 03 0c 	call	0x1806	; 0x1806 <MTIM_stderrInit>
	MTIM_stderrSetCallBack(&Toggle_Led, MTIM_INTERRUPT_T0_OVF);
    1e6e:	8c e4       	ldi	r24, 0x4C	; 76
    1e70:	9f e0       	ldi	r25, 0x0F	; 15
    1e72:	60 e0       	ldi	r22, 0x00	; 0
    1e74:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <MTIM_stderrSetCallBack>
	MTIM_stderrEnableInterrupt(MTIM_INTERRUPT_T0_OVF);
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	0e 94 c8 0c 	call	0x1990	; 0x1990 <MTIM_stderrEnableInterrupt>
	MGIE_voidEnable();
    1e7e:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <MGIE_voidEnable>
	MTIM_stderrTimerDelay(MTIM_TIMER0, 1000);
    1e82:	80 e0       	ldi	r24, 0x00	; 0
    1e84:	48 ee       	ldi	r20, 0xE8	; 232
    1e86:	53 e0       	ldi	r21, 0x03	; 3
    1e88:	60 e0       	ldi	r22, 0x00	; 0
    1e8a:	70 e0       	ldi	r23, 0x00	; 0
    1e8c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <MTIM_stderrTimerDelay>
	MTIM_stderrStartTimer(MTIM_TIMER0);
    1e90:	80 e0       	ldi	r24, 0x00	; 0
    1e92:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <MTIM_stderrStartTimer>
    1e96:	ff cf       	rjmp	.-2      	; 0x1e96 <main+0x50>

00001e98 <Toggle_Led>:
	return 0 ;
}


void Toggle_Led(void)
{
    1e98:	df 93       	push	r29
    1e9a:	cf 93       	push	r28
    1e9c:	cd b7       	in	r28, 0x3d	; 61
    1e9e:	de b7       	in	r29, 0x3e	; 62
	static u8 x = 0 ;
	if(x==0)
    1ea0:	80 91 72 01 	lds	r24, 0x0172
    1ea4:	88 23       	and	r24, r24
    1ea6:	71 f4       	brne	.+28     	; 0x1ec4 <Toggle_Led+0x2c>
	{
		MDIO_stderrSetPinValue(MDIO_PORTA, 1 , MDIO_HIGH);
    1ea8:	81 e0       	ldi	r24, 0x01	; 1
    1eaa:	61 e0       	ldi	r22, 0x01	; 1
    1eac:	42 e0       	ldi	r20, 0x02	; 2
    1eae:	0e 94 93 09 	call	0x1326	; 0x1326 <MDIO_stderrSetPinValue>
		MDIO_stderrSetPinValue(MDIO_PORTA, 0 , MDIO_LOW);
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	60 e0       	ldi	r22, 0x00	; 0
    1eb6:	41 e0       	ldi	r20, 0x01	; 1
    1eb8:	0e 94 93 09 	call	0x1326	; 0x1326 <MDIO_stderrSetPinValue>
		x = 1 ;
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	80 93 72 01 	sts	0x0172, r24
    1ec2:	10 c0       	rjmp	.+32     	; 0x1ee4 <Toggle_Led+0x4c>

	}
	else if(x==1)
    1ec4:	80 91 72 01 	lds	r24, 0x0172
    1ec8:	81 30       	cpi	r24, 0x01	; 1
    1eca:	61 f4       	brne	.+24     	; 0x1ee4 <Toggle_Led+0x4c>
	{
		MDIO_stderrSetPinValue(MDIO_PORTA, 0 , MDIO_HIGH);
    1ecc:	81 e0       	ldi	r24, 0x01	; 1
    1ece:	60 e0       	ldi	r22, 0x00	; 0
    1ed0:	42 e0       	ldi	r20, 0x02	; 2
    1ed2:	0e 94 93 09 	call	0x1326	; 0x1326 <MDIO_stderrSetPinValue>
		MDIO_stderrSetPinValue(MDIO_PORTA, 1 , MDIO_LOW);
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	61 e0       	ldi	r22, 0x01	; 1
    1eda:	41 e0       	ldi	r20, 0x01	; 1
    1edc:	0e 94 93 09 	call	0x1326	; 0x1326 <MDIO_stderrSetPinValue>
		x=0 ;
    1ee0:	10 92 72 01 	sts	0x0172, r1

	}

}
    1ee4:	cf 91       	pop	r28
    1ee6:	df 91       	pop	r29
    1ee8:	08 95       	ret

00001eea <__udivmodsi4>:
    1eea:	a1 e2       	ldi	r26, 0x21	; 33
    1eec:	1a 2e       	mov	r1, r26
    1eee:	aa 1b       	sub	r26, r26
    1ef0:	bb 1b       	sub	r27, r27
    1ef2:	fd 01       	movw	r30, r26
    1ef4:	0d c0       	rjmp	.+26     	; 0x1f10 <__udivmodsi4_ep>

00001ef6 <__udivmodsi4_loop>:
    1ef6:	aa 1f       	adc	r26, r26
    1ef8:	bb 1f       	adc	r27, r27
    1efa:	ee 1f       	adc	r30, r30
    1efc:	ff 1f       	adc	r31, r31
    1efe:	a2 17       	cp	r26, r18
    1f00:	b3 07       	cpc	r27, r19
    1f02:	e4 07       	cpc	r30, r20
    1f04:	f5 07       	cpc	r31, r21
    1f06:	20 f0       	brcs	.+8      	; 0x1f10 <__udivmodsi4_ep>
    1f08:	a2 1b       	sub	r26, r18
    1f0a:	b3 0b       	sbc	r27, r19
    1f0c:	e4 0b       	sbc	r30, r20
    1f0e:	f5 0b       	sbc	r31, r21

00001f10 <__udivmodsi4_ep>:
    1f10:	66 1f       	adc	r22, r22
    1f12:	77 1f       	adc	r23, r23
    1f14:	88 1f       	adc	r24, r24
    1f16:	99 1f       	adc	r25, r25
    1f18:	1a 94       	dec	r1
    1f1a:	69 f7       	brne	.-38     	; 0x1ef6 <__udivmodsi4_loop>
    1f1c:	60 95       	com	r22
    1f1e:	70 95       	com	r23
    1f20:	80 95       	com	r24
    1f22:	90 95       	com	r25
    1f24:	9b 01       	movw	r18, r22
    1f26:	ac 01       	movw	r20, r24
    1f28:	bd 01       	movw	r22, r26
    1f2a:	cf 01       	movw	r24, r30
    1f2c:	08 95       	ret

00001f2e <__prologue_saves__>:
    1f2e:	2f 92       	push	r2
    1f30:	3f 92       	push	r3
    1f32:	4f 92       	push	r4
    1f34:	5f 92       	push	r5
    1f36:	6f 92       	push	r6
    1f38:	7f 92       	push	r7
    1f3a:	8f 92       	push	r8
    1f3c:	9f 92       	push	r9
    1f3e:	af 92       	push	r10
    1f40:	bf 92       	push	r11
    1f42:	cf 92       	push	r12
    1f44:	df 92       	push	r13
    1f46:	ef 92       	push	r14
    1f48:	ff 92       	push	r15
    1f4a:	0f 93       	push	r16
    1f4c:	1f 93       	push	r17
    1f4e:	cf 93       	push	r28
    1f50:	df 93       	push	r29
    1f52:	cd b7       	in	r28, 0x3d	; 61
    1f54:	de b7       	in	r29, 0x3e	; 62
    1f56:	ca 1b       	sub	r28, r26
    1f58:	db 0b       	sbc	r29, r27
    1f5a:	0f b6       	in	r0, 0x3f	; 63
    1f5c:	f8 94       	cli
    1f5e:	de bf       	out	0x3e, r29	; 62
    1f60:	0f be       	out	0x3f, r0	; 63
    1f62:	cd bf       	out	0x3d, r28	; 61
    1f64:	09 94       	ijmp

00001f66 <__epilogue_restores__>:
    1f66:	2a 88       	ldd	r2, Y+18	; 0x12
    1f68:	39 88       	ldd	r3, Y+17	; 0x11
    1f6a:	48 88       	ldd	r4, Y+16	; 0x10
    1f6c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f6e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f70:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f72:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f74:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f76:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f78:	b9 84       	ldd	r11, Y+9	; 0x09
    1f7a:	c8 84       	ldd	r12, Y+8	; 0x08
    1f7c:	df 80       	ldd	r13, Y+7	; 0x07
    1f7e:	ee 80       	ldd	r14, Y+6	; 0x06
    1f80:	fd 80       	ldd	r15, Y+5	; 0x05
    1f82:	0c 81       	ldd	r16, Y+4	; 0x04
    1f84:	1b 81       	ldd	r17, Y+3	; 0x03
    1f86:	aa 81       	ldd	r26, Y+2	; 0x02
    1f88:	b9 81       	ldd	r27, Y+1	; 0x01
    1f8a:	ce 0f       	add	r28, r30
    1f8c:	d1 1d       	adc	r29, r1
    1f8e:	0f b6       	in	r0, 0x3f	; 63
    1f90:	f8 94       	cli
    1f92:	de bf       	out	0x3e, r29	; 62
    1f94:	0f be       	out	0x3f, r0	; 63
    1f96:	cd bf       	out	0x3d, r28	; 61
    1f98:	ed 01       	movw	r28, r26
    1f9a:	08 95       	ret

00001f9c <_exit>:
    1f9c:	f8 94       	cli

00001f9e <__stop_program>:
    1f9e:	ff cf       	rjmp	.-2      	; 0x1f9e <__stop_program>
