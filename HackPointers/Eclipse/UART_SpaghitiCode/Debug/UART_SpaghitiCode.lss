
UART_SpaghitiCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b72  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a5c  00000000  00000000  00000bc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000050c  00000000  00000000  00001624  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 66 05 	call	0xacc	; 0xacc <main>
  64:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <MDIO_stderrSetPortDirection>:
/* SWC Includes */
#include "MDIO_private.h"
#include "MDIO_interface.h"

STD_error_t MDIO_stderrSetPortDirection(u8 ARG_u8Port, u8 ARG_u8Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <MDIO_stderrSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <MDIO_stderrSetPortDirection+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	8a 83       	std	Y+2, r24	; 0x02
  7c:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError = E_OK;
  7e:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
  80:	8a 81       	ldd	r24, Y+2	; 0x02
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	82 30       	cpi	r24, 0x02	; 2
  90:	91 05       	cpc	r25, r1
  92:	d9 f0       	breq	.+54     	; 0xca <MDIO_stderrSetPortDirection+0x5e>
  94:	2c 81       	ldd	r18, Y+4	; 0x04
  96:	3d 81       	ldd	r19, Y+5	; 0x05
  98:	23 30       	cpi	r18, 0x03	; 3
  9a:	31 05       	cpc	r19, r1
  9c:	34 f4       	brge	.+12     	; 0xaa <MDIO_stderrSetPortDirection+0x3e>
  9e:	8c 81       	ldd	r24, Y+4	; 0x04
  a0:	9d 81       	ldd	r25, Y+5	; 0x05
  a2:	81 30       	cpi	r24, 0x01	; 1
  a4:	91 05       	cpc	r25, r1
  a6:	61 f0       	breq	.+24     	; 0xc0 <MDIO_stderrSetPortDirection+0x54>
  a8:	1f c0       	rjmp	.+62     	; 0xe8 <MDIO_stderrSetPortDirection+0x7c>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	23 30       	cpi	r18, 0x03	; 3
  b0:	31 05       	cpc	r19, r1
  b2:	81 f0       	breq	.+32     	; 0xd4 <MDIO_stderrSetPortDirection+0x68>
  b4:	8c 81       	ldd	r24, Y+4	; 0x04
  b6:	9d 81       	ldd	r25, Y+5	; 0x05
  b8:	84 30       	cpi	r24, 0x04	; 4
  ba:	91 05       	cpc	r25, r1
  bc:	81 f0       	breq	.+32     	; 0xde <MDIO_stderrSetPortDirection+0x72>
  be:	14 c0       	rjmp	.+40     	; 0xe8 <MDIO_stderrSetPortDirection+0x7c>
	{
		case MDIO_PORTA: GPIOA -> DDR = ARG_u8Direction; break;
  c0:	e9 e3       	ldi	r30, 0x39	; 57
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	81 83       	std	Z+1, r24	; 0x01
  c8:	11 c0       	rjmp	.+34     	; 0xec <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTB: GPIOB -> DDR = ARG_u8Direction; break;
  ca:	e6 e3       	ldi	r30, 0x36	; 54
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	8b 81       	ldd	r24, Y+3	; 0x03
  d0:	81 83       	std	Z+1, r24	; 0x01
  d2:	0c c0       	rjmp	.+24     	; 0xec <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTC: GPIOC -> DDR = ARG_u8Direction; break;
  d4:	e3 e3       	ldi	r30, 0x33	; 51
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	8b 81       	ldd	r24, Y+3	; 0x03
  da:	81 83       	std	Z+1, r24	; 0x01
  dc:	07 c0       	rjmp	.+14     	; 0xec <MDIO_stderrSetPortDirection+0x80>
		case MDIO_PORTD: GPIOD -> DDR = ARG_u8Direction; break;
  de:	e0 e3       	ldi	r30, 0x30	; 48
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	81 83       	std	Z+1, r24	; 0x01
  e6:	02 c0       	rjmp	.+4      	; 0xec <MDIO_stderrSetPortDirection+0x80>
		default: L_stderrError = E_NOK; break; /* Report an Error */
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
  ec:	89 81       	ldd	r24, Y+1	; 0x01
}
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	08 95       	ret

000000fe <MDIO_stderrSetPortValue>:

STD_error_t MDIO_stderrSetPortValue(u8 ARG_u8Port, u8 ARG_u8Value)
{
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	00 d0       	rcall	.+0      	; 0x104 <MDIO_stderrSetPortValue+0x6>
 104:	00 d0       	rcall	.+0      	; 0x106 <MDIO_stderrSetPortValue+0x8>
 106:	0f 92       	push	r0
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
 10c:	8a 83       	std	Y+2, r24	; 0x02
 10e:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError = E_OK;
 110:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
 112:	8a 81       	ldd	r24, Y+2	; 0x02
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	3d 83       	std	Y+5, r19	; 0x05
 11a:	2c 83       	std	Y+4, r18	; 0x04
 11c:	8c 81       	ldd	r24, Y+4	; 0x04
 11e:	9d 81       	ldd	r25, Y+5	; 0x05
 120:	82 30       	cpi	r24, 0x02	; 2
 122:	91 05       	cpc	r25, r1
 124:	d9 f0       	breq	.+54     	; 0x15c <MDIO_stderrSetPortValue+0x5e>
 126:	2c 81       	ldd	r18, Y+4	; 0x04
 128:	3d 81       	ldd	r19, Y+5	; 0x05
 12a:	23 30       	cpi	r18, 0x03	; 3
 12c:	31 05       	cpc	r19, r1
 12e:	34 f4       	brge	.+12     	; 0x13c <MDIO_stderrSetPortValue+0x3e>
 130:	8c 81       	ldd	r24, Y+4	; 0x04
 132:	9d 81       	ldd	r25, Y+5	; 0x05
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	91 05       	cpc	r25, r1
 138:	61 f0       	breq	.+24     	; 0x152 <MDIO_stderrSetPortValue+0x54>
 13a:	1f c0       	rjmp	.+62     	; 0x17a <MDIO_stderrSetPortValue+0x7c>
 13c:	2c 81       	ldd	r18, Y+4	; 0x04
 13e:	3d 81       	ldd	r19, Y+5	; 0x05
 140:	23 30       	cpi	r18, 0x03	; 3
 142:	31 05       	cpc	r19, r1
 144:	81 f0       	breq	.+32     	; 0x166 <MDIO_stderrSetPortValue+0x68>
 146:	8c 81       	ldd	r24, Y+4	; 0x04
 148:	9d 81       	ldd	r25, Y+5	; 0x05
 14a:	84 30       	cpi	r24, 0x04	; 4
 14c:	91 05       	cpc	r25, r1
 14e:	81 f0       	breq	.+32     	; 0x170 <MDIO_stderrSetPortValue+0x72>
 150:	14 c0       	rjmp	.+40     	; 0x17a <MDIO_stderrSetPortValue+0x7c>
	{
		case MDIO_PORTA: GPIOA -> PORT = ARG_u8Value; break;
 152:	e9 e3       	ldi	r30, 0x39	; 57
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	8b 81       	ldd	r24, Y+3	; 0x03
 158:	82 83       	std	Z+2, r24	; 0x02
 15a:	11 c0       	rjmp	.+34     	; 0x17e <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTB: GPIOB -> PORT = ARG_u8Value; break;
 15c:	e6 e3       	ldi	r30, 0x36	; 54
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	8b 81       	ldd	r24, Y+3	; 0x03
 162:	82 83       	std	Z+2, r24	; 0x02
 164:	0c c0       	rjmp	.+24     	; 0x17e <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTC: GPIOC -> PORT = ARG_u8Value; break;
 166:	e3 e3       	ldi	r30, 0x33	; 51
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	8b 81       	ldd	r24, Y+3	; 0x03
 16c:	82 83       	std	Z+2, r24	; 0x02
 16e:	07 c0       	rjmp	.+14     	; 0x17e <MDIO_stderrSetPortValue+0x80>
		case MDIO_PORTD: GPIOD -> PORT = ARG_u8Value; break;
 170:	e0 e3       	ldi	r30, 0x30	; 48
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	82 83       	std	Z+2, r24	; 0x02
 178:	02 c0       	rjmp	.+4      	; 0x17e <MDIO_stderrSetPortValue+0x80>
		default: L_stderrError = E_NOK; break; /* Report an Error */
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 17e:	89 81       	ldd	r24, Y+1	; 0x01
}
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <MDIO_stderrGetPortValue>:

STD_error_t	MDIO_stderrGetPortValue(u8* ARG_u8pValue, u8 ARG_u8Port)
{
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	00 d0       	rcall	.+0      	; 0x196 <MDIO_stderrGetPortValue+0x6>
 196:	00 d0       	rcall	.+0      	; 0x198 <MDIO_stderrGetPortValue+0x8>
 198:	00 d0       	rcall	.+0      	; 0x19a <MDIO_stderrGetPortValue+0xa>
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
 19e:	9b 83       	std	Y+3, r25	; 0x03
 1a0:	8a 83       	std	Y+2, r24	; 0x02
 1a2:	6c 83       	std	Y+4, r22	; 0x04
	STD_error_t L_stderrError = E_OK;
 1a4:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
 1a6:	8c 81       	ldd	r24, Y+4	; 0x04
 1a8:	28 2f       	mov	r18, r24
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	3e 83       	std	Y+6, r19	; 0x06
 1ae:	2d 83       	std	Y+5, r18	; 0x05
 1b0:	8d 81       	ldd	r24, Y+5	; 0x05
 1b2:	9e 81       	ldd	r25, Y+6	; 0x06
 1b4:	82 30       	cpi	r24, 0x02	; 2
 1b6:	91 05       	cpc	r25, r1
 1b8:	e9 f0       	breq	.+58     	; 0x1f4 <MDIO_stderrGetPortValue+0x64>
 1ba:	2d 81       	ldd	r18, Y+5	; 0x05
 1bc:	3e 81       	ldd	r19, Y+6	; 0x06
 1be:	23 30       	cpi	r18, 0x03	; 3
 1c0:	31 05       	cpc	r19, r1
 1c2:	34 f4       	brge	.+12     	; 0x1d0 <MDIO_stderrGetPortValue+0x40>
 1c4:	8d 81       	ldd	r24, Y+5	; 0x05
 1c6:	9e 81       	ldd	r25, Y+6	; 0x06
 1c8:	81 30       	cpi	r24, 0x01	; 1
 1ca:	91 05       	cpc	r25, r1
 1cc:	61 f0       	breq	.+24     	; 0x1e6 <MDIO_stderrGetPortValue+0x56>
 1ce:	27 c0       	rjmp	.+78     	; 0x21e <MDIO_stderrGetPortValue+0x8e>
 1d0:	2d 81       	ldd	r18, Y+5	; 0x05
 1d2:	3e 81       	ldd	r19, Y+6	; 0x06
 1d4:	23 30       	cpi	r18, 0x03	; 3
 1d6:	31 05       	cpc	r19, r1
 1d8:	a1 f0       	breq	.+40     	; 0x202 <MDIO_stderrGetPortValue+0x72>
 1da:	8d 81       	ldd	r24, Y+5	; 0x05
 1dc:	9e 81       	ldd	r25, Y+6	; 0x06
 1de:	84 30       	cpi	r24, 0x04	; 4
 1e0:	91 05       	cpc	r25, r1
 1e2:	b1 f0       	breq	.+44     	; 0x210 <MDIO_stderrGetPortValue+0x80>
 1e4:	1c c0       	rjmp	.+56     	; 0x21e <MDIO_stderrGetPortValue+0x8e>
	{
		case MDIO_PORTA: *ARG_u8pValue = GPIOA -> PIN; break;
 1e6:	e9 e3       	ldi	r30, 0x39	; 57
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	ea 81       	ldd	r30, Y+2	; 0x02
 1ee:	fb 81       	ldd	r31, Y+3	; 0x03
 1f0:	80 83       	st	Z, r24
 1f2:	17 c0       	rjmp	.+46     	; 0x222 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTB: *ARG_u8pValue = GPIOB -> PIN; break;
 1f4:	e6 e3       	ldi	r30, 0x36	; 54
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	ea 81       	ldd	r30, Y+2	; 0x02
 1fc:	fb 81       	ldd	r31, Y+3	; 0x03
 1fe:	80 83       	st	Z, r24
 200:	10 c0       	rjmp	.+32     	; 0x222 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTC: *ARG_u8pValue = GPIOC -> PIN; break;
 202:	e3 e3       	ldi	r30, 0x33	; 51
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	ea 81       	ldd	r30, Y+2	; 0x02
 20a:	fb 81       	ldd	r31, Y+3	; 0x03
 20c:	80 83       	st	Z, r24
 20e:	09 c0       	rjmp	.+18     	; 0x222 <MDIO_stderrGetPortValue+0x92>
        case MDIO_PORTD: *ARG_u8pValue = GPIOD -> PIN; break;
 210:	e0 e3       	ldi	r30, 0x30	; 48
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	ea 81       	ldd	r30, Y+2	; 0x02
 218:	fb 81       	ldd	r31, Y+3	; 0x03
 21a:	80 83       	st	Z, r24
 21c:	02 c0       	rjmp	.+4      	; 0x222 <MDIO_stderrGetPortValue+0x92>
        default: L_stderrError = E_NOK; break; /* Report an Error */
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 222:	89 81       	ldd	r24, Y+1	; 0x01
}
 224:	26 96       	adiw	r28, 0x06	; 6
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	f8 94       	cli
 22a:	de bf       	out	0x3e, r29	; 62
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	cd bf       	out	0x3d, r28	; 61
 230:	cf 91       	pop	r28
 232:	df 91       	pop	r29
 234:	08 95       	ret

00000236 <MDIO_stderrSetPinDirection>:

STD_error_t MDIO_stderrSetPinDirection(u8 ARG_u8Port, u8 ARG_u8Pin, u8 ARG_u8Direction)
{
 236:	df 93       	push	r29
 238:	cf 93       	push	r28
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
 23e:	2a 97       	sbiw	r28, 0x0a	; 10
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	8a 83       	std	Y+2, r24	; 0x02
 24c:	6b 83       	std	Y+3, r22	; 0x03
 24e:	4c 83       	std	Y+4, r20	; 0x04
	STD_error_t L_stderrError = E_OK;
 250:	19 82       	std	Y+1, r1	; 0x01
	if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
 252:	8b 81       	ldd	r24, Y+3	; 0x03
 254:	88 30       	cpi	r24, 0x08	; 8
 256:	08 f0       	brcs	.+2      	; 0x25a <MDIO_stderrSetPinDirection+0x24>
 258:	d9 c1       	rjmp	.+946    	; 0x60c <MDIO_stderrSetPinDirection+0x3d6>
	{
		if(MDIO_OUTPUT == ARG_u8Direction)
 25a:	8c 81       	ldd	r24, Y+4	; 0x04
 25c:	81 30       	cpi	r24, 0x01	; 1
 25e:	09 f0       	breq	.+2      	; 0x262 <MDIO_stderrSetPinDirection+0x2c>
 260:	7c c0       	rjmp	.+248    	; 0x35a <MDIO_stderrSetPinDirection+0x124>
		{
			switch(ARG_u8Port)
 262:	8a 81       	ldd	r24, Y+2	; 0x02
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	3a 87       	std	Y+10, r19	; 0x0a
 26a:	29 87       	std	Y+9, r18	; 0x09
 26c:	89 85       	ldd	r24, Y+9	; 0x09
 26e:	9a 85       	ldd	r25, Y+10	; 0x0a
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	69 f1       	breq	.+90     	; 0x2d0 <MDIO_stderrSetPinDirection+0x9a>
 276:	29 85       	ldd	r18, Y+9	; 0x09
 278:	3a 85       	ldd	r19, Y+10	; 0x0a
 27a:	23 30       	cpi	r18, 0x03	; 3
 27c:	31 05       	cpc	r19, r1
 27e:	34 f4       	brge	.+12     	; 0x28c <MDIO_stderrSetPinDirection+0x56>
 280:	89 85       	ldd	r24, Y+9	; 0x09
 282:	9a 85       	ldd	r25, Y+10	; 0x0a
 284:	81 30       	cpi	r24, 0x01	; 1
 286:	91 05       	cpc	r25, r1
 288:	69 f0       	breq	.+26     	; 0x2a4 <MDIO_stderrSetPinDirection+0x6e>
 28a:	64 c0       	rjmp	.+200    	; 0x354 <MDIO_stderrSetPinDirection+0x11e>
 28c:	29 85       	ldd	r18, Y+9	; 0x09
 28e:	3a 85       	ldd	r19, Y+10	; 0x0a
 290:	23 30       	cpi	r18, 0x03	; 3
 292:	31 05       	cpc	r19, r1
 294:	99 f1       	breq	.+102    	; 0x2fc <MDIO_stderrSetPinDirection+0xc6>
 296:	89 85       	ldd	r24, Y+9	; 0x09
 298:	9a 85       	ldd	r25, Y+10	; 0x0a
 29a:	84 30       	cpi	r24, 0x04	; 4
 29c:	91 05       	cpc	r25, r1
 29e:	09 f4       	brne	.+2      	; 0x2a2 <MDIO_stderrSetPinDirection+0x6c>
 2a0:	43 c0       	rjmp	.+134    	; 0x328 <MDIO_stderrSetPinDirection+0xf2>
 2a2:	58 c0       	rjmp	.+176    	; 0x354 <MDIO_stderrSetPinDirection+0x11e>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> DDR, ARG_u8Pin); break;
 2a4:	a9 e3       	ldi	r26, 0x39	; 57
 2a6:	b0 e0       	ldi	r27, 0x00	; 0
 2a8:	e9 e3       	ldi	r30, 0x39	; 57
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	81 81       	ldd	r24, Z+1	; 0x01
 2ae:	48 2f       	mov	r20, r24
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	28 2f       	mov	r18, r24
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	02 2e       	mov	r0, r18
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <MDIO_stderrSetPinDirection+0x8c>
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	0a 94       	dec	r0
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <MDIO_stderrSetPinDirection+0x88>
 2c6:	84 2b       	or	r24, r20
 2c8:	11 96       	adiw	r26, 0x01	; 1
 2ca:	8c 93       	st	X, r24
 2cc:	11 97       	sbiw	r26, 0x01	; 1
 2ce:	a0 c1       	rjmp	.+832    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: SET_BIT(GPIOB -> DDR, ARG_u8Pin); break;
 2d0:	a6 e3       	ldi	r26, 0x36	; 54
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	e6 e3       	ldi	r30, 0x36	; 54
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	81 81       	ldd	r24, Z+1	; 0x01
 2da:	48 2f       	mov	r20, r24
 2dc:	8b 81       	ldd	r24, Y+3	; 0x03
 2de:	28 2f       	mov	r18, r24
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 2e       	mov	r0, r18
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <MDIO_stderrSetPinDirection+0xb8>
 2ea:	88 0f       	add	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	0a 94       	dec	r0
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <MDIO_stderrSetPinDirection+0xb4>
 2f2:	84 2b       	or	r24, r20
 2f4:	11 96       	adiw	r26, 0x01	; 1
 2f6:	8c 93       	st	X, r24
 2f8:	11 97       	sbiw	r26, 0x01	; 1
 2fa:	8a c1       	rjmp	.+788    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: SET_BIT(GPIOC -> DDR, ARG_u8Pin); break;
 2fc:	a3 e3       	ldi	r26, 0x33	; 51
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	e3 e3       	ldi	r30, 0x33	; 51
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	81 81       	ldd	r24, Z+1	; 0x01
 306:	48 2f       	mov	r20, r24
 308:	8b 81       	ldd	r24, Y+3	; 0x03
 30a:	28 2f       	mov	r18, r24
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 2e       	mov	r0, r18
 314:	02 c0       	rjmp	.+4      	; 0x31a <MDIO_stderrSetPinDirection+0xe4>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	0a 94       	dec	r0
 31c:	e2 f7       	brpl	.-8      	; 0x316 <MDIO_stderrSetPinDirection+0xe0>
 31e:	84 2b       	or	r24, r20
 320:	11 96       	adiw	r26, 0x01	; 1
 322:	8c 93       	st	X, r24
 324:	11 97       	sbiw	r26, 0x01	; 1
 326:	74 c1       	rjmp	.+744    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: SET_BIT(GPIOD -> DDR, ARG_u8Pin); break;
 328:	a0 e3       	ldi	r26, 0x30	; 48
 32a:	b0 e0       	ldi	r27, 0x00	; 0
 32c:	e0 e3       	ldi	r30, 0x30	; 48
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	81 81       	ldd	r24, Z+1	; 0x01
 332:	48 2f       	mov	r20, r24
 334:	8b 81       	ldd	r24, Y+3	; 0x03
 336:	28 2f       	mov	r18, r24
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	02 2e       	mov	r0, r18
 340:	02 c0       	rjmp	.+4      	; 0x346 <MDIO_stderrSetPinDirection+0x110>
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	0a 94       	dec	r0
 348:	e2 f7       	brpl	.-8      	; 0x342 <MDIO_stderrSetPinDirection+0x10c>
 34a:	84 2b       	or	r24, r20
 34c:	11 96       	adiw	r26, 0x01	; 1
 34e:	8c 93       	st	X, r24
 350:	11 97       	sbiw	r26, 0x01	; 1
 352:	5e c1       	rjmp	.+700    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	89 83       	std	Y+1, r24	; 0x01
 358:	5b c1       	rjmp	.+694    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else if(MDIO_INPUT == ARG_u8Direction)
 35a:	8c 81       	ldd	r24, Y+4	; 0x04
 35c:	82 30       	cpi	r24, 0x02	; 2
 35e:	09 f0       	breq	.+2      	; 0x362 <MDIO_stderrSetPinDirection+0x12c>
 360:	80 c0       	rjmp	.+256    	; 0x462 <MDIO_stderrSetPinDirection+0x22c>
		{
			switch(ARG_u8Port)
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	28 2f       	mov	r18, r24
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	38 87       	std	Y+8, r19	; 0x08
 36a:	2f 83       	std	Y+7, r18	; 0x07
 36c:	8f 81       	ldd	r24, Y+7	; 0x07
 36e:	98 85       	ldd	r25, Y+8	; 0x08
 370:	82 30       	cpi	r24, 0x02	; 2
 372:	91 05       	cpc	r25, r1
 374:	71 f1       	breq	.+92     	; 0x3d2 <MDIO_stderrSetPinDirection+0x19c>
 376:	2f 81       	ldd	r18, Y+7	; 0x07
 378:	38 85       	ldd	r19, Y+8	; 0x08
 37a:	23 30       	cpi	r18, 0x03	; 3
 37c:	31 05       	cpc	r19, r1
 37e:	34 f4       	brge	.+12     	; 0x38c <MDIO_stderrSetPinDirection+0x156>
 380:	8f 81       	ldd	r24, Y+7	; 0x07
 382:	98 85       	ldd	r25, Y+8	; 0x08
 384:	81 30       	cpi	r24, 0x01	; 1
 386:	91 05       	cpc	r25, r1
 388:	69 f0       	breq	.+26     	; 0x3a4 <MDIO_stderrSetPinDirection+0x16e>
 38a:	68 c0       	rjmp	.+208    	; 0x45c <MDIO_stderrSetPinDirection+0x226>
 38c:	2f 81       	ldd	r18, Y+7	; 0x07
 38e:	38 85       	ldd	r19, Y+8	; 0x08
 390:	23 30       	cpi	r18, 0x03	; 3
 392:	31 05       	cpc	r19, r1
 394:	a9 f1       	breq	.+106    	; 0x400 <MDIO_stderrSetPinDirection+0x1ca>
 396:	8f 81       	ldd	r24, Y+7	; 0x07
 398:	98 85       	ldd	r25, Y+8	; 0x08
 39a:	84 30       	cpi	r24, 0x04	; 4
 39c:	91 05       	cpc	r25, r1
 39e:	09 f4       	brne	.+2      	; 0x3a2 <MDIO_stderrSetPinDirection+0x16c>
 3a0:	46 c0       	rjmp	.+140    	; 0x42e <MDIO_stderrSetPinDirection+0x1f8>
 3a2:	5c c0       	rjmp	.+184    	; 0x45c <MDIO_stderrSetPinDirection+0x226>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); break;
 3a4:	a9 e3       	ldi	r26, 0x39	; 57
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	e9 e3       	ldi	r30, 0x39	; 57
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	81 81       	ldd	r24, Z+1	; 0x01
 3ae:	48 2f       	mov	r20, r24
 3b0:	8b 81       	ldd	r24, Y+3	; 0x03
 3b2:	28 2f       	mov	r18, r24
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 2e       	mov	r0, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <MDIO_stderrSetPinDirection+0x18c>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	0a 94       	dec	r0
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <MDIO_stderrSetPinDirection+0x188>
 3c6:	80 95       	com	r24
 3c8:	84 23       	and	r24, r20
 3ca:	11 96       	adiw	r26, 0x01	; 1
 3cc:	8c 93       	st	X, r24
 3ce:	11 97       	sbiw	r26, 0x01	; 1
 3d0:	1f c1       	rjmp	.+574    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); break;
 3d2:	a6 e3       	ldi	r26, 0x36	; 54
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	e6 e3       	ldi	r30, 0x36	; 54
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	81 81       	ldd	r24, Z+1	; 0x01
 3dc:	48 2f       	mov	r20, r24
 3de:	8b 81       	ldd	r24, Y+3	; 0x03
 3e0:	28 2f       	mov	r18, r24
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	02 2e       	mov	r0, r18
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <MDIO_stderrSetPinDirection+0x1ba>
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	0a 94       	dec	r0
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <MDIO_stderrSetPinDirection+0x1b6>
 3f4:	80 95       	com	r24
 3f6:	84 23       	and	r24, r20
 3f8:	11 96       	adiw	r26, 0x01	; 1
 3fa:	8c 93       	st	X, r24
 3fc:	11 97       	sbiw	r26, 0x01	; 1
 3fe:	08 c1       	rjmp	.+528    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); break;
 400:	a3 e3       	ldi	r26, 0x33	; 51
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	e3 e3       	ldi	r30, 0x33	; 51
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	81 81       	ldd	r24, Z+1	; 0x01
 40a:	48 2f       	mov	r20, r24
 40c:	8b 81       	ldd	r24, Y+3	; 0x03
 40e:	28 2f       	mov	r18, r24
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	02 2e       	mov	r0, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <MDIO_stderrSetPinDirection+0x1e8>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <MDIO_stderrSetPinDirection+0x1e4>
 422:	80 95       	com	r24
 424:	84 23       	and	r24, r20
 426:	11 96       	adiw	r26, 0x01	; 1
 428:	8c 93       	st	X, r24
 42a:	11 97       	sbiw	r26, 0x01	; 1
 42c:	f1 c0       	rjmp	.+482    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); break;
 42e:	a0 e3       	ldi	r26, 0x30	; 48
 430:	b0 e0       	ldi	r27, 0x00	; 0
 432:	e0 e3       	ldi	r30, 0x30	; 48
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	81 81       	ldd	r24, Z+1	; 0x01
 438:	48 2f       	mov	r20, r24
 43a:	8b 81       	ldd	r24, Y+3	; 0x03
 43c:	28 2f       	mov	r18, r24
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	02 2e       	mov	r0, r18
 446:	02 c0       	rjmp	.+4      	; 0x44c <MDIO_stderrSetPinDirection+0x216>
 448:	88 0f       	add	r24, r24
 44a:	99 1f       	adc	r25, r25
 44c:	0a 94       	dec	r0
 44e:	e2 f7       	brpl	.-8      	; 0x448 <MDIO_stderrSetPinDirection+0x212>
 450:	80 95       	com	r24
 452:	84 23       	and	r24, r20
 454:	11 96       	adiw	r26, 0x01	; 1
 456:	8c 93       	st	X, r24
 458:	11 97       	sbiw	r26, 0x01	; 1
 45a:	da c0       	rjmp	.+436    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	89 83       	std	Y+1, r24	; 0x01
 460:	d7 c0       	rjmp	.+430    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else if(MDIO_INPUT_PULLUP == ARG_u8Direction)
 462:	8c 81       	ldd	r24, Y+4	; 0x04
 464:	83 30       	cpi	r24, 0x03	; 3
 466:	09 f0       	breq	.+2      	; 0x46a <MDIO_stderrSetPinDirection+0x234>
 468:	ce c0       	rjmp	.+412    	; 0x606 <MDIO_stderrSetPinDirection+0x3d0>
		{
			switch(ARG_u8Port)
 46a:	8a 81       	ldd	r24, Y+2	; 0x02
 46c:	28 2f       	mov	r18, r24
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	3e 83       	std	Y+6, r19	; 0x06
 472:	2d 83       	std	Y+5, r18	; 0x05
 474:	8d 81       	ldd	r24, Y+5	; 0x05
 476:	9e 81       	ldd	r25, Y+6	; 0x06
 478:	82 30       	cpi	r24, 0x02	; 2
 47a:	91 05       	cpc	r25, r1
 47c:	09 f4       	brne	.+2      	; 0x480 <MDIO_stderrSetPinDirection+0x24a>
 47e:	42 c0       	rjmp	.+132    	; 0x504 <MDIO_stderrSetPinDirection+0x2ce>
 480:	2d 81       	ldd	r18, Y+5	; 0x05
 482:	3e 81       	ldd	r19, Y+6	; 0x06
 484:	23 30       	cpi	r18, 0x03	; 3
 486:	31 05       	cpc	r19, r1
 488:	34 f4       	brge	.+12     	; 0x496 <MDIO_stderrSetPinDirection+0x260>
 48a:	8d 81       	ldd	r24, Y+5	; 0x05
 48c:	9e 81       	ldd	r25, Y+6	; 0x06
 48e:	81 30       	cpi	r24, 0x01	; 1
 490:	91 05       	cpc	r25, r1
 492:	71 f0       	breq	.+28     	; 0x4b0 <MDIO_stderrSetPinDirection+0x27a>
 494:	b5 c0       	rjmp	.+362    	; 0x600 <MDIO_stderrSetPinDirection+0x3ca>
 496:	2d 81       	ldd	r18, Y+5	; 0x05
 498:	3e 81       	ldd	r19, Y+6	; 0x06
 49a:	23 30       	cpi	r18, 0x03	; 3
 49c:	31 05       	cpc	r19, r1
 49e:	09 f4       	brne	.+2      	; 0x4a2 <MDIO_stderrSetPinDirection+0x26c>
 4a0:	5b c0       	rjmp	.+182    	; 0x558 <MDIO_stderrSetPinDirection+0x322>
 4a2:	8d 81       	ldd	r24, Y+5	; 0x05
 4a4:	9e 81       	ldd	r25, Y+6	; 0x06
 4a6:	84 30       	cpi	r24, 0x04	; 4
 4a8:	91 05       	cpc	r25, r1
 4aa:	09 f4       	brne	.+2      	; 0x4ae <MDIO_stderrSetPinDirection+0x278>
 4ac:	7f c0       	rjmp	.+254    	; 0x5ac <MDIO_stderrSetPinDirection+0x376>
 4ae:	a8 c0       	rjmp	.+336    	; 0x600 <MDIO_stderrSetPinDirection+0x3ca>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 4b0:	a9 e3       	ldi	r26, 0x39	; 57
 4b2:	b0 e0       	ldi	r27, 0x00	; 0
 4b4:	e9 e3       	ldi	r30, 0x39	; 57
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	81 81       	ldd	r24, Z+1	; 0x01
 4ba:	48 2f       	mov	r20, r24
 4bc:	8b 81       	ldd	r24, Y+3	; 0x03
 4be:	28 2f       	mov	r18, r24
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <MDIO_stderrSetPinDirection+0x296>
 4c8:	88 0f       	add	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	2a 95       	dec	r18
 4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <MDIO_stderrSetPinDirection+0x292>
 4d0:	80 95       	com	r24
 4d2:	84 23       	and	r24, r20
 4d4:	11 96       	adiw	r26, 0x01	; 1
 4d6:	8c 93       	st	X, r24
 4d8:	a9 e3       	ldi	r26, 0x39	; 57
 4da:	b0 e0       	ldi	r27, 0x00	; 0
 4dc:	e9 e3       	ldi	r30, 0x39	; 57
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	82 81       	ldd	r24, Z+2	; 0x02
 4e2:	48 2f       	mov	r20, r24
 4e4:	8b 81       	ldd	r24, Y+3	; 0x03
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	02 2e       	mov	r0, r18
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <MDIO_stderrSetPinDirection+0x2c0>
 4f2:	88 0f       	add	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	0a 94       	dec	r0
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <MDIO_stderrSetPinDirection+0x2bc>
 4fa:	84 2b       	or	r24, r20
 4fc:	12 96       	adiw	r26, 0x02	; 2
 4fe:	8c 93       	st	X, r24
 500:	12 97       	sbiw	r26, 0x02	; 2
 502:	86 c0       	rjmp	.+268    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 504:	a6 e3       	ldi	r26, 0x36	; 54
 506:	b0 e0       	ldi	r27, 0x00	; 0
 508:	e6 e3       	ldi	r30, 0x36	; 54
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	81 81       	ldd	r24, Z+1	; 0x01
 50e:	48 2f       	mov	r20, r24
 510:	8b 81       	ldd	r24, Y+3	; 0x03
 512:	28 2f       	mov	r18, r24
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	81 e0       	ldi	r24, 0x01	; 1
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <MDIO_stderrSetPinDirection+0x2ea>
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	2a 95       	dec	r18
 522:	e2 f7       	brpl	.-8      	; 0x51c <MDIO_stderrSetPinDirection+0x2e6>
 524:	80 95       	com	r24
 526:	84 23       	and	r24, r20
 528:	11 96       	adiw	r26, 0x01	; 1
 52a:	8c 93       	st	X, r24
 52c:	a6 e3       	ldi	r26, 0x36	; 54
 52e:	b0 e0       	ldi	r27, 0x00	; 0
 530:	e6 e3       	ldi	r30, 0x36	; 54
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	82 81       	ldd	r24, Z+2	; 0x02
 536:	48 2f       	mov	r20, r24
 538:	8b 81       	ldd	r24, Y+3	; 0x03
 53a:	28 2f       	mov	r18, r24
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 2e       	mov	r0, r18
 544:	02 c0       	rjmp	.+4      	; 0x54a <MDIO_stderrSetPinDirection+0x314>
 546:	88 0f       	add	r24, r24
 548:	99 1f       	adc	r25, r25
 54a:	0a 94       	dec	r0
 54c:	e2 f7       	brpl	.-8      	; 0x546 <MDIO_stderrSetPinDirection+0x310>
 54e:	84 2b       	or	r24, r20
 550:	12 96       	adiw	r26, 0x02	; 2
 552:	8c 93       	st	X, r24
 554:	12 97       	sbiw	r26, 0x02	; 2
 556:	5c c0       	rjmp	.+184    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 558:	a3 e3       	ldi	r26, 0x33	; 51
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	e3 e3       	ldi	r30, 0x33	; 51
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	81 81       	ldd	r24, Z+1	; 0x01
 562:	48 2f       	mov	r20, r24
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	28 2f       	mov	r18, r24
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	02 c0       	rjmp	.+4      	; 0x574 <MDIO_stderrSetPinDirection+0x33e>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	2a 95       	dec	r18
 576:	e2 f7       	brpl	.-8      	; 0x570 <MDIO_stderrSetPinDirection+0x33a>
 578:	80 95       	com	r24
 57a:	84 23       	and	r24, r20
 57c:	11 96       	adiw	r26, 0x01	; 1
 57e:	8c 93       	st	X, r24
 580:	a3 e3       	ldi	r26, 0x33	; 51
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	e3 e3       	ldi	r30, 0x33	; 51
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	82 81       	ldd	r24, Z+2	; 0x02
 58a:	48 2f       	mov	r20, r24
 58c:	8b 81       	ldd	r24, Y+3	; 0x03
 58e:	28 2f       	mov	r18, r24
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 2e       	mov	r0, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <MDIO_stderrSetPinDirection+0x368>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <MDIO_stderrSetPinDirection+0x364>
 5a2:	84 2b       	or	r24, r20
 5a4:	12 96       	adiw	r26, 0x02	; 2
 5a6:	8c 93       	st	X, r24
 5a8:	12 97       	sbiw	r26, 0x02	; 2
 5aa:	32 c0       	rjmp	.+100    	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 5ac:	a0 e3       	ldi	r26, 0x30	; 48
 5ae:	b0 e0       	ldi	r27, 0x00	; 0
 5b0:	e0 e3       	ldi	r30, 0x30	; 48
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	81 81       	ldd	r24, Z+1	; 0x01
 5b6:	48 2f       	mov	r20, r24
 5b8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ba:	28 2f       	mov	r18, r24
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <MDIO_stderrSetPinDirection+0x392>
 5c4:	88 0f       	add	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	2a 95       	dec	r18
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <MDIO_stderrSetPinDirection+0x38e>
 5cc:	80 95       	com	r24
 5ce:	84 23       	and	r24, r20
 5d0:	11 96       	adiw	r26, 0x01	; 1
 5d2:	8c 93       	st	X, r24
 5d4:	a0 e3       	ldi	r26, 0x30	; 48
 5d6:	b0 e0       	ldi	r27, 0x00	; 0
 5d8:	e0 e3       	ldi	r30, 0x30	; 48
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	82 81       	ldd	r24, Z+2	; 0x02
 5de:	48 2f       	mov	r20, r24
 5e0:	8b 81       	ldd	r24, Y+3	; 0x03
 5e2:	28 2f       	mov	r18, r24
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	02 2e       	mov	r0, r18
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <MDIO_stderrSetPinDirection+0x3bc>
 5ee:	88 0f       	add	r24, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	0a 94       	dec	r0
 5f4:	e2 f7       	brpl	.-8      	; 0x5ee <MDIO_stderrSetPinDirection+0x3b8>
 5f6:	84 2b       	or	r24, r20
 5f8:	12 96       	adiw	r26, 0x02	; 2
 5fa:	8c 93       	st	X, r24
 5fc:	12 97       	sbiw	r26, 0x02	; 2
 5fe:	08 c0       	rjmp	.+16     	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
				default: L_stderrError = E_NOK; break; /* Report an Error */
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	89 83       	std	Y+1, r24	; 0x01
 604:	05 c0       	rjmp	.+10     	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
			}
		}
		else
		{
			/* Report an Error */
			L_stderrError = E_NOK;
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	89 83       	std	Y+1, r24	; 0x01
 60a:	02 c0       	rjmp	.+4      	; 0x610 <MDIO_stderrSetPinDirection+0x3da>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 610:	89 81       	ldd	r24, Y+1	; 0x01
}
 612:	2a 96       	adiw	r28, 0x0a	; 10
 614:	0f b6       	in	r0, 0x3f	; 63
 616:	f8 94       	cli
 618:	de bf       	out	0x3e, r29	; 62
 61a:	0f be       	out	0x3f, r0	; 63
 61c:	cd bf       	out	0x3d, r28	; 61
 61e:	cf 91       	pop	r28
 620:	df 91       	pop	r29
 622:	08 95       	ret

00000624 <MDIO_stderrSetPinValue>:

STD_error_t MDIO_stderrSetPinValue(u8 ARG_u8Port, u8 ARG_u8Pin, u8 ARG_u8Value)
{
 624:	df 93       	push	r29
 626:	cf 93       	push	r28
 628:	cd b7       	in	r28, 0x3d	; 61
 62a:	de b7       	in	r29, 0x3e	; 62
 62c:	28 97       	sbiw	r28, 0x08	; 8
 62e:	0f b6       	in	r0, 0x3f	; 63
 630:	f8 94       	cli
 632:	de bf       	out	0x3e, r29	; 62
 634:	0f be       	out	0x3f, r0	; 63
 636:	cd bf       	out	0x3d, r28	; 61
 638:	8a 83       	std	Y+2, r24	; 0x02
 63a:	6b 83       	std	Y+3, r22	; 0x03
 63c:	4c 83       	std	Y+4, r20	; 0x04
	STD_error_t L_stderrError = E_OK;
 63e:	19 82       	std	Y+1, r1	; 0x01
	if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
 640:	8b 81       	ldd	r24, Y+3	; 0x03
 642:	88 30       	cpi	r24, 0x08	; 8
 644:	08 f0       	brcs	.+2      	; 0x648 <MDIO_stderrSetPinValue+0x24>
 646:	07 c1       	rjmp	.+526    	; 0x856 <MDIO_stderrSetPinValue+0x232>
	{
		if(MDIO_HIGH == ARG_u8Value)
 648:	8c 81       	ldd	r24, Y+4	; 0x04
 64a:	82 30       	cpi	r24, 0x02	; 2
 64c:	09 f0       	breq	.+2      	; 0x650 <MDIO_stderrSetPinValue+0x2c>
 64e:	7c c0       	rjmp	.+248    	; 0x748 <MDIO_stderrSetPinValue+0x124>
		{
			switch(ARG_u8Port)
 650:	8a 81       	ldd	r24, Y+2	; 0x02
 652:	28 2f       	mov	r18, r24
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	38 87       	std	Y+8, r19	; 0x08
 658:	2f 83       	std	Y+7, r18	; 0x07
 65a:	8f 81       	ldd	r24, Y+7	; 0x07
 65c:	98 85       	ldd	r25, Y+8	; 0x08
 65e:	82 30       	cpi	r24, 0x02	; 2
 660:	91 05       	cpc	r25, r1
 662:	69 f1       	breq	.+90     	; 0x6be <MDIO_stderrSetPinValue+0x9a>
 664:	2f 81       	ldd	r18, Y+7	; 0x07
 666:	38 85       	ldd	r19, Y+8	; 0x08
 668:	23 30       	cpi	r18, 0x03	; 3
 66a:	31 05       	cpc	r19, r1
 66c:	34 f4       	brge	.+12     	; 0x67a <MDIO_stderrSetPinValue+0x56>
 66e:	8f 81       	ldd	r24, Y+7	; 0x07
 670:	98 85       	ldd	r25, Y+8	; 0x08
 672:	81 30       	cpi	r24, 0x01	; 1
 674:	91 05       	cpc	r25, r1
 676:	69 f0       	breq	.+26     	; 0x692 <MDIO_stderrSetPinValue+0x6e>
 678:	64 c0       	rjmp	.+200    	; 0x742 <MDIO_stderrSetPinValue+0x11e>
 67a:	2f 81       	ldd	r18, Y+7	; 0x07
 67c:	38 85       	ldd	r19, Y+8	; 0x08
 67e:	23 30       	cpi	r18, 0x03	; 3
 680:	31 05       	cpc	r19, r1
 682:	99 f1       	breq	.+102    	; 0x6ea <MDIO_stderrSetPinValue+0xc6>
 684:	8f 81       	ldd	r24, Y+7	; 0x07
 686:	98 85       	ldd	r25, Y+8	; 0x08
 688:	84 30       	cpi	r24, 0x04	; 4
 68a:	91 05       	cpc	r25, r1
 68c:	09 f4       	brne	.+2      	; 0x690 <MDIO_stderrSetPinValue+0x6c>
 68e:	43 c0       	rjmp	.+134    	; 0x716 <MDIO_stderrSetPinValue+0xf2>
 690:	58 c0       	rjmp	.+176    	; 0x742 <MDIO_stderrSetPinValue+0x11e>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 692:	a9 e3       	ldi	r26, 0x39	; 57
 694:	b0 e0       	ldi	r27, 0x00	; 0
 696:	e9 e3       	ldi	r30, 0x39	; 57
 698:	f0 e0       	ldi	r31, 0x00	; 0
 69a:	82 81       	ldd	r24, Z+2	; 0x02
 69c:	48 2f       	mov	r20, r24
 69e:	8b 81       	ldd	r24, Y+3	; 0x03
 6a0:	28 2f       	mov	r18, r24
 6a2:	30 e0       	ldi	r19, 0x00	; 0
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	02 2e       	mov	r0, r18
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <MDIO_stderrSetPinValue+0x8c>
 6ac:	88 0f       	add	r24, r24
 6ae:	99 1f       	adc	r25, r25
 6b0:	0a 94       	dec	r0
 6b2:	e2 f7       	brpl	.-8      	; 0x6ac <MDIO_stderrSetPinValue+0x88>
 6b4:	84 2b       	or	r24, r20
 6b6:	12 96       	adiw	r26, 0x02	; 2
 6b8:	8c 93       	st	X, r24
 6ba:	12 97       	sbiw	r26, 0x02	; 2
 6bc:	ce c0       	rjmp	.+412    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTB: SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 6be:	a6 e3       	ldi	r26, 0x36	; 54
 6c0:	b0 e0       	ldi	r27, 0x00	; 0
 6c2:	e6 e3       	ldi	r30, 0x36	; 54
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	82 81       	ldd	r24, Z+2	; 0x02
 6c8:	48 2f       	mov	r20, r24
 6ca:	8b 81       	ldd	r24, Y+3	; 0x03
 6cc:	28 2f       	mov	r18, r24
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	81 e0       	ldi	r24, 0x01	; 1
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	02 2e       	mov	r0, r18
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <MDIO_stderrSetPinValue+0xb8>
 6d8:	88 0f       	add	r24, r24
 6da:	99 1f       	adc	r25, r25
 6dc:	0a 94       	dec	r0
 6de:	e2 f7       	brpl	.-8      	; 0x6d8 <MDIO_stderrSetPinValue+0xb4>
 6e0:	84 2b       	or	r24, r20
 6e2:	12 96       	adiw	r26, 0x02	; 2
 6e4:	8c 93       	st	X, r24
 6e6:	12 97       	sbiw	r26, 0x02	; 2
 6e8:	b8 c0       	rjmp	.+368    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTC: SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 6ea:	a3 e3       	ldi	r26, 0x33	; 51
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	e3 e3       	ldi	r30, 0x33	; 51
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	82 81       	ldd	r24, Z+2	; 0x02
 6f4:	48 2f       	mov	r20, r24
 6f6:	8b 81       	ldd	r24, Y+3	; 0x03
 6f8:	28 2f       	mov	r18, r24
 6fa:	30 e0       	ldi	r19, 0x00	; 0
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	02 2e       	mov	r0, r18
 702:	02 c0       	rjmp	.+4      	; 0x708 <MDIO_stderrSetPinValue+0xe4>
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	0a 94       	dec	r0
 70a:	e2 f7       	brpl	.-8      	; 0x704 <MDIO_stderrSetPinValue+0xe0>
 70c:	84 2b       	or	r24, r20
 70e:	12 96       	adiw	r26, 0x02	; 2
 710:	8c 93       	st	X, r24
 712:	12 97       	sbiw	r26, 0x02	; 2
 714:	a2 c0       	rjmp	.+324    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTD: SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 716:	a0 e3       	ldi	r26, 0x30	; 48
 718:	b0 e0       	ldi	r27, 0x00	; 0
 71a:	e0 e3       	ldi	r30, 0x30	; 48
 71c:	f0 e0       	ldi	r31, 0x00	; 0
 71e:	82 81       	ldd	r24, Z+2	; 0x02
 720:	48 2f       	mov	r20, r24
 722:	8b 81       	ldd	r24, Y+3	; 0x03
 724:	28 2f       	mov	r18, r24
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	02 2e       	mov	r0, r18
 72e:	02 c0       	rjmp	.+4      	; 0x734 <MDIO_stderrSetPinValue+0x110>
 730:	88 0f       	add	r24, r24
 732:	99 1f       	adc	r25, r25
 734:	0a 94       	dec	r0
 736:	e2 f7       	brpl	.-8      	; 0x730 <MDIO_stderrSetPinValue+0x10c>
 738:	84 2b       	or	r24, r20
 73a:	12 96       	adiw	r26, 0x02	; 2
 73c:	8c 93       	st	X, r24
 73e:	12 97       	sbiw	r26, 0x02	; 2
 740:	8c c0       	rjmp	.+280    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				default: L_stderrError = E_NOK; break; /* Report an Error */
 742:	81 e0       	ldi	r24, 0x01	; 1
 744:	89 83       	std	Y+1, r24	; 0x01
 746:	89 c0       	rjmp	.+274    	; 0x85a <MDIO_stderrSetPinValue+0x236>
			}
		}
		else if(MDIO_LOW == ARG_u8Value)
 748:	8c 81       	ldd	r24, Y+4	; 0x04
 74a:	81 30       	cpi	r24, 0x01	; 1
 74c:	09 f0       	breq	.+2      	; 0x750 <MDIO_stderrSetPinValue+0x12c>
 74e:	80 c0       	rjmp	.+256    	; 0x850 <MDIO_stderrSetPinValue+0x22c>
		{
			switch(ARG_u8Port)
 750:	8a 81       	ldd	r24, Y+2	; 0x02
 752:	28 2f       	mov	r18, r24
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	3e 83       	std	Y+6, r19	; 0x06
 758:	2d 83       	std	Y+5, r18	; 0x05
 75a:	8d 81       	ldd	r24, Y+5	; 0x05
 75c:	9e 81       	ldd	r25, Y+6	; 0x06
 75e:	82 30       	cpi	r24, 0x02	; 2
 760:	91 05       	cpc	r25, r1
 762:	71 f1       	breq	.+92     	; 0x7c0 <MDIO_stderrSetPinValue+0x19c>
 764:	2d 81       	ldd	r18, Y+5	; 0x05
 766:	3e 81       	ldd	r19, Y+6	; 0x06
 768:	23 30       	cpi	r18, 0x03	; 3
 76a:	31 05       	cpc	r19, r1
 76c:	34 f4       	brge	.+12     	; 0x77a <MDIO_stderrSetPinValue+0x156>
 76e:	8d 81       	ldd	r24, Y+5	; 0x05
 770:	9e 81       	ldd	r25, Y+6	; 0x06
 772:	81 30       	cpi	r24, 0x01	; 1
 774:	91 05       	cpc	r25, r1
 776:	69 f0       	breq	.+26     	; 0x792 <MDIO_stderrSetPinValue+0x16e>
 778:	68 c0       	rjmp	.+208    	; 0x84a <MDIO_stderrSetPinValue+0x226>
 77a:	2d 81       	ldd	r18, Y+5	; 0x05
 77c:	3e 81       	ldd	r19, Y+6	; 0x06
 77e:	23 30       	cpi	r18, 0x03	; 3
 780:	31 05       	cpc	r19, r1
 782:	a9 f1       	breq	.+106    	; 0x7ee <MDIO_stderrSetPinValue+0x1ca>
 784:	8d 81       	ldd	r24, Y+5	; 0x05
 786:	9e 81       	ldd	r25, Y+6	; 0x06
 788:	84 30       	cpi	r24, 0x04	; 4
 78a:	91 05       	cpc	r25, r1
 78c:	09 f4       	brne	.+2      	; 0x790 <MDIO_stderrSetPinValue+0x16c>
 78e:	46 c0       	rjmp	.+140    	; 0x81c <MDIO_stderrSetPinValue+0x1f8>
 790:	5c c0       	rjmp	.+184    	; 0x84a <MDIO_stderrSetPinValue+0x226>
			{
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 792:	a9 e3       	ldi	r26, 0x39	; 57
 794:	b0 e0       	ldi	r27, 0x00	; 0
 796:	e9 e3       	ldi	r30, 0x39	; 57
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	48 2f       	mov	r20, r24
 79e:	8b 81       	ldd	r24, Y+3	; 0x03
 7a0:	28 2f       	mov	r18, r24
 7a2:	30 e0       	ldi	r19, 0x00	; 0
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	02 2e       	mov	r0, r18
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <MDIO_stderrSetPinValue+0x18c>
 7ac:	88 0f       	add	r24, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	0a 94       	dec	r0
 7b2:	e2 f7       	brpl	.-8      	; 0x7ac <MDIO_stderrSetPinValue+0x188>
 7b4:	80 95       	com	r24
 7b6:	84 23       	and	r24, r20
 7b8:	12 96       	adiw	r26, 0x02	; 2
 7ba:	8c 93       	st	X, r24
 7bc:	12 97       	sbiw	r26, 0x02	; 2
 7be:	4d c0       	rjmp	.+154    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 7c0:	a6 e3       	ldi	r26, 0x36	; 54
 7c2:	b0 e0       	ldi	r27, 0x00	; 0
 7c4:	e6 e3       	ldi	r30, 0x36	; 54
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	82 81       	ldd	r24, Z+2	; 0x02
 7ca:	48 2f       	mov	r20, r24
 7cc:	8b 81       	ldd	r24, Y+3	; 0x03
 7ce:	28 2f       	mov	r18, r24
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	81 e0       	ldi	r24, 0x01	; 1
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	02 2e       	mov	r0, r18
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <MDIO_stderrSetPinValue+0x1ba>
 7da:	88 0f       	add	r24, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	0a 94       	dec	r0
 7e0:	e2 f7       	brpl	.-8      	; 0x7da <MDIO_stderrSetPinValue+0x1b6>
 7e2:	80 95       	com	r24
 7e4:	84 23       	and	r24, r20
 7e6:	12 96       	adiw	r26, 0x02	; 2
 7e8:	8c 93       	st	X, r24
 7ea:	12 97       	sbiw	r26, 0x02	; 2
 7ec:	36 c0       	rjmp	.+108    	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 7ee:	a3 e3       	ldi	r26, 0x33	; 51
 7f0:	b0 e0       	ldi	r27, 0x00	; 0
 7f2:	e3 e3       	ldi	r30, 0x33	; 51
 7f4:	f0 e0       	ldi	r31, 0x00	; 0
 7f6:	82 81       	ldd	r24, Z+2	; 0x02
 7f8:	48 2f       	mov	r20, r24
 7fa:	8b 81       	ldd	r24, Y+3	; 0x03
 7fc:	28 2f       	mov	r18, r24
 7fe:	30 e0       	ldi	r19, 0x00	; 0
 800:	81 e0       	ldi	r24, 0x01	; 1
 802:	90 e0       	ldi	r25, 0x00	; 0
 804:	02 2e       	mov	r0, r18
 806:	02 c0       	rjmp	.+4      	; 0x80c <MDIO_stderrSetPinValue+0x1e8>
 808:	88 0f       	add	r24, r24
 80a:	99 1f       	adc	r25, r25
 80c:	0a 94       	dec	r0
 80e:	e2 f7       	brpl	.-8      	; 0x808 <MDIO_stderrSetPinValue+0x1e4>
 810:	80 95       	com	r24
 812:	84 23       	and	r24, r20
 814:	12 96       	adiw	r26, 0x02	; 2
 816:	8c 93       	st	X, r24
 818:	12 97       	sbiw	r26, 0x02	; 2
 81a:	1f c0       	rjmp	.+62     	; 0x85a <MDIO_stderrSetPinValue+0x236>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 81c:	a0 e3       	ldi	r26, 0x30	; 48
 81e:	b0 e0       	ldi	r27, 0x00	; 0
 820:	e0 e3       	ldi	r30, 0x30	; 48
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	82 81       	ldd	r24, Z+2	; 0x02
 826:	48 2f       	mov	r20, r24
 828:	8b 81       	ldd	r24, Y+3	; 0x03
 82a:	28 2f       	mov	r18, r24
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	02 2e       	mov	r0, r18
 834:	02 c0       	rjmp	.+4      	; 0x83a <MDIO_stderrSetPinValue+0x216>
 836:	88 0f       	add	r24, r24
 838:	99 1f       	adc	r25, r25
 83a:	0a 94       	dec	r0
 83c:	e2 f7       	brpl	.-8      	; 0x836 <MDIO_stderrSetPinValue+0x212>
 83e:	80 95       	com	r24
 840:	84 23       	and	r24, r20
 842:	12 96       	adiw	r26, 0x02	; 2
 844:	8c 93       	st	X, r24
 846:	12 97       	sbiw	r26, 0x02	; 2
 848:	08 c0       	rjmp	.+16     	; 0x85a <MDIO_stderrSetPinValue+0x236>
				default: L_stderrError = E_NOK; break; /* Report an Error */
 84a:	81 e0       	ldi	r24, 0x01	; 1
 84c:	89 83       	std	Y+1, r24	; 0x01
 84e:	05 c0       	rjmp	.+10     	; 0x85a <MDIO_stderrSetPinValue+0x236>
			}
		}
		else
		{
			/* Report an Error */
			L_stderrError = E_NOK;
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	89 83       	std	Y+1, r24	; 0x01
 854:	02 c0       	rjmp	.+4      	; 0x85a <MDIO_stderrSetPinValue+0x236>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
 856:	81 e0       	ldi	r24, 0x01	; 1
 858:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 85a:	89 81       	ldd	r24, Y+1	; 0x01
}
 85c:	28 96       	adiw	r28, 0x08	; 8
 85e:	0f b6       	in	r0, 0x3f	; 63
 860:	f8 94       	cli
 862:	de bf       	out	0x3e, r29	; 62
 864:	0f be       	out	0x3f, r0	; 63
 866:	cd bf       	out	0x3d, r28	; 61
 868:	cf 91       	pop	r28
 86a:	df 91       	pop	r29
 86c:	08 95       	ret

0000086e <MDIO_stderrGetPinValue>:

STD_error_t MDIO_stderrGetPinValue(u8* ARG_u8pValue, u8 ARG_u8Port, u8 ARG_u8Pin)
{
 86e:	df 93       	push	r29
 870:	cf 93       	push	r28
 872:	cd b7       	in	r28, 0x3d	; 61
 874:	de b7       	in	r29, 0x3e	; 62
 876:	27 97       	sbiw	r28, 0x07	; 7
 878:	0f b6       	in	r0, 0x3f	; 63
 87a:	f8 94       	cli
 87c:	de bf       	out	0x3e, r29	; 62
 87e:	0f be       	out	0x3f, r0	; 63
 880:	cd bf       	out	0x3d, r28	; 61
 882:	9b 83       	std	Y+3, r25	; 0x03
 884:	8a 83       	std	Y+2, r24	; 0x02
 886:	6c 83       	std	Y+4, r22	; 0x04
 888:	4d 83       	std	Y+5, r20	; 0x05
	STD_error_t L_stderrError = E_OK;
 88a:	19 82       	std	Y+1, r1	; 0x01
	if(NULL_POINTER==ARG_u8pValue)
 88c:	8a 81       	ldd	r24, Y+2	; 0x02
 88e:	9b 81       	ldd	r25, Y+3	; 0x03
 890:	00 97       	sbiw	r24, 0x00	; 0
 892:	19 f4       	brne	.+6      	; 0x89a <MDIO_stderrGetPinValue+0x2c>
	{
		L_stderrError = E_NULL_POINTER;
 894:	82 e0       	ldi	r24, 0x02	; 2
 896:	89 83       	std	Y+1, r24	; 0x01
 898:	7a c0       	rjmp	.+244    	; 0x98e <MDIO_stderrGetPinValue+0x120>
	}
	else if((ARG_u8Pin>=MDIO_PIN0) && (ARG_u8Pin<=MDIO_PIN7))
 89a:	8d 81       	ldd	r24, Y+5	; 0x05
 89c:	88 30       	cpi	r24, 0x08	; 8
 89e:	08 f0       	brcs	.+2      	; 0x8a2 <MDIO_stderrGetPinValue+0x34>
 8a0:	74 c0       	rjmp	.+232    	; 0x98a <MDIO_stderrGetPinValue+0x11c>
	{
		switch(ARG_u8Port)
 8a2:	8c 81       	ldd	r24, Y+4	; 0x04
 8a4:	28 2f       	mov	r18, r24
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	3f 83       	std	Y+7, r19	; 0x07
 8aa:	2e 83       	std	Y+6, r18	; 0x06
 8ac:	4e 81       	ldd	r20, Y+6	; 0x06
 8ae:	5f 81       	ldd	r21, Y+7	; 0x07
 8b0:	42 30       	cpi	r20, 0x02	; 2
 8b2:	51 05       	cpc	r21, r1
 8b4:	59 f1       	breq	.+86     	; 0x90c <MDIO_stderrGetPinValue+0x9e>
 8b6:	8e 81       	ldd	r24, Y+6	; 0x06
 8b8:	9f 81       	ldd	r25, Y+7	; 0x07
 8ba:	83 30       	cpi	r24, 0x03	; 3
 8bc:	91 05       	cpc	r25, r1
 8be:	34 f4       	brge	.+12     	; 0x8cc <MDIO_stderrGetPinValue+0x5e>
 8c0:	2e 81       	ldd	r18, Y+6	; 0x06
 8c2:	3f 81       	ldd	r19, Y+7	; 0x07
 8c4:	21 30       	cpi	r18, 0x01	; 1
 8c6:	31 05       	cpc	r19, r1
 8c8:	69 f0       	breq	.+26     	; 0x8e4 <MDIO_stderrGetPinValue+0x76>
 8ca:	5c c0       	rjmp	.+184    	; 0x984 <MDIO_stderrGetPinValue+0x116>
 8cc:	4e 81       	ldd	r20, Y+6	; 0x06
 8ce:	5f 81       	ldd	r21, Y+7	; 0x07
 8d0:	43 30       	cpi	r20, 0x03	; 3
 8d2:	51 05       	cpc	r21, r1
 8d4:	79 f1       	breq	.+94     	; 0x934 <MDIO_stderrGetPinValue+0xc6>
 8d6:	8e 81       	ldd	r24, Y+6	; 0x06
 8d8:	9f 81       	ldd	r25, Y+7	; 0x07
 8da:	84 30       	cpi	r24, 0x04	; 4
 8dc:	91 05       	cpc	r25, r1
 8de:	09 f4       	brne	.+2      	; 0x8e2 <MDIO_stderrGetPinValue+0x74>
 8e0:	3d c0       	rjmp	.+122    	; 0x95c <MDIO_stderrGetPinValue+0xee>
 8e2:	50 c0       	rjmp	.+160    	; 0x984 <MDIO_stderrGetPinValue+0x116>
		{
			case MDIO_PORTA: *ARG_u8pValue = GET_BIT(GPIOA -> PIN, ARG_u8Pin); break;
 8e4:	e9 e3       	ldi	r30, 0x39	; 57
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	80 81       	ld	r24, Z
 8ea:	28 2f       	mov	r18, r24
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	8d 81       	ldd	r24, Y+5	; 0x05
 8f0:	88 2f       	mov	r24, r24
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	a9 01       	movw	r20, r18
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <MDIO_stderrGetPinValue+0x8e>
 8f8:	55 95       	asr	r21
 8fa:	47 95       	ror	r20
 8fc:	8a 95       	dec	r24
 8fe:	e2 f7       	brpl	.-8      	; 0x8f8 <MDIO_stderrGetPinValue+0x8a>
 900:	ca 01       	movw	r24, r20
 902:	81 70       	andi	r24, 0x01	; 1
 904:	ea 81       	ldd	r30, Y+2	; 0x02
 906:	fb 81       	ldd	r31, Y+3	; 0x03
 908:	80 83       	st	Z, r24
 90a:	41 c0       	rjmp	.+130    	; 0x98e <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTB: *ARG_u8pValue = GET_BIT(GPIOB -> PIN, ARG_u8Pin); break;
 90c:	e6 e3       	ldi	r30, 0x36	; 54
 90e:	f0 e0       	ldi	r31, 0x00	; 0
 910:	80 81       	ld	r24, Z
 912:	28 2f       	mov	r18, r24
 914:	30 e0       	ldi	r19, 0x00	; 0
 916:	8d 81       	ldd	r24, Y+5	; 0x05
 918:	88 2f       	mov	r24, r24
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	a9 01       	movw	r20, r18
 91e:	02 c0       	rjmp	.+4      	; 0x924 <MDIO_stderrGetPinValue+0xb6>
 920:	55 95       	asr	r21
 922:	47 95       	ror	r20
 924:	8a 95       	dec	r24
 926:	e2 f7       	brpl	.-8      	; 0x920 <MDIO_stderrGetPinValue+0xb2>
 928:	ca 01       	movw	r24, r20
 92a:	81 70       	andi	r24, 0x01	; 1
 92c:	ea 81       	ldd	r30, Y+2	; 0x02
 92e:	fb 81       	ldd	r31, Y+3	; 0x03
 930:	80 83       	st	Z, r24
 932:	2d c0       	rjmp	.+90     	; 0x98e <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTC: *ARG_u8pValue = GET_BIT(GPIOC -> PIN, ARG_u8Pin); break;
 934:	e3 e3       	ldi	r30, 0x33	; 51
 936:	f0 e0       	ldi	r31, 0x00	; 0
 938:	80 81       	ld	r24, Z
 93a:	28 2f       	mov	r18, r24
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	8d 81       	ldd	r24, Y+5	; 0x05
 940:	88 2f       	mov	r24, r24
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	a9 01       	movw	r20, r18
 946:	02 c0       	rjmp	.+4      	; 0x94c <MDIO_stderrGetPinValue+0xde>
 948:	55 95       	asr	r21
 94a:	47 95       	ror	r20
 94c:	8a 95       	dec	r24
 94e:	e2 f7       	brpl	.-8      	; 0x948 <MDIO_stderrGetPinValue+0xda>
 950:	ca 01       	movw	r24, r20
 952:	81 70       	andi	r24, 0x01	; 1
 954:	ea 81       	ldd	r30, Y+2	; 0x02
 956:	fb 81       	ldd	r31, Y+3	; 0x03
 958:	80 83       	st	Z, r24
 95a:	19 c0       	rjmp	.+50     	; 0x98e <MDIO_stderrGetPinValue+0x120>
			case MDIO_PORTD: *ARG_u8pValue = GET_BIT(GPIOD -> PIN, ARG_u8Pin); break;
 95c:	e0 e3       	ldi	r30, 0x30	; 48
 95e:	f0 e0       	ldi	r31, 0x00	; 0
 960:	80 81       	ld	r24, Z
 962:	28 2f       	mov	r18, r24
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	8d 81       	ldd	r24, Y+5	; 0x05
 968:	88 2f       	mov	r24, r24
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	a9 01       	movw	r20, r18
 96e:	02 c0       	rjmp	.+4      	; 0x974 <MDIO_stderrGetPinValue+0x106>
 970:	55 95       	asr	r21
 972:	47 95       	ror	r20
 974:	8a 95       	dec	r24
 976:	e2 f7       	brpl	.-8      	; 0x970 <MDIO_stderrGetPinValue+0x102>
 978:	ca 01       	movw	r24, r20
 97a:	81 70       	andi	r24, 0x01	; 1
 97c:	ea 81       	ldd	r30, Y+2	; 0x02
 97e:	fb 81       	ldd	r31, Y+3	; 0x03
 980:	80 83       	st	Z, r24
 982:	05 c0       	rjmp	.+10     	; 0x98e <MDIO_stderrGetPinValue+0x120>
			default: L_stderrError = E_NOK; break; /* Report an Error */
 984:	81 e0       	ldi	r24, 0x01	; 1
 986:	89 83       	std	Y+1, r24	; 0x01
 988:	02 c0       	rjmp	.+4      	; 0x98e <MDIO_stderrGetPinValue+0x120>
		}
	}
	else
	{
		/* Report an Error */
		L_stderrError = E_NOK;
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 98e:	89 81       	ldd	r24, Y+1	; 0x01
}
 990:	27 96       	adiw	r28, 0x07	; 7
 992:	0f b6       	in	r0, 0x3f	; 63
 994:	f8 94       	cli
 996:	de bf       	out	0x3e, r29	; 62
 998:	0f be       	out	0x3f, r0	; 63
 99a:	cd bf       	out	0x3d, r28	; 61
 99c:	cf 91       	pop	r28
 99e:	df 91       	pop	r29
 9a0:	08 95       	ret

000009a2 <MDIO_stderrTogglePinValue>:

STD_error_t MDIO_stderrTogglePinValue(u8 ARG_u8Port ,u8 ARG_u8Pin)
{
 9a2:	df 93       	push	r29
 9a4:	cf 93       	push	r28
 9a6:	00 d0       	rcall	.+0      	; 0x9a8 <MDIO_stderrTogglePinValue+0x6>
 9a8:	00 d0       	rcall	.+0      	; 0x9aa <MDIO_stderrTogglePinValue+0x8>
 9aa:	0f 92       	push	r0
 9ac:	cd b7       	in	r28, 0x3d	; 61
 9ae:	de b7       	in	r29, 0x3e	; 62
 9b0:	8a 83       	std	Y+2, r24	; 0x02
 9b2:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrError= E_OK;
 9b4:	19 82       	std	Y+1, r1	; 0x01
	if(ARG_u8Pin>= MDIO_PIN0 && ARG_u8Pin<= MDIO_PIN7)
 9b6:	8b 81       	ldd	r24, Y+3	; 0x03
 9b8:	88 30       	cpi	r24, 0x08	; 8
 9ba:	08 f0       	brcs	.+2      	; 0x9be <MDIO_stderrTogglePinValue+0x1c>
 9bc:	7c c0       	rjmp	.+248    	; 0xab6 <MDIO_stderrTogglePinValue+0x114>
	{
		switch(ARG_u8Port)
 9be:	8a 81       	ldd	r24, Y+2	; 0x02
 9c0:	28 2f       	mov	r18, r24
 9c2:	30 e0       	ldi	r19, 0x00	; 0
 9c4:	3d 83       	std	Y+5, r19	; 0x05
 9c6:	2c 83       	std	Y+4, r18	; 0x04
 9c8:	8c 81       	ldd	r24, Y+4	; 0x04
 9ca:	9d 81       	ldd	r25, Y+5	; 0x05
 9cc:	82 30       	cpi	r24, 0x02	; 2
 9ce:	91 05       	cpc	r25, r1
 9d0:	69 f1       	breq	.+90     	; 0xa2c <MDIO_stderrTogglePinValue+0x8a>
 9d2:	2c 81       	ldd	r18, Y+4	; 0x04
 9d4:	3d 81       	ldd	r19, Y+5	; 0x05
 9d6:	23 30       	cpi	r18, 0x03	; 3
 9d8:	31 05       	cpc	r19, r1
 9da:	34 f4       	brge	.+12     	; 0x9e8 <MDIO_stderrTogglePinValue+0x46>
 9dc:	8c 81       	ldd	r24, Y+4	; 0x04
 9de:	9d 81       	ldd	r25, Y+5	; 0x05
 9e0:	81 30       	cpi	r24, 0x01	; 1
 9e2:	91 05       	cpc	r25, r1
 9e4:	69 f0       	breq	.+26     	; 0xa00 <MDIO_stderrTogglePinValue+0x5e>
 9e6:	64 c0       	rjmp	.+200    	; 0xab0 <MDIO_stderrTogglePinValue+0x10e>
 9e8:	2c 81       	ldd	r18, Y+4	; 0x04
 9ea:	3d 81       	ldd	r19, Y+5	; 0x05
 9ec:	23 30       	cpi	r18, 0x03	; 3
 9ee:	31 05       	cpc	r19, r1
 9f0:	99 f1       	breq	.+102    	; 0xa58 <MDIO_stderrTogglePinValue+0xb6>
 9f2:	8c 81       	ldd	r24, Y+4	; 0x04
 9f4:	9d 81       	ldd	r25, Y+5	; 0x05
 9f6:	84 30       	cpi	r24, 0x04	; 4
 9f8:	91 05       	cpc	r25, r1
 9fa:	09 f4       	brne	.+2      	; 0x9fe <MDIO_stderrTogglePinValue+0x5c>
 9fc:	43 c0       	rjmp	.+134    	; 0xa84 <MDIO_stderrTogglePinValue+0xe2>
 9fe:	58 c0       	rjmp	.+176    	; 0xab0 <MDIO_stderrTogglePinValue+0x10e>
		{
			case MDIO_PORTA: TOGGLE_BIT(GPIOA->PORT ,ARG_u8Pin) ; break;
 a00:	a9 e3       	ldi	r26, 0x39	; 57
 a02:	b0 e0       	ldi	r27, 0x00	; 0
 a04:	e9 e3       	ldi	r30, 0x39	; 57
 a06:	f0 e0       	ldi	r31, 0x00	; 0
 a08:	82 81       	ldd	r24, Z+2	; 0x02
 a0a:	48 2f       	mov	r20, r24
 a0c:	8b 81       	ldd	r24, Y+3	; 0x03
 a0e:	28 2f       	mov	r18, r24
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	81 e0       	ldi	r24, 0x01	; 1
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	02 2e       	mov	r0, r18
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <MDIO_stderrTogglePinValue+0x7c>
 a1a:	88 0f       	add	r24, r24
 a1c:	99 1f       	adc	r25, r25
 a1e:	0a 94       	dec	r0
 a20:	e2 f7       	brpl	.-8      	; 0xa1a <MDIO_stderrTogglePinValue+0x78>
 a22:	84 27       	eor	r24, r20
 a24:	12 96       	adiw	r26, 0x02	; 2
 a26:	8c 93       	st	X, r24
 a28:	12 97       	sbiw	r26, 0x02	; 2
 a2a:	47 c0       	rjmp	.+142    	; 0xaba <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTB: TOGGLE_BIT(GPIOB->PORT ,ARG_u8Pin) ; break;
 a2c:	a6 e3       	ldi	r26, 0x36	; 54
 a2e:	b0 e0       	ldi	r27, 0x00	; 0
 a30:	e6 e3       	ldi	r30, 0x36	; 54
 a32:	f0 e0       	ldi	r31, 0x00	; 0
 a34:	82 81       	ldd	r24, Z+2	; 0x02
 a36:	48 2f       	mov	r20, r24
 a38:	8b 81       	ldd	r24, Y+3	; 0x03
 a3a:	28 2f       	mov	r18, r24
 a3c:	30 e0       	ldi	r19, 0x00	; 0
 a3e:	81 e0       	ldi	r24, 0x01	; 1
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	02 2e       	mov	r0, r18
 a44:	02 c0       	rjmp	.+4      	; 0xa4a <MDIO_stderrTogglePinValue+0xa8>
 a46:	88 0f       	add	r24, r24
 a48:	99 1f       	adc	r25, r25
 a4a:	0a 94       	dec	r0
 a4c:	e2 f7       	brpl	.-8      	; 0xa46 <MDIO_stderrTogglePinValue+0xa4>
 a4e:	84 27       	eor	r24, r20
 a50:	12 96       	adiw	r26, 0x02	; 2
 a52:	8c 93       	st	X, r24
 a54:	12 97       	sbiw	r26, 0x02	; 2
 a56:	31 c0       	rjmp	.+98     	; 0xaba <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTC: TOGGLE_BIT(GPIOC->PORT ,ARG_u8Pin) ; break;
 a58:	a3 e3       	ldi	r26, 0x33	; 51
 a5a:	b0 e0       	ldi	r27, 0x00	; 0
 a5c:	e3 e3       	ldi	r30, 0x33	; 51
 a5e:	f0 e0       	ldi	r31, 0x00	; 0
 a60:	82 81       	ldd	r24, Z+2	; 0x02
 a62:	48 2f       	mov	r20, r24
 a64:	8b 81       	ldd	r24, Y+3	; 0x03
 a66:	28 2f       	mov	r18, r24
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	81 e0       	ldi	r24, 0x01	; 1
 a6c:	90 e0       	ldi	r25, 0x00	; 0
 a6e:	02 2e       	mov	r0, r18
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <MDIO_stderrTogglePinValue+0xd4>
 a72:	88 0f       	add	r24, r24
 a74:	99 1f       	adc	r25, r25
 a76:	0a 94       	dec	r0
 a78:	e2 f7       	brpl	.-8      	; 0xa72 <MDIO_stderrTogglePinValue+0xd0>
 a7a:	84 27       	eor	r24, r20
 a7c:	12 96       	adiw	r26, 0x02	; 2
 a7e:	8c 93       	st	X, r24
 a80:	12 97       	sbiw	r26, 0x02	; 2
 a82:	1b c0       	rjmp	.+54     	; 0xaba <MDIO_stderrTogglePinValue+0x118>
			case MDIO_PORTD: TOGGLE_BIT(GPIOD->PORT ,ARG_u8Pin) ; break;
 a84:	a0 e3       	ldi	r26, 0x30	; 48
 a86:	b0 e0       	ldi	r27, 0x00	; 0
 a88:	e0 e3       	ldi	r30, 0x30	; 48
 a8a:	f0 e0       	ldi	r31, 0x00	; 0
 a8c:	82 81       	ldd	r24, Z+2	; 0x02
 a8e:	48 2f       	mov	r20, r24
 a90:	8b 81       	ldd	r24, Y+3	; 0x03
 a92:	28 2f       	mov	r18, r24
 a94:	30 e0       	ldi	r19, 0x00	; 0
 a96:	81 e0       	ldi	r24, 0x01	; 1
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	02 2e       	mov	r0, r18
 a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <MDIO_stderrTogglePinValue+0x100>
 a9e:	88 0f       	add	r24, r24
 aa0:	99 1f       	adc	r25, r25
 aa2:	0a 94       	dec	r0
 aa4:	e2 f7       	brpl	.-8      	; 0xa9e <MDIO_stderrTogglePinValue+0xfc>
 aa6:	84 27       	eor	r24, r20
 aa8:	12 96       	adiw	r26, 0x02	; 2
 aaa:	8c 93       	st	X, r24
 aac:	12 97       	sbiw	r26, 0x02	; 2
 aae:	05 c0       	rjmp	.+10     	; 0xaba <MDIO_stderrTogglePinValue+0x118>
			default: L_stderrError = E_NOK; break; /* report an error*/
 ab0:	81 e0       	ldi	r24, 0x01	; 1
 ab2:	89 83       	std	Y+1, r24	; 0x01
 ab4:	02 c0       	rjmp	.+4      	; 0xaba <MDIO_stderrTogglePinValue+0x118>
		}	
	}
	else{
		/* Report an Error */
		L_stderrError=E_NULL_POINTER;
 ab6:	82 e0       	ldi	r24, 0x02	; 2
 ab8:	89 83       	std	Y+1, r24	; 0x01
	}
	return L_stderrError;
 aba:	89 81       	ldd	r24, Y+1	; 0x01
}
 abc:	0f 90       	pop	r0
 abe:	0f 90       	pop	r0
 ac0:	0f 90       	pop	r0
 ac2:	0f 90       	pop	r0
 ac4:	0f 90       	pop	r0
 ac6:	cf 91       	pop	r28
 ac8:	df 91       	pop	r29
 aca:	08 95       	ret

00000acc <main>:

#define UBRRH         *((volatile u8*)0x40)
#define UBRRL         *((volatile u8*)0x29)


int main(void){
 acc:	df 93       	push	r29
 ace:	cf 93       	push	r28
 ad0:	00 d0       	rcall	.+0      	; 0xad2 <main+0x6>
 ad2:	0f 92       	push	r0
 ad4:	cd b7       	in	r28, 0x3d	; 61
 ad6:	de b7       	in	r29, 0x3e	; 62

	u8 L_u8DataRX=0;
 ad8:	19 82       	std	Y+1, r1	; 0x01

	/* UART Config */
	CLEAR_BIT(UCSRB,UCSZ2);
 ada:	aa e2       	ldi	r26, 0x2A	; 42
 adc:	b0 e0       	ldi	r27, 0x00	; 0
 ade:	ea e2       	ldi	r30, 0x2A	; 42
 ae0:	f0 e0       	ldi	r31, 0x00	; 0
 ae2:	80 81       	ld	r24, Z
 ae4:	8b 7f       	andi	r24, 0xFB	; 251
 ae6:	8c 93       	st	X, r24
	UCSRC = (1<<URSEL) | (3<<1) ;
 ae8:	e0 e4       	ldi	r30, 0x40	; 64
 aea:	f0 e0       	ldi	r31, 0x00	; 0
 aec:	86 e8       	ldi	r24, 0x86	; 134
 aee:	80 83       	st	Z, r24
	UBRRL = 51;
 af0:	e9 e2       	ldi	r30, 0x29	; 41
 af2:	f0 e0       	ldi	r31, 0x00	; 0
 af4:	83 e3       	ldi	r24, 0x33	; 51
 af6:	80 83       	st	Z, r24
	SET_BIT(UCSRB, RXEN);
 af8:	aa e2       	ldi	r26, 0x2A	; 42
 afa:	b0 e0       	ldi	r27, 0x00	; 0
 afc:	ea e2       	ldi	r30, 0x2A	; 42
 afe:	f0 e0       	ldi	r31, 0x00	; 0
 b00:	80 81       	ld	r24, Z
 b02:	80 61       	ori	r24, 0x10	; 16
 b04:	8c 93       	st	X, r24
	SET_BIT(UCSRB, TXEN);
 b06:	aa e2       	ldi	r26, 0x2A	; 42
 b08:	b0 e0       	ldi	r27, 0x00	; 0
 b0a:	ea e2       	ldi	r30, 0x2A	; 42
 b0c:	f0 e0       	ldi	r31, 0x00	; 0
 b0e:	80 81       	ld	r24, Z
 b10:	88 60       	ori	r24, 0x08	; 8
 b12:	8c 93       	st	X, r24

	MDIO_stderrSetPinDirection(MDIO_PORTA,0,MDIO_OUTPUT);
 b14:	81 e0       	ldi	r24, 0x01	; 1
 b16:	60 e0       	ldi	r22, 0x00	; 0
 b18:	41 e0       	ldi	r20, 0x01	; 1
 b1a:	0e 94 1b 01 	call	0x236	; 0x236 <MDIO_stderrSetPinDirection>
	MDIO_stderrSetPinDirection(MDIO_PORTA,1,MDIO_OUTPUT);
 b1e:	81 e0       	ldi	r24, 0x01	; 1
 b20:	61 e0       	ldi	r22, 0x01	; 1
 b22:	41 e0       	ldi	r20, 0x01	; 1
 b24:	0e 94 1b 01 	call	0x236	; 0x236 <MDIO_stderrSetPinDirection>


	while(1){

		while(GET_BIT(UCSRA,RXC)==0);
 b28:	eb e2       	ldi	r30, 0x2B	; 43
 b2a:	f0 e0       	ldi	r31, 0x00	; 0
 b2c:	80 81       	ld	r24, Z
 b2e:	88 23       	and	r24, r24
 b30:	dc f7       	brge	.-10     	; 0xb28 <main+0x5c>
		L_u8DataRX=UDR;
 b32:	ec e2       	ldi	r30, 0x2C	; 44
 b34:	f0 e0       	ldi	r31, 0x00	; 0
 b36:	80 81       	ld	r24, Z
 b38:	89 83       	std	Y+1, r24	; 0x01

		switch(L_u8DataRX)
 b3a:	89 81       	ldd	r24, Y+1	; 0x01
 b3c:	28 2f       	mov	r18, r24
 b3e:	30 e0       	ldi	r19, 0x00	; 0
 b40:	3b 83       	std	Y+3, r19	; 0x03
 b42:	2a 83       	std	Y+2, r18	; 0x02
 b44:	8a 81       	ldd	r24, Y+2	; 0x02
 b46:	9b 81       	ldd	r25, Y+3	; 0x03
 b48:	80 33       	cpi	r24, 0x30	; 48
 b4a:	91 05       	cpc	r25, r1
 b4c:	31 f0       	breq	.+12     	; 0xb5a <main+0x8e>
 b4e:	2a 81       	ldd	r18, Y+2	; 0x02
 b50:	3b 81       	ldd	r19, Y+3	; 0x03
 b52:	21 33       	cpi	r18, 0x31	; 49
 b54:	31 05       	cpc	r19, r1
 b56:	31 f0       	breq	.+12     	; 0xb64 <main+0x98>
 b58:	e7 cf       	rjmp	.-50     	; 0xb28 <main+0x5c>
		{
		case '0': MDIO_stderrTogglePinValue(MDIO_PORTA,0); break;
 b5a:	81 e0       	ldi	r24, 0x01	; 1
 b5c:	60 e0       	ldi	r22, 0x00	; 0
 b5e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <MDIO_stderrTogglePinValue>
 b62:	e2 cf       	rjmp	.-60     	; 0xb28 <main+0x5c>
		case '1': MDIO_stderrTogglePinValue(MDIO_PORTA,1); break;
 b64:	81 e0       	ldi	r24, 0x01	; 1
 b66:	61 e0       	ldi	r22, 0x01	; 1
 b68:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <MDIO_stderrTogglePinValue>
 b6c:	dd cf       	rjmp	.-70     	; 0xb28 <main+0x5c>

00000b6e <_exit>:
 b6e:	f8 94       	cli

00000b70 <__stop_program>:
 b70:	ff cf       	rjmp	.-2      	; 0xb70 <__stop_program>
